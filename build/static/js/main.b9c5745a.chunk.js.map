{"version":3,"sources":["MalikTraders/Components/NavBar/NavBar.jsx","MalikTraders/Components/AdminLayout/AdminLayout.jsx","MalikTraders/Components/DashBoard/DashBoardNavigator/DashBoardNavigator.jsx","MalikTraders/Components/DashBoard/TodayRecovery/TodayRecovery.jsx","MalikTraders/Components/DashBoard/MonthlyRecoveryReport/MonthlyRecoveryReport.jsx","MalikTraders/Components/DashBoard/MonthlyReport/MonthlyReportChart.jsx","MalikTraders/Components/DashBoard/MonthlyReport/MonthlyReport.jsx","MalikTraders/Components/DashBoard/MainDashBoard.jsx","MalikTraders/MalikTraderApp.jsx","MalikTraders/Components/Pages/Login/Login.jsx","MalikTraders/Components/Pages/UserManagement/UserList/AllUserList.jsx","MalikTraders/Components/Pages/UserManagement/UserManagement.jsx","MalikTraders/Components/Pages/UserManagement/UI/TbInputControl.jsx","MalikTraders/Components/Pages/UserManagement/AddNewPayment/AddNewPayment.jsx","MalikTraders/Components/Pages/AccountManagement/DisplayPaymentDetails/PaymentDetails.jsx","MalikTraders/Components/Pages/AccountManagement/UI/AccountCard.jsx","MalikTraders/Components/Pages/AccountManagement/ShowAccountDetails.jsx","MalikTraders/Components/Pages/AccountManagement/PaymentHistory/PaymentHistory.jsx","MalikTraders/Components/Pages/UserManagement/CreateUser/CreateUser.jsx","MalikTraders/Components/Pages/UserManagement/AttachWithNewScheme/AttachtoNewScheme.jsx","MalikTraders/Components/Pages/ProductManager/ProductManager.jsx","MalikTraders/Components/Pages/ProductManager/UI/TbInput.jsx","MalikTraders/Components/Pages/ProductManager/AddNewProduct/AddNewProduct.jsx","MalikTraders/Components/Pages/AccountManagement/ModifyPayment/ModifyPayment.jsx","App.js","reportWebVitals.js","Store/User/ActionTypes.js","Store/User/Reducer.js","Store/Store.js","index.js"],"names":["NavBar","className","id","to","class","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","aria-haspopup","aria-labelledby","Component","AdminLayout","props","children","DashBoardNavigator","active","inActive","onClick","menuSwitchingHandler","currentMenu","TodayRecovery","state","dataArray","recoverySum","loadData","axios","get","window","$domain","then","resp","setState","data","map","payed_Amount","this","length","name","phone","scheme","pay_Time","accId","MonthlyRemainRecovery","dataLoader","event","Date","target","value","toDateString","min","defaultValue","onChange","MonthlyReportChart","width","height","chartType","loader","options","title","vAxis","hAxis","seriesType","series","6","rootProps","MonthlyReport","MainDashBoard","menuSwitcher","menuSwitchHandler","menu","MTTraderApp","useState","isLogin","setLogin","undefined","Cookie","style","Login","loginUser","displayAnimator","Axios","post","user","password","role","alert","set","userName","email","path","maxAge","login","catch","err","response","bind","textAlign","aria-hidden","onSubmit","Spinner","animation","alignContent","UserList","LoadUserList","userList","UserEnableandDisableHandler","userId","confirm","console","log","gender","phoneNumber","cnic","lastLogin","toLocaleTimeString","registration_Date","isUserDisabled","UserManagement","TbInputControl","for","ctrlName","Name","inutType","DataInputHandler","AddNewPayment","amount","redirect","ReadyUser","postPaymnet","cookies","Accid","PaymentDetails","IsReadyforPayment","setIsReadyforPayment","peymentHistory","payment","payingDate","payedAmount","AccId","AccountCard","showToast","setShowtoast","toast","closingReason","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","schemeName","desc","isAccClosed","paymentDisplayHandler","gotoPaymentHistory","disableAcc","AccountDetails","gotoHistoryPaymentRedirectHandler","gotoHistoryPaymentRedirect","redir","AccountDisableandEnableHandler","ClosingDescription","prompt","put","Accounts","Account","DisplayAcc","accPaymentDetails","Schemes","match","params","Scheme","mtServiceId","details","closingDescription","PaymentHistory","historyList","postedByUserId","arrayHistory","push","payDate","paymentId","PostedByUser","CreateNewUser","setFullName","setUserName","setGender","setEmail","setPassword","setCNIC","setAddress","setPhoneNumber","setAccountNumber","setBankName","setMonthlyInstallment","newAccountState","accountData","accounts","bankName","amountPayable","monthlyInstalment","accNumber","userDetails","address","setUserType","MTServiceSelection","MTServices","MTservice","amountInputRef","current","CreatNewUser","React","createRef","MTService","forModificationState","selected","ref","AttachWithNewScheme","TotalAmountPayable","MonthlyInstallment","AccProtoType","userid","PostData","duplicated","acc","message","mtService","ProductManager","mtServices","service","TbInput","AddNewProduct","newProduct","inputHandler","handleName","handleAmount","handleDetails","postNewProduct","ModifyPayment","EntryDateTime","accDetailsId","modifiedResp","EntryDateTimeHandler","App","exact","component","MTHome","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","SIGNIN_USER","SIGNOUT_USER","initState","loggedinUser","displayName","pictureURL","loggedinStatus","userReducer","action","Cookies","storedCookie","ActionTypes","payload","SetEmptyUser","store","createStore","applyMiddleware","getState","next","returnValue","ReactDOM","render","StrictMode","Store","document","getElementById"],"mappings":"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","file":"static/js/main.b9c5745a.chunk.js","sourcesContent":["import { Component } from \"react\";\r\nimport {Link} from 'react-router-dom'\r\nclass NavBar extends Component{\r\n    render(){\r\n        return(\r\n            <nav className=\" navbar-expand-lg navbar navbar-light bg-dark  py-3\" id=\"mainNav\">\r\n                <div className=\"container\">\r\n                    <Link to=\"/\" class=\"navbar-brand js-scroll-trigger\" >Admin Control Panel</Link>\r\n                    <button className=\"navbar-toggler navbar-toggler-right\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarResponsive\" aria-controls=\"navbarResponsive\" aria-expanded=\"false\" aria-label=\"Toggle navigation\"><span className=\"navbar-toggler-icon\"></span></button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarResponsive\">\r\n                        <ul className=\"navbar-nav ml-auto my-2 my-lg-0\">\r\n                            <li className=\"nav-item\"><Link className=\"nav-link js-scroll-trigger\" to=\"/\">Home</Link></li>\r\n                            \r\n                            <li className=\"nav-item dropdown\">\r\n                                <Link className=\"nav-link dropdown-toggle\"  id=\"navbarDropdownMenuLink\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" >\r\n                                User\r\n                                </Link>\r\n                                <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdownMenuLink\">\r\n                                    <Link className=\"dropdown-item\"  to=\"/manageuser\" >Show User List</Link>\r\n                                    <Link className=\"dropdown-item\" to='/CreateUser' >Create New User</Link>\r\n                                    <Link className=\"dropdown-item disabled\" >Update Existing User</Link>\r\n                                </div>\r\n                            </li>\r\n                            <li className=\"nav-item\"><Link className=\"nav-link js-scroll-trigger\" to=\"/Products\">Products</Link></li>\r\n                            \r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        );   \r\n    } \r\n}\r\n\r\n\r\nexport default NavBar;","import React from 'react';\r\nimport NavBar from '../NavBar/NavBar';\r\nconst AdminLayout = props =>{\r\n    return(\r\n        <>\r\n            <NavBar/>\r\n            {props.children}\r\n        </>\r\n    );    \r\n}\r\n\r\nexport default AdminLayout;","\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst DashBoardNavigator = (props)=>{\r\n    var active = \"nav-link active\";\r\n    var inActive = \"nav-link\";\r\n    return(\r\n        <ul className=\"nav nav-tabs flex-column\">\r\n            <li className=\"nav-item\">\r\n                <Link onClick = {()=>props.menuSwitchingHandler(1)} className={props.currentMenu === 1 ? active : inActive }  >Today Recovery Details</Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n                <Link onClick = {()=>props.menuSwitchingHandler(2)}  className={props.currentMenu === 2 ? active : inActive }>Show Remain Recovery</Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n                <Link onClick = {()=>props.menuSwitchingHandler(3)} className={props.currentMenu === 3 ? active : inActive }>Show Report by Month</Link>\r\n            </li>\r\n        </ul>\r\n    );\r\n}\r\n\r\nexport default DashBoardNavigator;","import axios from 'axios';\r\nimport {Component} from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nclass TodayRecovery extends Component {\r\n\r\n    state= {\r\n        dataArray: [],\r\n        recoverySum: 0\r\n    }\r\n\r\n    loadData = ()=>{\r\n        axios.get(window.$domain + 'api/Analatics/GetTodayRecovery')\r\n        .then(resp=>{\r\n            this.setState({dataArray: resp.data});\r\n            this.state.dataArray.map(\r\n              data=>{\r\n                this.setState({recoverySum: this.state.recoverySum + data.payed_Amount});\r\n              }\r\n            )\r\n        });\r\n    }\r\n    componentDidMount(){\r\n        if(this.state.dataArray.length === 0)\r\n        this.loadData();\r\n        \r\n    }\r\n    render(){\r\n      var sum = 0;\r\n        return <>\r\n          <div class=\"card  shadow h-30 py-1\">\r\n            <div class=\"card-body\">\r\n                <div class=\"row no-gutters align-items-center\">\r\n                    <div class=\"col mr-2\">\r\n                        <div class=\"text-xs font-weight-bold text-primary text-uppercase mb-1\">\r\n                            Gain Recovery (Today)</div>\r\n                        <div class=\"h5 mb-0 font-weight-bold text-gray-800\">PKR{' '+this.state.recoverySum}</div>\r\n                    </div>\r\n                    <div class=\"col-auto\">\r\n                        <i class=\"fas fa-calendar fa-2x text-gray-300\"></i>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n          </div>\r\n          <table class=\"table shadow table-bordered\">\r\n            <thead>\r\n              <tr>\r\n                <th >Client Name</th>\r\n                <th >Phone</th>\r\n                <th >Payed Amount</th>\r\n                <th >Scheme Name</th>\r\n                <th >Payment Time</th>\r\n                <th >Show Account</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {\r\n                  this.state.dataArray.length !== 0 ? this.state.dataArray.map(\r\n                    data =>{\r\n                    return  <tr>\r\n                                  <th>{data.name}</th>\r\n                                  <td>{data.phone}</td>\r\n                                  <td>{data.payed_Amount}</td>\r\n                                  <td>{data.scheme}</td>\r\n                                  <td>{data.pay_Time}</td>\r\n                                  <td><Link to={'/Accounts/'+ data.accId +'/Payment'}>show</Link></td>\r\n                              </tr>}\r\n                ): ''\r\n              }\r\n            </tbody>\r\n          </table>\r\n        </>\r\n    }\r\n}\r\n\r\nexport default TodayRecovery;","import axios from 'axios';\r\nimport {Component} from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nclass MonthlyRemainRecovery extends Component {\r\n\r\n    state= {\r\n        dataArray: []\r\n    }\r\n\r\n    loadData = ()=>{\r\n        axios.get(window.$domain + 'api/Analatics/GetRemainingRecoveryCurrentMonth')\r\n        .then(resp=>{\r\n            this.setState({dataArray: resp.data});\r\n        });\r\n    }\r\n    componentDidMount(){\r\n        if(this.state.dataArray.length === 0)\r\n        this.loadData();\r\n    }\r\n    dataLoader= event=>{\r\n      \r\n      axios.get(window.$domain + 'api/Analatics/GetRemainingRecoveryGivenMonth/' + new Date(event.target.value).toDateString() )\r\n        .then(resp=>{\r\n            this.setState({dataArray: resp.data});\r\n        });\r\n    }\r\n    render(){\r\n        return <>\r\n                  <input className='shadow form-control ml-1' type=\"month\" id=\"start\" name=\"start\"\r\n                  min=\"2019-03\" defaultValue = '2021-10' onChange={this.dataLoader}></input>\r\n                  \r\n                  <table class=\"table shadow table-bordered\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th >Client Name</th>\r\n                        <th >Phone</th>\r\n                        <th >Scheme Name</th>\r\n                        <th >Show Account</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {\r\n                          this.state.dataArray.length !== 0 ? this.state.dataArray.map(\r\n                            data => <tr>\r\n                                        <th>{data.name}</th>\r\n                                        <td>{data.phone}</td>\r\n                                        <td>{data.scheme}</td>\r\n                                        <td><Link to={'/Accounts/'+ data.accId +'/Payment'}>show</Link></td>\r\n                                    </tr>\r\n                        ): ''\r\n                      }\r\n                    </tbody>\r\n                  </table>\r\n                </>\r\n    }\r\n}\r\n\r\nexport default MonthlyRemainRecovery;","\r\n\r\n\r\nimport Chart from \"react-google-charts\";\r\n\r\nconst MonthlyReportChart = props =>{\r\n    return(\r\n        <Chart\r\n            width={'650px'}\r\n            height={'450px'}\r\n            chartType=\"ComboChart\"\r\n            loader={<div>Loading Chart</div>}\r\n            data={[\r\n                [\r\n                'Month',\r\n                'unPaid',\r\n                'Paid',\r\n                ],\r\n                ['Sep', 60, 150],\r\n                ['Oct', 60, 120],\r\n                ['Nov', 50, 117],\r\n                ['Dec', 25, 110],\r\n            ]}\r\n            options={{\r\n                title: props.title,\r\n                vAxis: { title: 'Paid / unPaid' },\r\n                hAxis: { title: 'By Month' },\r\n                seriesType: 'bars',\r\n                series: { 6: { type: 'line' } },\r\n            }}\r\n            rootProps={{ 'data-testid': '1' }}\r\n        />\r\n    );\r\n\r\n}\r\n\r\nexport default MonthlyReportChart;","\r\nimport MonthlyReportChart from \"./MonthlyReportChart\";\r\n\r\n\r\n\r\nconst MonthlyReport = props =>{\r\n    return(\r\n        <>\r\n        <h4>Comming Soon</h4>\r\n            <MonthlyReportChart \r\n            title='Report Number of Paid and unPaid Customer'\r\n            />\r\n            <MonthlyReportChart \r\n            title='Report Total paid amount and total Remain amount by month'\r\n            />\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default MonthlyReport;","import { Component } from \"react\"\r\nimport DashBoardNavigator from \"./DashBoardNavigator/DashBoardNavigator\";\r\nimport TodayRecovery from \"./TodayRecovery/TodayRecovery\";\r\nimport MonthlyRemainRecovery from \"./MonthlyRecoveryReport/MonthlyRecoveryReport\";\r\nimport MonthlyReport from \"./MonthlyReport/MonthlyReport\";\r\n\r\nclass MainDashBoard extends Component{\r\n    state = {\r\n        menuSwitcher: 1,\r\n    }\r\n    menuSwitchHandler = menu =>{\r\n        this.setState({menuSwitcher: menu});\r\n    }\r\n    render(){\r\n        return(\r\n            <>\r\n                <div className='col-md-3'>\r\n                    <DashBoardNavigator currentMenu={this.state.menuSwitcher} menuSwitchingHandler={this.menuSwitchHandler}/>\r\n                </div>\r\n                <div className='col-md-9'> \r\n                    {\r\n                        this.state.menuSwitcher === 1? <TodayRecovery/>\r\n                        :this.state.menuSwitcher === 2? <MonthlyRemainRecovery/>\r\n                        :this.state.menuSwitcher === 3? <MonthlyReport/>\r\n                        : ''\r\n                    }                    \r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default  MainDashBoard;","\r\nimport { Redirect } from \"react-router\";\r\nimport AdminLayout from \"./Components/AdminLayout/AdminLayout\"\r\nimport { useState } from 'react'\r\nimport Cookie from 'universal-cookie/es6';\r\nimport MainDashBoard from \"./Components/DashBoard/MainDashBoard\";\r\n\r\nconst MTTraderApp = () =>{\r\n    var [isLogin,setLogin] = useState(false);\r\n    var cookies = new Cookie();\r\n    if(cookies.get('logedInUser') !== undefined && isLogin === false){\r\n        setLogin(true);\r\n    }\r\n    \r\n    return(\r\n        <>\r\n            <AdminLayout >\r\n                {isLogin?'':<Redirect to='/login'/>}\r\n                <div className=\"jumbotron floid-container row mt-2 overflow-auto\" style={{height: '600px'}}>\r\n                    <MainDashBoard/>\r\n                </div>\r\n            </AdminLayout>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MTTraderApp;","import React from 'react';\r\nimport { Component } from 'react';\r\nimport Cookie from 'universal-cookie/es6';\r\nimport Axios from \"axios\"\r\nimport { Redirect } from \"react-router\";\r\nimport { Spinner } from 'react-bootstrap';\r\n\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            user: '',\r\n            password: '',\r\n            login: false,\r\n            displayAnimator: false\r\n        };\r\n    this.loginUser = this.loginUser.bind(this);\r\n    }\r\n    \r\n    loginUser=()=>{\r\n        this.setState({displayAnimator: true})\r\n        Axios.post(window.$domain + 'api/Users/LoginUser?UserName='+ this.state.user + '&Password='+ this.state.password )\r\n        .then(resp=>{\r\n            if(resp.data.role !== 'admin' ) \r\n            {\r\n                alert('Your are not authorize for operating Admin Control');\r\n                return ;\r\n            }\r\n            Axios.post(window.$domain + 'api/Users/GetUserDatailsId/'+ resp.data.id )\r\n                .then(\r\n                    resp=>\r\n                    {\r\n                        \r\n                        Axios.post(window.$domain + 'api/UserDetails/UpdateLastLogin/'+ resp.data )\r\n                        .then(\r\n                            resp=>\r\n                            {\r\n                                alert('You are logged in successfully')\r\n                            });\r\n                    });\r\n            var cookies = new Cookie();\r\n            cookies.set('logedInUser', {\r\n                userName: resp.data.userName,\r\n                email: resp.data.email, \r\n                role: resp.data.role, \r\n                id: resp.data.id\r\n                }, \r\n                {\r\n                path: '/',\r\n                maxAge: 3600\r\n              });\r\n              this.setState({login: true});\r\n              this.setState({displayAnimator: false})\r\n        })\r\n        .catch(\r\n            err=>{\r\n                if(err)\r\n                alert(err.response.data);\r\n                this.setState({displayAnimator: false});\r\n            });\r\n    }\r\n    componentDidMount(){\r\n        var cookies = new Cookie();\r\n        if(cookies.get('logedInUser') !== undefined && this.state.login === false){\r\n            this.setState({login: true});\r\n        }\r\n    }\r\n    render(){\r\n        \r\n        return (\r\n            <div className=\"container mt-4\" style={{width: \"80%\"}}>\r\n                {this.state.login? <Redirect to='/' />:''}\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-3 col-md-2\"></div>\r\n                    <div className=\"col-lg-6 col-md-8 login-box\">\r\n                        \r\n                        <div className=\"col-lg-12 login-title \">\r\n                            \r\n                            <p style={{textAlign: 'center'}}>\r\n                                <i className=\"fa fa-key\" aria-hidden=\"true\"></i> \r\n                                -Login\r\n                            </p>\r\n                        </div>\r\n                        <div className=\"col-lg-12 login-form\">\r\n                            <div className=\"col-lg-12 login-form\">\r\n                                <form onSubmit>\r\n                                    <div className=\"form-group\">\r\n                                        <label className=\"form-control-label\">UserName</label>\r\n                                        <input onChange={event=> this.setState({user: event.target.value})} type=\"text\" className=\"form-control\" />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label className=\"form-control-label\">Password</label>\r\n                                        <input onChange={event=> this.setState({password: event.target.value})} type=\"password\" className=\"form-control\" ></input>\r\n                                    </div>\r\n                                    <div className=\"col-lg-12 loginbttm\">\r\n                                        {\r\n                                            this.state.displayAnimator ? <Spinner animation=\"grow\" />\r\n                                            : <div className=\"col-lg-6 login-btn login-button\">\r\n                                                <button onClick={this.loginUser} className=\"btn btn-outline-primary btn-light\" style={{alignContent: \"center\"}}>\r\n                                                    Login\r\n                                                </button>\r\n                                            </div>\r\n                                        }\r\n                                        \r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-lg-3 col-md-2\">\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nexport default Login;","import { Component } from \"react\";\r\nimport Axios from \"axios\"\r\nimport {Link} from 'react-router-dom'\r\n\r\nimport { Spinner } from 'react-bootstrap';\r\nclass UserList extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          userList: []\r\n        };\r\n    this.LoadUserList = this.LoadUserList.bind(this);\r\n    }\r\n\r\n     LoadUserList=(event)=>{\r\n        if(event === undefined)\r\n        Axios.get(window.$domain + 'api/Users').then(\r\n            resp=>{\r\n                this.setState({userList: []});\r\n                this.setState({userList: resp.data});\r\n            }\r\n        ).catch(\r\n            err=>{\r\n                alert('Page:manageuser =>'+err)\r\n            }\r\n        )\r\n        else if(event.target.name === 'SearchByCnic' && event.target.value !== '' ){\r\n            Axios.get(window.$domain + 'api/Users/SearchUserbyCNIC/' + event.target.value).\r\n            then(\r\n                resp=>{\r\n                    this.setState({userList: resp.data});\r\n                }\r\n            ).catch(\r\n                err=>{\r\n                    alert('Page: Manage User =>'+err)\r\n                }\r\n            )\r\n        }\r\n        else if(event.target.name === 'SearchByName' && event.target.value !== ''){\r\n            Axios.get(window.$domain + 'api/Users/SearchUserbyName/' + event.target.value).\r\n            then(\r\n                resp=>{\r\n                    this.setState({userList: resp.data});\r\n                }\r\n            ).catch(\r\n                err=>{\r\n                    alert('Page: Manage User =>'+err)\r\n                }\r\n            )\r\n        }\r\n    }\r\n    UserEnableandDisableHandler = (userId)=>\r\n    {\r\n        if(window.confirm('Attention Please! ' + 'Opration Defination: If Your User is Enabled turn Disabled if Disabled turn Enabled.'))\r\n        {\r\n            Axios.post(window.$domain + 'api/Users/UserAccountEnableandDisableHandler/' + userId)\r\n                .then(resp=> {\r\n                    console.log(resp);\r\n                    this.LoadUserList();\r\n                })\r\n                .catch(resp=> console.log(resp));\r\n            \r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        if(this.state.userList.length === 0)\r\n        this.LoadUserList();\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"jumbotron container-fluid overflow-auto\">\r\n               <div className='row ml-2'>\r\n                    <div class=\"form-group ml-1\">\r\n                        <label>Search by CNIC Number:</label>\r\n                        <input  type='text' class=\"form-control shadow\" onChange={this.LoadUserList} name='SearchByCnic'/>\r\n                    </div>\r\n                    <div class=\"form-group ml-1\">\r\n                        <label>Search by Name:</label>\r\n                        <input  type='text' class=\"form-control shadow\" onChange={this.LoadUserList} name='SearchByName'/>\r\n                    </div>\r\n               </div>\r\n                <h3>Users</h3>\r\n                <div className='row shadow overflow-auto m-1'>\r\n                <table className=\"table  table-bordered \">\r\n                    <thead>\r\n                        <tr >\r\n                            <th>System Id</th>\r\n                            <th>Role</th>\r\n                            <th>Name</th>\r\n                            <th>Accounts Details</th>\r\n                            <th>Add to new Scheme</th>\r\n                            <th>Gender</th>\r\n                            <th>User Name</th>\r\n                            <th>Email</th>\r\n                            <th>Phone Number</th>\r\n                            <th>CNIC</th>\r\n                            <th >Last Login (DayName/Month/Day/Year) </th>\r\n                            <th>Registration Date (DayName/Month/Day/Year)</th>\r\n                            <th>User Enabled</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            this.state.userList.length > 0 ?\r\n                            this.state.userList.map(user=>{\r\n                                \r\n                                return <tr key={user.id}>\r\n                                    <td>{user.id}</td>\r\n                                    <td>{user.role}</td>\r\n                                    <td>{user.name}</td>\r\n                                    <td>\r\n                                        <Link to={'/ShowAccountDetails/'+ user.id} >Show</Link>\r\n                                    </td>\r\n                                    <td>\r\n                                        <Link to={'/User/'+ user.id + '/AddtoNewScheme'} >Add</Link>\r\n                                    </td>\r\n                                    <td>{user.gender}</td>\r\n                                    <td>{user.userName}</td>\r\n                                    <td>{user.email}</td>\r\n                                    <td>{user.phoneNumber}</td>\r\n                                    <td>{user.cnic}</td>\r\n                                    <td>{new Date(user.lastLogin).toDateString() + ' ' \r\n                                     + new Date(user.lastLogin).toLocaleTimeString() }</td>\r\n                                    <td>{new Date(user.registration_Date).toDateString()}</td>\r\n                                    <td onClick={()=> this.UserEnableandDisableHandler(user.id)}>\r\n                                        {user.isUserDisabled? <i  class=\"fa fa-lock\" aria-hidden=\"true\"></i> :<i class=\"fa fa-check\" aria-hidden=\"true\"></i>}\r\n                                    </td>\r\n                                </tr>\r\n                            }): <Spinner animation=\"grow\"  /> \r\n                        }\r\n                    </tbody>\r\n                </table>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UserList;","import UserList from \"./UserList/AllUserList\";\r\nimport AdminLayout from '../../AdminLayout/AdminLayout'\r\nimport { useState } from 'react'\r\nimport Cookie from 'universal-cookie/es6';\r\nimport { Redirect } from \"react-router\";\r\n\r\nconst UserManagement = ()=>{\r\n    var [isLogin,setLogin] = useState(false);\r\n    var cookies = new Cookie();\r\n    if(cookies.get('logedInUser') !== undefined && isLogin === false){\r\n        setLogin(true);\r\n    }\r\n\r\n    return(\r\n        <AdminLayout >\r\n            {isLogin?'':<Redirect to='/login'/>}\r\n            <UserList/>\r\n        </AdminLayout>\r\n    );\r\n}\r\n\r\nexport default UserManagement;","const TbInputControl = props=>{\r\n    return(\r\n        <div class=\"form-group \">\r\n            <label for={props.ctrlName}>{props.Name}:</label>\r\n            <input  type={props.inutType} class=\"form-control\" onChange={props.DataInputHandler} name={props.ctrlName}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TbInputControl;","import axios from \"axios\";\r\nimport { Component } from \"react\";\r\nimport { Redirect } from \"react-router\";\r\nimport AdminLayout from \"../../../AdminLayout/AdminLayout\";\r\nimport TbInputControl from \"../UI/TbInputControl\";\r\nimport Cookie from 'universal-cookie'\r\nclass AddNewPayment extends Component{\r\n    state = {\r\n        amount: 0,\r\n        redirect: false\r\n    }\r\n    ReadyUser = event =>{\r\n        if(event.target.value > 0)\r\n            this.setState({amount: event.target.value})\r\n    }\r\n    postPaymnet= ()=>{\r\n        var cookies = new Cookie();\r\n        axios.post(\r\n            window.$domain + 'api/AccDetails',\r\n            {\r\n                \"id\": 0,\r\n                \"payedAmount\": this.state.amount,\r\n                \"payingDate\": \"2021-09-27T22:15:41.611Z\",\r\n                \"accId\": this.props.Accid,\r\n                \"postedByUserId\": cookies.get('logedInUser').id\r\n            }\r\n        ).then(\r\n            resp=>{\r\n                console.log(resp)\r\n                this.setState({redirect: true});\r\n            }\r\n        )\r\n    }\r\n    render(){\r\n        return(\r\n                <div className=\"jumbotron mt-3\">\r\n                    {\r\n                        this.state.redirect ? <Redirect to={'/Accounts/'+this.props.Accid+'/Payment'} />: ''\r\n                    }\r\n                    <h3>Add Payment</h3>\r\n                    <hr/>\r\n                    <h5>Please fill this form carefully, This transection is ir-revercible</h5>\r\n                    <hr/>\r\n                    <TbInputControl DataInputHandler={this.ReadyUser} Name={'Payment'} inutType={'number'} ctrlName={'Add Payment'} />\r\n                    <button onClick={this.postPaymnet} className='btn btn-success'>Post Amount</button>\r\n                </div>\r\n        )\r\n    }\r\n}\r\nexport default AddNewPayment;","\r\nimport AddNewPayment from \"../../UserManagement/AddNewPayment/AddNewPayment\";\r\nimport { useState } from 'react'\r\nimport Cookie from 'universal-cookie/es6';\r\nimport { Redirect } from \"react-router\";\r\n\r\nconst PaymentDetails = props=>{\r\n    var [IsReadyforPayment,setIsReadyforPayment] = useState(false);\r\n    var [isLogin,setLogin] = useState(false);\r\n    var cookies = new Cookie();\r\n    if(cookies.get('logedInUser') !== undefined && isLogin === false){\r\n        setLogin(true);\r\n    }\r\n    return(\r\n        <div className=\"jumbotron container-fluid overflow-auto\">\r\n            {isLogin?'':<Redirect to='/login'/>}\r\n            \r\n            <table className=\"table shadow table-bordered\">\r\n                <thead>\r\n                    <tr >\r\n                        <th>Date</th>\r\n                        <th>Payment</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        props.peymentHistory.map(payment=>{\r\n                            return <tr>\r\n                                        <td>{new Date(payment.payingDate).toDateString()}</td>\r\n                                        <td>{payment.payedAmount}</td>\r\n                                    </tr>\r\n                        })\r\n                    }\r\n                    \r\n                </tbody>\r\n            </table>\r\n            <button onClick={()=> IsReadyforPayment ? setIsReadyforPayment(false): setIsReadyforPayment(true)} className='btn btn-primary'>Pay Installment</button>\r\n            {\r\n                props.AccId !== 0 && IsReadyforPayment ?\r\n                <AddNewPayment Accid = {props.AccId} />: ''\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PaymentDetails;","\r\n  import { useState } from 'react';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n  import 'react-toastify/dist/ReactToastify.css';\r\n  \r\nconst AccountCard= props =>{\r\n    var [showToast,setShowtoast] = useState(false);\r\n    var toastAccountClose=toast(props.closingReason, {\r\n                                    position: \"top-right\",\r\n                                    autoClose: 10000,\r\n                                    hideProgressBar: false,\r\n                                    closeOnClick: true,\r\n                                    pauseOnHover: true,\r\n                                    draggable: true,\r\n                                    progress: undefined,\r\n                                    });\r\n    return(\r\n        <div class=\"card shadow m-2\" style={{width: '12rem'}}>\r\n            {showToast? <ToastContainer/>: ''}\r\n            <div class=\"card-body\">\r\n                <h5 class=\"card-title\">{props.schemeName}</h5>\r\n                <p class=\"card-text\">{props.desc}</p>\r\n                {props.isAccClosed? '':<button onClick={()=>props.paymentDisplayHandler(props.AccId)} class=\"btn btn-success\">Pay Installment</button>}\r\n                <button onClick={()=>{props.gotoPaymentHistory(props.AccId)}} className='btn btn-info mt-1'>Edit History</button>\r\n                {props.isAccClosed? '' :<button onClick={()=>{props.disableAcc(props.AccId)}} className='btn btn-danger mt-1'>Disable Account</button>}\r\n                {props.isAccClosed?<button onClick={()=>setShowtoast(!showToast)} className='btn btn-primary mt-1'>Show Reason</button> :''}\r\n            </div>\r\n            {props.isAccClosed? <span class=\"badge badge-danger\"> <i  class=\"fa fa-lock\" aria-hidden=\"true\"></i></span>:<span class=\"badge badge-success\"> <i  class=\"fa fa-check\" aria-hidden=\"true\"></i></span>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AccountCard;","import axios from \"axios\";\r\nimport { Component } from \"react\";\r\nimport { Redirect } from \"react-router\";\r\nimport AdminLayout from \"../../AdminLayout/AdminLayout\";\r\nimport PaymentDetails from \"./DisplayPaymentDetails/PaymentDetails\";\r\nimport AccountCard from \"./UI/AccountCard\";\r\nimport Axios from \"axios\"\r\nimport Cookie from 'universal-cookie/es6';\r\n\r\nclass AccountDetails extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            Accounts:null,\r\n            Schemes: null,\r\n            DisplayAcc: null,\r\n            AccId: 0,\r\n            gotoHistoryPaymentRedirect: null,\r\n            isLogin: true\r\n        }\r\n    }\r\n\r\n    gotoHistoryPaymentRedirectHandler=(AccId)=>{\r\n        this.setState({gotoHistoryPaymentRedirect: {\r\n            AccId: AccId,\r\n            redir: true \r\n        }})\r\n    }\r\n\r\n    AccountDisableandEnableHandler =(AccId)=>{\r\n        \r\n        var ClosingDescription = window.prompt(\"what is the reason of Disabling Account\");\r\n        if(ClosingDescription !== null)\r\n        if(window.confirm('Attention Please! ' + 'Opration Defination: Are you sure you want to disable this account'))\r\n        {\r\n            Axios.put(window.$domain + 'api/Accounts/DisableAndEnableHandler/' + AccId + '?ClosingDescription=' + ClosingDescription)\r\n                .then(resp=> {\r\n                    console.log(resp);\r\n                })\r\n                .catch(resp=> console.log(resp));\r\n            \r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        if(this.state.Accounts === null){\r\n            axios.get(window.$domain + 'api/Accounts/GetAccountbyUserId/' + this.props.match.params.id)\r\n            .then(\r\n                resp=>{\r\n                    this.setState({Accounts: resp.data});\r\n                }\r\n            )\r\n            axios.get(window.$domain + 'api/MTServices')\r\n            .then(\r\n                resp=>{\r\n                    this.setState({Schemes: resp.data});\r\n                }\r\n            )\r\n            \r\n        }\r\n        var cookies = new Cookie();\r\n        if(cookies.get('logedInUser') === undefined)\r\n        {\r\n            this.setState({isLogin: false});\r\n        }\r\n    }\r\n\r\n    paymentDisplayHandler = (Accid)=>{\r\n        this.state.Accounts.map(\r\n            Account => {\r\n                if(Account.id === Accid ){\r\n                    this.setState({DisplayAcc: Account.accPaymentDetails});\r\n                    this.setState({AccId: Accid})\r\n                }\r\n            }\r\n        )\r\n    }\r\n    render(){\r\n        console.log(this.props.match.params.id)\r\n        return(\r\n            <AdminLayout>\r\n                {this.state.isLogin?'':<Redirect to='/login'/>}\r\n                {this.state.gotoHistoryPaymentRedirect=== null? '':<Redirect to={'/Accounts/' + this.state.gotoHistoryPaymentRedirect.AccId + '/Payment'} /> }\r\n                <div className='jumbotron mt-3'>\r\n                    <div className='row'>\r\n                        <div className='col-md-3'>\r\n                            <h5 style={{textAlign: 'center'}}>Participated Schemes</h5>\r\n                            {\r\n                                this.state.Schemes !== null && this.state.Accounts !== null ?this.state.Accounts.map(\r\n                                    Account => this.state.Schemes.map(\r\n                                        Scheme=> Scheme.id === Account.mtServiceId ? <AccountCard \r\n                                                                                        schemeName={Scheme.name} \r\n                                                                                        desc={Scheme.details} \r\n                                                                                        AccId={Account.id} \r\n                                                                                        paymentDisplayHandler ={this.paymentDisplayHandler}\r\n                                                                                        gotoPaymentHistory= {this.gotoHistoryPaymentRedirectHandler}\r\n                                                                                        isAccClosed= {Account.isAccClosed}\r\n                                                                                        disableAcc={this.AccountDisableandEnableHandler}\r\n                                                                                        closingReason={Account.closingDescription}/>: ''\r\n                                    ) \r\n                                ): ''\r\n                            }\r\n                        </div>\r\n                        <div className='col-md-9'>\r\n                            <h5 style={{textAlign: 'center'}}>Account Payment Details</h5>\r\n                            {\r\n                                this.state.DisplayAcc? \r\n                                <PaymentDetails peymentHistory={this.state.DisplayAcc} AccId = {this.state.AccId}/>\r\n                                :'Please select a Scheme'\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </AdminLayout>\r\n        );\r\n    }\r\n}\r\nexport default AccountDetails;\r\n\r\n","import { Component } from \"react\";\r\nimport AdminLayout from \"../../../AdminLayout/AdminLayout\";\r\nimport axios from 'axios';\r\nimport Cookie from 'universal-cookie';\r\nimport { Redirect } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Spinner } from \"react-bootstrap\";\r\n\r\nclass PaymentHistory extends Component{\r\n   \r\n    constructor(props) {\r\n        super(props);\r\n        this.state =  {\r\n            historyList: [],\r\n            isLogin: true\r\n        };\r\n    }\r\n    componentDidMount(){\r\n        if(this.state.historyList.length === 0)\r\n        {\r\n            axios.get(window.$domain + 'api/AccDetails/GetAccDetailsbyAccountId/' + this.props.match.params.id)\r\n            .then(\r\n                resp=>{\r\n                        resp.data.map(\r\n                            payment => {\r\n                                axios.get(window.$domain + 'api/Users/' + payment.postedByUserId).then(\r\n                                    user=>{\r\n                                        var arrayHistory = [];\r\n                                        arrayHistory = this.state.historyList;\r\n                                        arrayHistory.push(\r\n                                            {\r\n                                                payDate: payment.payingDate, \r\n                                                paymentId: payment.id,\r\n                                                payedAmount: payment.payedAmount,\r\n                                                PostedByUser: user.data.userName\r\n                                            });\r\n                                        this.setState({historyList: arrayHistory});\r\n                                    }\r\n                                )\r\n                            }\r\n                    )\r\n                }\r\n            ).catch(\r\n                err=> {\r\n                    console.log(err);\r\n                }\r\n            )\r\n        }\r\n        var cookies = new Cookie();\r\n        if(cookies.get('logedInUser') === undefined)\r\n        {\r\n            this.setState({isLogin: false});\r\n        }\r\n    }\r\n\r\n     render(){\r\n        return(\r\n            <AdminLayout>\r\n                {this.state.isLogin?'':<Redirect to='/login'/>}\r\n                <div className=\"jumbotron container-fluid overflow-auto\">\r\n                    <h2>Payment History</h2>\r\n                <table className=\"table shadow table-bordered\">\r\n                    <thead>\r\n                        <tr >\r\n                            <th>Date -- Time</th>\r\n                            <th>Payment</th>\r\n                            <th>Payment Received By</th>\r\n                            <th>Amount Modification</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                         {\r\n                             this.state.historyList !== null ?\r\n                             this.state.historyList.map(payment=>{\r\n                                return <tr>\r\n                                            <td>{new Date(payment.payDate).toDateString() + ' -- ' + new Date(payment.payDate).toLocaleTimeString() }</td>\r\n                                            <td>{payment.payedAmount}</td>\r\n                                            <td>{payment.PostedByUser}</td>\r\n                                            <td><Link to={'/account/payment/modification/' + payment.paymentId}>modify</Link></td>\r\n                                    </tr>\r\n                             }): <Spinner animation=\"grow\" />\r\n                         }\r\n                    </tbody>\r\n                </table>\r\n                \r\n            </div>\r\n            </AdminLayout>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nexport default PaymentHistory;\r\n","import axios from \"axios\";\r\nimport React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router\";\r\nimport AdminLayout from \"../../../AdminLayout/AdminLayout\";\r\nimport TbInputControl from \"../UI/TbInputControl\";\r\n\r\n\r\nclass CreateNewUser extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            \"id\": 0,\r\n            \"email\": \"\",\r\n            \"role\": \"user\",\r\n            \"userName\": \"\",\r\n            \"password\": \"\",\r\n            \"userDetails\": {\r\n              \"id\": 0,\r\n              \"name\": \"\",\r\n              \"cnic\": \"\",\r\n              \"phoneNumber\": \"\",\r\n              \"address\": \"\",\r\n              \"gender\": \"\",\r\n              \"registration_Date\": \"\"\r\n            },\r\n            \"accounts\": [\r\n              {\r\n                \"id\": 0,\r\n                \"accNumber\": \"\",\r\n                \"bankName\": \"\",\r\n                \"amountPayable\": 0,\r\n                \"monthlyInstalment\": 0,\r\n                \"mtServiceId\": 0,\r\n                \"isAccClosed\": false,\r\n              }\r\n            ],\r\n            MTServices:[],\r\n            redirect: false\r\n        };\r\n        this.amountInputRef = React.createRef();\r\n        this.ReadyUser = this.ReadyUser.bind(this);\r\n    }\r\n    componentDidMount(){\r\n        if(this.state.MTServices.length === 0){\r\n            axios.get(window.$domain + 'api/MTServices').\r\n            then(MTService=>{\r\n                var forModificationState = this.state.MTServices;\r\n                forModificationState.push(MTService.data);\r\n                console.log(forModificationState)\r\n                this.setState({MTServices: forModificationState});\r\n            });\r\n            \r\n        }\r\n        console.log(this.state.MTServices)\r\n    }\r\n    ReadyUser=(event)=>{\r\n        if(event.target.name === 'GetFullName'){\r\n            this.setFullName(event.target)\r\n        }\r\n        else if(event.target.name === 'GetUserName'){\r\n            this.setUserName(event.target)\r\n        }\r\n        else if(event.target.name === 'GetGender'){\r\n            this.setGender(event.target)\r\n        }\r\n        else if(event.target.name === 'GetEmail'){\r\n            this.setEmail(event.target)\r\n        }\r\n        else if(event.target.name === 'GetPassword'){\r\n            this.setPassword(event.target)\r\n        }\r\n        else if(event.target.name === 'GetCNIC'){\r\n            this.setCNIC(event.target)\r\n        }\r\n        else if(event.target.name === 'GetAddress'){\r\n            this.setAddress(event.target)\r\n        }\r\n        else if(event.target.name === 'GetPhone'){\r\n            this.setPhoneNumber(event.target)\r\n        }\r\n        else if(event.target.name === 'GetAccountNumer'){\r\n            this.setAccountNumber(event.target)\r\n        }\r\n        else if(event.target.name === 'GetBankName'){\r\n            this.setBankName(event.target)\r\n        }\r\n        else if(event.target.name === 'GetMonthlyInstallment'){\r\n            this.setMonthlyInstallment(event.target)\r\n        }\r\n    }\r\n    setAccountNumber = (target)=>{\r\n        var newAccountState = [];\r\n        var accountData = {\r\n            \"id\": 0,\r\n            \"accNumber\": target.value,\r\n            \"bankName\": this.state.accounts[0].bankName,\r\n            \"amountPayable\": this.state.accounts[0].amountPayable,\r\n            \"monthlyInstalment\": this.state.accounts[0].monthlyInstalment,\r\n            \"mtServiceId\":this.state.accounts[0].mtServiceId,\r\n            \"isAccClosed\": false,\r\n        }\r\n        newAccountState.push(accountData);\r\n        this.setState({accounts: newAccountState})\r\n    }\r\n    setBankName = (target)=>{\r\n        var newAccountState = [];\r\n        var accountData = {\r\n            \"id\": 0,\r\n            \"accNumber\": this.state.accounts[0].accNumber ,\r\n            \"bankName\": target.value,\r\n            \"amountPayable\": this.state.accounts[0].amountPayable,\r\n            \"monthlyInstalment\": this.state.accounts[0].monthlyInstalment,\r\n            \"mtServiceId\":this.state.accounts[0].mtServiceId,\r\n            \"isAccClosed\": false,\r\n        }\r\n        newAccountState.push(accountData);\r\n        this.setState({accounts: newAccountState})\r\n    }\r\n    setMonthlyInstallment = (target)=>{\r\n        var newAccountState = [];\r\n        var accountData = {\r\n            \"id\": 0,\r\n            \"accNumber\": this.state.accounts[0].accNumber ,\r\n            \"bankName\": this.state.accounts[0].bankName ,\r\n            \"amountPayable\": this.state.accounts[0].amountPayable,\r\n            \"monthlyInstalment\": target.value,\r\n            \"mtServiceId\":this.state.accounts[0].mtServiceId,\r\n            \"isAccClosed\": false,\r\n        }\r\n        newAccountState.push(accountData);\r\n        this.setState({accounts: newAccountState})\r\n    }\r\n    setFullName =(target)=>{\r\n        this.setState({userDetails: {\r\n            \"id\": 0,\r\n            \"name\": target.value,\r\n            \"cnic\": this.state.userDetails.cnic,\r\n            \"phoneNumber\": this.state.userDetails.phoneNumber,\r\n            \"address\": this.state.userDetails.address,\r\n            \"gender\": this.state.userDetails.gender,\r\n            \"registration_Date\": this.state.userDetails.registration_Date\r\n          }});\r\n        console.log(this.state)\r\n    }\r\n    setGender =(target)=>{\r\n        this.setState({userDetails: {\r\n            \"id\": 0,\r\n            \"name\": this.state.userDetails.name,\r\n            \"cnic\": this.state.userDetails.cnic,\r\n            \"phoneNumber\": this.state.userDetails.phoneNumber,\r\n            \"address\": this.state.userDetails.address,\r\n            \"gender\": target.value,\r\n            \"registration_Date\": this.state.userDetails.registration_Date\r\n          }});\r\n    }\r\n    setUserName = (target)=>{\r\n        this.setState({userName: target.value});\r\n    }\r\n    setEmail = (target)=>{\r\n        this.setState({email: target.value});\r\n        console.log(this.state)\r\n    }\r\n    setPassword = (target)=>{\r\n        this.setState({password: target.value});\r\n        console.log(this.state)\r\n    }\r\n    setCNIC =(target)=>{\r\n        this.setState({userDetails: {\r\n            \"id\": 0,\r\n            \"name\": this.state.userDetails.name,\r\n            \"cnic\": target.value,\r\n            \"phoneNumber\": this.state.userDetails.phoneNumber,\r\n            \"address\": this.state.userDetails.address,\r\n            \"gender\": this.state.userDetails.gender,\r\n            \"registration_Date\": this.state.userDetails.registration_Date\r\n          }});\r\n        console.log(this.state)\r\n    }\r\n    setAddress =(target)=>{\r\n        this.setState({userDetails: {\r\n            \"id\": 0,\r\n            \"name\": this.state.userDetails.name,\r\n            \"cnic\": this.state.userDetails.cnic,\r\n            \"phoneNumber\": this.state.userDetails.phoneNumber,\r\n            \"address\": target.value,\r\n            \"gender\": this.state.userDetails.gender,\r\n            \"registration_Date\": this.state.userDetails.registration_Date\r\n          }});\r\n        console.log(this.state)\r\n    }\r\n    setPhoneNumber =(target)=>{\r\n        this.setState({userDetails: {\r\n            \"id\": 0,\r\n            \"name\": this.state.userDetails.name,\r\n            \"cnic\": this.state.userDetails.cnic,\r\n            \"phoneNumber\": target.value,\r\n            \"address\": this.state.userDetails.address,\r\n            \"gender\": this.state.userDetails.gender,\r\n            \"registration_Date\": this.state.userDetails.registration_Date\r\n          }});\r\n        console.log(this.state)\r\n    }\r\n    setUserType= (event)=>\r\n    {\r\n        this.setState({role: event.target.value});\r\n    }\r\n    MTServiceSelection = (event)=>{\r\n        alert(event.target.value)\r\n        this.state.MTServices[0].map(\r\n            MTservice=>{\r\n                if(event.target.value === MTservice.name){\r\n                    this.setState({accounts: \r\n                        [{\r\n                            \"id\": 0,\r\n                            \"accNumber\": this.state.accounts[0].accNumber,\r\n                            \"bankName\": this.state.accounts[0].bankName,\r\n                            \"amountPayable\": MTservice.amount,\r\n                            \"monthlyInstalment\": this.state.accounts[0].monthlyInstalment,\r\n                            \"mtServiceId\": MTservice.id,\r\n                            \"isAccClosed\": false,\r\n                        }]\r\n                    });\r\n                    this.amountInputRef.current.value = MTservice.amount;\r\n                }\r\n            }\r\n        )\r\n    }\r\n    CreatNewUser = ()=>{\r\n        axios.post(\r\n                window.$domain + 'api/Users',\r\n                {\r\n                    \"id\": 0,\r\n                    \"email\": this.state.email,\r\n                    \"userName\": this.state.userName,\r\n                    \"password\": this.state.password,\r\n                    \"role\": this.state.role,\r\n                    \"userDetails\": {\r\n                        \"id\": 0,\r\n                        \"name\": this.state.userDetails.name,\r\n                        \"cnic\": this.state.userDetails.cnic,\r\n                        \"phoneNumber\": this.state.userDetails.phoneNumber,\r\n                        \"address\": this.state.userDetails.address,\r\n                        \"gender\": this.state.userDetails.gender,\r\n                    },\r\n                    \"accounts\": [\r\n                        {\r\n                            \"id\": 0,\r\n                            \"accNumber\": this.state.accounts[0].accNumber,\r\n                            \"bankName\": this.state.accounts[0].bankName,\r\n                            \"amountPayable\": this.state.accounts[0].amountPayable,\r\n                            \"monthlyInstalment\": this.state.accounts[0].monthlyInstalment,\r\n                            \"mtServiceId\": this.state.accounts[0].mtServiceId,\r\n                            \"isAccClosed\": false,\r\n                        }\r\n                    ] \r\n                }    \r\n            )\r\n        .then(response => this.setState({redirect: true}))\r\n        .catch(\r\n            err=>\r\n            {\r\n                alert(err.response.data);\r\n            }\r\n            );\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <AdminLayout>\r\n            <div className=\"jumbotron\">\r\n                {this.state.redirect?<Redirect to='/manageuser'/>:''}\r\n                <h3>Create New User</h3>\r\n                <hr/>\r\n                <h5>Please Select User Type</h5>\r\n                <select class=\"form-select form-select-lg\" onChange={this.setUserType} aria-label=\".form-select-sm example\">\r\n                <option selected>user</option>\r\n                <option>worker</option>\r\n                </select>\r\n                <hr/>\r\n                <h5>User Information</h5>\r\n                <hr/>\r\n                    <TbInputControl DataInputHandler={this.ReadyUser} Name={'Full Name'} inutType={'text'} ctrlName={'GetFullName'} />\r\n                    <TbInputControl DataInputHandler={this.ReadyUser} Name={'User Name'} inutType={'text'} ctrlName={'GetUserName'} />\r\n                    <TbInputControl DataInputHandler={this.ReadyUser} Name={'E-mail'} inutType={'email'} ctrlName={'GetEmail'} />\r\n                    <TbInputControl DataInputHandler={this.ReadyUser} Name={'Password'} inutType={'password'} ctrlName={'GetPassword'} />\r\n                    <TbInputControl DataInputHandler={this.ReadyUser} Name={'Phone Number'} inutType={'text'} ctrlName={'GetPhone'} />\r\n                    <TbInputControl DataInputHandler={this.ReadyUser} Name={'CNIC'} inutType={'text'} ctrlName={'GetCNIC'} />\r\n                    <TbInputControl DataInputHandler={this.ReadyUser} Name={'Complete Address'} inutType={'text'} ctrlName={'GetAddress'} />\r\n                    <TbInputControl DataInputHandler={this.ReadyUser} Name={'Gender'} inutType={'text'} ctrlName={'GetGender'} />\r\n                <div className='container-fluid'>\r\n                    <h5>Account Information</h5>\r\n                    <hr/> \r\n                    <h6>Please Select Scheme/Product</h6>\r\n                    <hr/>\r\n                        <select class=\"form-select form-select-lg\" onChange={this.MTServiceSelection} aria-label=\".form-select-sm example\">\r\n                        <option selected>Please Select Scheme</option>\r\n                            {\r\n                                this.state.MTServices.length > 0?\r\n                                this.state.MTServices[0].map(MTService=>{\r\n                                    return <option key={MTService.id}>{MTService.name}</option>\r\n                                }):\r\n                                <option selected>Wait We are trying to Load Your Providing Services</option>\r\n                            }\r\n                        </select>\r\n                </div>\r\n                <hr/>\r\n                    <TbInputControl DataInputHandler={this.ReadyUser} Name={'Account Numer'} inutType={'text'} ctrlName={'GetAccountNumer'} />\r\n                    <TbInputControl DataInputHandler={this.ReadyUser} Name={'Bank Name'} inutType={'text'} ctrlName={'GetBankName'} />\r\n                    <div class=\"form-group \">\r\n                        <label for='GetAmountPayable'>Total Amount Payable:</label>\r\n                        <input ref={this.amountInputRef} type='text' class=\"form-control\" onChange={this.ReadyUser} name='GetAmountPayable'/>\r\n                    </div>\r\n                    <TbInputControl DataInputHandler={this.ReadyUser} Name={'Monthly Installment'} inutType={'text'} ctrlName={'GetMonthlyInstallment'} />\r\n                    <button className=\"btn btn-success\" onClick={this.CreatNewUser}>Create User</button>\r\n                </div>\r\n            </AdminLayout>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CreateNewUser;","import { Component } from \"react\";\r\nimport React from 'react'\r\nimport AdminLayout from '../../../AdminLayout/AdminLayout'\r\nimport TbInputControl from '../UI/TbInputControl'\r\nimport axios from \"axios\";\r\nimport { Redirect } from \"react-router\";\r\nimport Cookie from 'universal-cookie';\r\n\r\nclass AttachWithNewScheme extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            AccProtoType:{\r\n                \"id\": 0,\r\n                \"amountPayable\": 0,\r\n                \"monthlyInstalment\": 0,\r\n                \"isAccClosed\": false,\r\n                \"userid\": 0,\r\n                \"mtServiceId\": 0,\r\n                \"accPaymentDetails\": null\r\n            },\r\n            MTServices: null,\r\n            redirect: false,\r\n            isLogin: true\r\n        };\r\n        this.amountInputRef = React.createRef();\r\n        this.ReadyUser = this.ReadyUser.bind(this);\r\n    }\r\n\r\n    ReadyUser=(event)=>{\r\n        if(event.target.name === 'GetAmountPayable')\r\n        {\r\n            this.TotalAmountPayable(event.target)\r\n        }\r\n        else if(event.target.name === 'GetMonthlyInstallment'){\r\n            this.MonthlyInstallment(event.target)\r\n        }\r\n    }\r\n\r\n    TotalAmountPayable = target =>{\r\n        this.setState({AccProtoType: \r\n            {\r\n                \"id\": 0,\r\n                \"amountPayable\": target.value,\r\n                \"monthlyInstalment\": this.state.AccProtoType.monthlyInstalment,\r\n                \"isAccClosed\": false,\r\n                \"userid\": this.state.AccProtoType.userid,\r\n                \"mtServiceId\": this.state.AccProtoType.mtServiceId,\r\n                \"accPaymentDetails\": null\r\n            }\r\n        })\r\n    }\r\n\r\n    MonthlyInstallment = target=>{\r\n        this.setState({AccProtoType: \r\n            {\r\n                \"id\": 0,\r\n                \"amountPayable\": this.state.AccProtoType.amountPayable,\r\n                \"monthlyInstalment\": target.value,\r\n                \"isAccClosed\": false,\r\n                \"userid\": this.state.AccProtoType.userid,\r\n                \"mtServiceId\":this.state.AccProtoType.mtServiceId,\r\n                \"accPaymentDetails\": null\r\n            }\r\n        })\r\n    }\r\n\r\n    PostData=()=>{\r\n        axios.get(window.$domain + 'api/Accounts/GetAccountbyUserId/' + this.state.AccProtoType.userid)\r\n        .then(\r\n            resp=> {\r\n                var duplicated = false;\r\n                resp.data.map(acc=>{\r\n                    if(acc.mtServiceId === this.state.AccProtoType.mtServiceId)\r\n                    {\r\n                        duplicated = true;\r\n                        alert('Sorry! You are not allow to make duplication')\r\n                    }\r\n                });\r\n                if(!duplicated)\r\n                {\r\n                    axios.post(window.$domain + 'api/Accounts',this.state.AccProtoType)\r\n                        .then(resp=> {\r\n                            this.setState({redirect: true});\r\n                        }). catch(\r\n                            resp=> alert(resp.data.message)\r\n                        );\r\n                }\r\n            }\r\n        ). catch(\r\n            resp=> alert(resp.data.message)\r\n        );\r\n    }\r\n\r\n    MTServiceSelection = (event) => {\r\n        if(event.target.value !== 'Please Select Scheme/Product'){\r\n            this.state.MTServices.map(\r\n                mtService=>{\r\n                    if(mtService.name === event.target.value){\r\n                        this.setState({AccProtoType: \r\n                            {\r\n                                \"id\": 0,\r\n                                \"amountPayable\": this.state.AccProtoType.amountPayable,\r\n                                \"monthlyInstalment\": this.state.AccProtoType.monthlyInstalment,\r\n                                \"isAccClosed\": false,\r\n                                \"userid\": this.state.AccProtoType.userid,\r\n                                \"mtServiceId\": mtService.id,\r\n                                \"accPaymentDetails\": null\r\n                            }\r\n                        })\r\n                    }\r\n                }\r\n            )\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        if(this.state.AccProtoType.userid === 0){\r\n            this.setState({AccProtoType: {\r\n                \"id\": 0,\r\n                \"amountPayable\": this.state.AccProtoType.amountPayable,\r\n                \"monthlyInstalment\": this.state.AccProtoType.monthlyInstalment,\r\n                \"isAccClosed\": false,\r\n                \"userid\": this.props.match.params.id,\r\n                \"mtServiceId\": this.state.AccProtoType.mtServiceId,\r\n                \"accPaymentDetails\": null\r\n            }})\r\n        }\r\n        if(this.state.MTServices === null){\r\n            axios.get(window.$domain + 'api/MTServices').\r\n            then(resp=>{\r\n                this.setState({MTServices: resp.data});\r\n            });\r\n        }\r\n        var cookies = new Cookie();\r\n        if(cookies.get('logedInUser') === undefined)\r\n        {\r\n            this.setState({isLogin: false});\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <AdminLayout>\r\n                {this.state.isLogin?'':<Redirect to='/login'/>}\r\n                {this.state.redirect? <Redirect to='/manageuser'/>: ''}\r\n                <div className='jumbotron'>\r\n                    <div className='container-fluid'>\r\n                        <h5>Add User to New Scheme</h5>\r\n                        <hr/> \r\n                        <h6>Please Select Scheme/Product</h6>\r\n                        <hr/>\r\n                            <select class=\"form-select form-select-lg\" onChange={this.MTServiceSelection} aria-label=\".form-select-sm example\">\r\n                            <option selected>Please Select Scheme/Product</option>\r\n                                {\r\n                                    this.state.MTServices?\r\n                                    this.state.MTServices.map(MTService=>{\r\n                                        return <option key={MTService.id}>{MTService.name}</option>\r\n                                    }):\r\n                                    <option selected>Wait We are trying to Load Your Providing Services</option>\r\n                                }\r\n                            </select>\r\n                    </div>\r\n                    <hr/>\r\n                    <div class=\"form-group \">\r\n                        <label for='GetAmountPayable'>Total Amount Payable:</label>\r\n                        <input ref={this.amountInputRef} type='number' class=\"form-control\" onChange={this.ReadyUser} name='GetAmountPayable'/>\r\n                    </div>\r\n                    <TbInputControl DataInputHandler={this.ReadyUser} Name={'Monthly Installment'} inutType={'number'} ctrlName={'GetMonthlyInstallment'} />\r\n                    <button className=\"btn btn-success\" onClick={this.PostData}>Add User to this Sceme</button>\r\n                </div>\r\n            </AdminLayout>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default AttachWithNewScheme;","import { Component } from \"react\";\r\nimport AdminLayout from \"../../AdminLayout/AdminLayout\";\r\nimport Axios from \"axios\";\r\nimport {Link} from 'react-router-dom';\r\nimport Cookie from 'universal-cookie';\r\nimport { Redirect } from \"react-router\";\r\n\r\nclass ProductManager extends Component{\r\n    state = {\r\n        mtServices: null,\r\n        isLogin: true\r\n    }\r\n    \r\n\r\n    componentDidMount(){\r\n        if(this.state.mtServices===null){\r\n            Axios.get(window.$domain + 'api/MTServices').then(\r\n                resp=>{\r\n                    this.setState({mtServices: resp.data});\r\n                }\r\n            ).catch(\r\n                err=>{\r\n                    alert('Page: Product Load =>'+ err)\r\n                }\r\n            )\r\n        }\r\n        var cookies = new Cookie();\r\n        if(cookies.get('logedInUser') === undefined)\r\n        {\r\n            this.setState({isLogin: false});\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <AdminLayout>\r\n                {this.state.isLogin?'':<Redirect to='/login'/>}\r\n                <div className='jumbotron'>\r\n                    <h3>Manage Products/Schemes</h3>\r\n                    <div className='row m-1 overflow-auto'>\r\n                        <table className=\"table shadow table-bordered \">\r\n                            <thead>\r\n                                <tr >\r\n                                    <th>Id</th>\r\n                                    <th>Name</th>\r\n                                    <th>Total Amount</th>\r\n                                    <th>Details</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                            {\r\n                                this.state.mtServices?\r\n                                this.state.mtServices.map(service=>{\r\n                                    return  <tr>\r\n                                                <td>{service.id}</td>\r\n                                                <td>{service.name}</td>\r\n                                                <td>{service.amount}</td>\r\n                                                <td>{service.details}</td>\r\n                                            </tr>\r\n                                }):'we are loading data from server'\r\n                            }\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                    <Link className='btn btn-success shadow' to='/AddProduct' >Add More Product</Link>\r\n                </div>\r\n            </AdminLayout>\r\n\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default ProductManager;","const TbInput = props=>{\r\n    return(\r\n        <div class=\"form-group \">\r\n            <label for={props.name}>{props.Name}:</label>\r\n            <input  type={props.type} class=\"form-control\" onChange={props.DataInputHandler} name={props.Name}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TbInput;","import { Component } from \"react\";\r\nimport AdminLayout from \"../../../AdminLayout/AdminLayout\";\r\nimport Axios from \"axios\"\r\nimport TbInput from '../UI/TbInput'\r\nimport { Link } from \"react-router-dom\";\r\nimport { Redirect } from \"react-router\";\r\nclass AddNewProduct extends Component\r\n{\r\n    state = {\r\n        newProduct: {\r\n            id: 0,\r\n            name:'',\r\n            amount: 0,\r\n            details: ''            \r\n        },\r\n        redirect: false\r\n    }\r\n    inputHandler = event=>{\r\n        if(event.target.name === 'Scheme/Product Name')\r\n            this.handleName(event.target.value)\r\n            else if(event.target.name === 'Total Amount')\r\n                this.handleAmount(event.target.value)\r\n                else if(event.target.name === 'Add Details')\r\n                     this.handleDetails(event.target.value)\r\n    }\r\n\r\n    handleName = value =>{\r\n        this.setState({newProduct: {\r\n            id: 0,\r\n            name: value,\r\n            amount: this.state.newProduct.amount,\r\n            details: this.state.newProduct.details            \r\n        }})\r\n    }\r\n    \r\n    handleAmount = value =>{\r\n        this.setState({newProduct: {\r\n            id: 0,\r\n            name:  this.state.newProduct.name,\r\n            amount: value,\r\n            details: this.state.newProduct.details            \r\n        }})\r\n    }\r\n    \r\n    handleDetails = value =>{\r\n        this.setState({newProduct: {\r\n            id: 0,\r\n            name:  this.state.newProduct.name,\r\n            amount: this.state.newProduct.amount,\r\n            details:  value           \r\n        }})\r\n    }\r\n\r\n    postNewProduct = ()=>{\r\n        Axios.post(window.$domain + 'api/MTServices',this.state.newProduct).then(resp=>{\r\n            this.setState({redirect: true})\r\n        }).catch(err=>{\r\n            alert(err)\r\n        })\r\n    }\r\n    render(){\r\n        return  <AdminLayout>\r\n                    {\r\n                        this.state.redirect? <Redirect to='/products'/>:''\r\n                    }\r\n                    <div className='jumbotron'>\r\n                        <h3>Add New Product</h3>\r\n                        <TbInput DataInputHandler={this.inputHandler} Name='Scheme/Product Name' type='text'   />\r\n                        <TbInput DataInputHandler={this.inputHandler} Name='Total Amount' type='Number'   />\r\n                        <TbInput DataInputHandler={this.inputHandler} Name='Add Details' type='text'   />\r\n                        <Link className='btn btn-success' onClick={this.postNewProduct}>Add Product</Link>\r\n                    </div>\r\n                </AdminLayout>\r\n    }\r\n}\r\nexport default AddNewProduct;","import axios from \"axios\";\r\nimport { Component } from \"react\";\r\nimport { Redirect } from \"react-router\";\r\nimport AdminLayout from \"../../../AdminLayout/AdminLayout\";\r\nimport TbInputControl from '../../UserManagement/UI/TbInputControl';\r\nimport Cookie from 'universal-cookie';\r\n\r\n\r\nclass ModifyPayment extends Component{\r\n    state = {\r\n        amount: 0,\r\n        EntryDateTime: null,\r\n        redirect: false,\r\n        accDetailsId: 0,\r\n        isLogin: true\r\n    }\r\n    ReadyUser = event =>{\r\n        if(event.target.value > 0)\r\n            this.setState({amount: event.target.value})\r\n    }\r\n    postPaymnet= ()=>{\r\n        axios.get(window.$domain + 'api/AccDetails/' + this.props.match.params.id)\r\n        .then(resp=>{\r\n            var data = resp.data;\r\n            data.payedAmount = this.state.amount;\r\n            data.payingDate = this.state.EntryDateTime;\r\n            axios.put(window.$domain + 'api/AccDetails/' + this.props.match.params.id,data)\r\n            .then(modifiedResp=>{\r\n                \r\n                this.setState({accDetailsId: resp.data.accId});\r\n                this.setState({redirect: true});\r\n            });\r\n        })\r\n        .catch(err=>{\r\n            alert(err);\r\n        });\r\n    }\r\n    EntryDateTimeHandler = (event)=>{\r\n        this.setState({EntryDateTime: event.target.value});\r\n    }\r\n    componentDidMount(){\r\n        var cookies = new Cookie();\r\n        if(cookies.get('logedInUser') === undefined)\r\n        {\r\n            this.setState({isLogin: false});\r\n        }\r\n    }\r\n    render(){\r\n        return(\r\n                <AdminLayout>\r\n                    {this.state.isLogin?'':<Redirect to='/login'/>}\r\n                    <div className=\"jumbotron mt-3\">\r\n                    {\r\n                        this.state.redirect ? <Redirect to={'/Accounts/'+this.state.accDetailsId+'/Payment'} />: ''\r\n                    }\r\n                    <h3>Modify Payment</h3>\r\n                    <hr/>\r\n                        <label for=\"Entry\">Entry Date Time:--</label>\r\n                        <input onChange={this.EntryDateTimeHandler} type=\"datetime-local\" id=\"Entry\" name=\"Entry\"/>\r\n                        <TbInputControl DataInputHandler={this.ReadyUser} Name={'Payment'} inutType={'number'} ctrlName={'Add Payment'} />\r\n                        <button onClick={this.postPaymnet} className='btn btn-success'>Post Amount</button>\r\n                    </div>\r\n                </AdminLayout>\r\n        )\r\n    }\r\n}\r\nexport default ModifyPayment;","//Library Imports\nimport { Route, Switch } from 'react-router';\n\n//All Css Imports\nimport './App.css';\n\n//Component Imports\nimport MTHome from './MalikTraders/MalikTraderApp';\nimport Login from './MalikTraders/Components/Pages/Login/Login'\nimport UserManagement from './MalikTraders/Components/Pages/UserManagement/UserManagement';\nimport AccountDetails from './MalikTraders/Components/Pages/AccountManagement/ShowAccountDetails';\nimport PaymentHistory from './MalikTraders/Components/Pages/AccountManagement/PaymentHistory/PaymentHistory';\nimport CreateNewUser from './MalikTraders/Components/Pages/UserManagement/CreateUser/CreateUser';\nimport AttachWithNewScheme from './MalikTraders/Components/Pages/UserManagement/AttachWithNewScheme/AttachtoNewScheme';\nimport ProductManager from './MalikTraders/Components/Pages/ProductManager/ProductManager'\nimport AddNewProduct from './MalikTraders/Components/Pages/ProductManager/AddNewProduct/AddNewProduct';\nimport ModifyPayment from './MalikTraders/Components/Pages/AccountManagement/ModifyPayment/ModifyPayment';\n\nwindow.$domain = 'https://maliktraders20211011002845.azurewebsites.net/' //global variable\n//window.$domain = 'https://localhost:44302/' //global variable\n\n//Start \nfunction App() {\n  return (\n    <>\n      <Switch>\n        <Route path=\"/\" exact component={MTHome} />\n        <Route path='/Products' exact  component={ProductManager} />\n        <Route path='/AddProduct' exact  component={AddNewProduct} />\n        <Route path=\"/manageuser\" exact component={UserManagement} />\n        <Route path=\"/ShowAccountDetails/:id\" component={AccountDetails} />\n        <Route path='/Accounts/:id/Payment' component={PaymentHistory} />\n        <Route path={'/CreateUser'} component={CreateNewUser}/>\n        <Route path='/User/:id/AddtoNewScheme' exact component={AttachWithNewScheme} />\n        <Route path='/login' component={Login} />\n        <Route path={'/account/payment/modification/:id'} component={ModifyPayment}/>\n      </Switch>\n    </>\n  );\n}\n\n//Exports \nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const SIGNIN_USER = \"SIGNIN_USER\";\r\nexport const SIGNOUT_USER = \"SIGNOUT_USER\";","import Cookies from 'universal-cookie';\r\nimport * as ActionTypes from \"./ActionTypes\"\r\n\r\nconst initState = {\r\n    loggedinUser: {\r\n        email: \"\",\r\n        displayName: \"\",\r\n        pictureURL: \"\",\r\n        loggedinStatus: false\r\n    },\r\n};\r\n\r\n\r\nconst userReducer=(state = initState,action)=>{\r\n    const cookies = new Cookies();\r\n    const storedCookie = cookies.get('user');\r\n    if(storedCookie)\r\n        if(storedCookie.loggedinStatus)\r\n            return {\r\n                ...state,\r\n                loggedinUser: cookies.get('user')\r\n            };\r\n    cookies.set('user', state.loggedinUser , { path: '/' });\r\n    switch(action.type){\r\n        case ActionTypes.SIGNIN_USER:\r\n            console.log(action)\r\n            cookies.set('user', action.payload , { path: '/' });\r\n            return{\r\n                ...state,\r\n                loggedinUser: action.payload\r\n            }\r\n        case ActionTypes.SIGNOUT_USER:\r\n            const SetEmptyUser = {\r\n                loggedinUser: {\r\n                    email: \"\",\r\n                    displayName: \"\",\r\n                    pictureURL: \"\",\r\n                    loggedinStatus: false\r\n                }\r\n            }\r\n            cookies.set('user', SetEmptyUser.loggedinUser  , { path: '/' });\r\n                return{\r\n                    ...state,\r\n                    loggedinUser: SetEmptyUser.loggedinUser\r\n                }\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport default userReducer;","import { applyMiddleware, createStore } from 'redux'\r\nimport userReducer from './User/Reducer'\r\n\r\nfunction logger({ getState }) {\r\n    return next => action => {\r\n      console.log('will dispatch', action)\r\n  \r\n      // Call the next dispatch method in the middleware chain.\r\n      const returnValue = next(action)\r\n  \r\n      console.log('state after dispatch', action)\r\n  \r\n      // This will likely be the action itself, unless\r\n      // a middleware further in chain changed it.\r\n      return returnValue\r\n    }\r\n  }\r\n\r\nconst store =  createStore(userReducer,applyMiddleware(logger));\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport Store from './Store/Store'\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={Store}>\n        <App />\n      </Provider>\n      </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}