{"version":3,"sources":["MalikTraders/Components/Pages/UserManagement/UserList/AllUserListStyles.module.css","MalikTraders/Components/Pages/AccountManagement/UI/CardStyling.module.css","MalikTraders/Components/NavBar/NavBar.jsx","MalikTraders/Components/AdminLayout/AdminLayout.jsx","MalikTraders/Components/DashBoard/DashBoardNavigator/DashBoardNavigator.jsx","MalikTraders/Components/DashBoard/TodayRecovery/TodayRecovery.jsx","MalikTraders/Components/DashBoard/MonthlyRecoveryReport/MonthlyRecoveryReport.jsx","MalikTraders/Components/DashBoard/MonthlyReport/MonthlyReportChart.jsx","MalikTraders/Assets/StaticFunc/UI.jsx","MalikTraders/Components/DashBoard/MonthlyReport/MonthlyReport.jsx","MalikTraders/Components/DashBoard/MainDashBoard.jsx","MalikTraders/MalikTraderApp.jsx","MalikTraders/Components/Pages/Login/Login.jsx","MalikTraders/Components/Pages/UserManagement/UserList/AllUserList.jsx","MalikTraders/Components/Pages/UserManagement/UserManagement.jsx","MalikTraders/Components/Pages/UserManagement/UI/TbInputControl.jsx","MalikTraders/Components/Pages/UserManagement/AddNewPayment/AddNewPayment.jsx","MalikTraders/Components/Pages/AccountManagement/DisplayPaymentDetails/PaymentDetails.jsx","MalikTraders/Components/Pages/AccountManagement/UI/AccountCard.jsx","MalikTraders/Components/Pages/AccountManagement/ShowAccountDetails.jsx","MalikTraders/Components/Pages/AccountManagement/PaymentHistory/PaymentHistory.jsx","MalikTraders/Components/Pages/UserManagement/CreateUser/CreateUser.jsx","MalikTraders/Components/Pages/UserManagement/AttachWithNewScheme/AttachtoNewScheme.jsx","MalikTraders/Components/Pages/ProductManager/ProductManager.jsx","MalikTraders/Components/Pages/ProductManager/UI/TbInput.jsx","MalikTraders/Components/Pages/ProductManager/AddNewProduct/AddNewProduct.jsx","MalikTraders/Components/Pages/AccountManagement/ModifyPayment/ModifyPayment.jsx","MalikTraders/Components/NavBar/ShopNav.jsx","MalikTraders/Components/AdminLayout/ShopAdminLayout.jsx","MalikTraders/Components/Pages/Shop/HeaderBox/HeaderBox.jsx","MalikTraders/Components/Pages/Shop/PaymentHistory/PaymentHistory.jsx","MalikTraders/Components/Pages/Shop/Shop.jsx","MalikTraders/Components/Pages/Shop/NewTransection/TransectionTypeCheckBoxs.jsx","MalikTraders/Components/Pages/Shop/NewTransection/NewTransection.jsx","MalikTraders/Components/Pages/Shop/CreateShop/CreateShop.jsx","App.js","reportWebVitals.js","Store/User/ActionTypes.js","Store/User/Reducer.js","Store/Store.js","index.js"],"names":["module","exports","NavBar","className","id","to","class","aria-hidden","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","aria-haspopup","aria-labelledby","Component","AdminLayout","props","children","DashBoardNavigator","active","inActive","onClick","menuSwitchingHandler","currentMenu","TodayRecovery","state","dataArray","recoverySum","loadData","axios","get","window","$domain","then","resp","setState","data","map","payed_Amount","this","length","name","phone","scheme","pay_Time","accId","MonthlyRemainRecovery","dataLoader","event","Date","target","value","toDateString","min","defaultValue","onChange","MonthlyReportChart","title","graphData","width","height","chartType","loader","options","vAxis","hAxis","seriesType","series","6","rootProps","goBack","style","position","top","monthNames","MonthlyReport","useState","SetData","totalCustomers","setTotalCustomers","productList","setProductList","startDateRef","useRef","EndDateRef","cbAllowDisableAccountRef","selectedScheme","setSelectedScheme","useEffect","console","log","forEach","ele","selected","MTService","ref","for","current","alert","checked","compiledData","element","push","month","getMonth","totalPaidAmount","totalPaidCustomer","totalCustomer","catch","marginLeft","marginRight","MainDashBoard","menuIndex","menuSwitchHandler","menu","MTTraderApp","isLogin","setLogin","undefined","Cookie","Login","loginUser","displayAnimator","Axios","post","user","password","role","set","userName","email","path","maxAge","login","err","message","bind","textAlign","onSubmit","Spinner","animation","alignContent","UserList","LoadUserList","userList","userResp","accResp","newArray","shopAcc","userId","isAcc","UserEnableandDisableHandler","confirm","getAccState","is","i","Styles","zoom","gender","phoneNumber","cnic","lastLogin","toLocaleTimeString","registration_Date","isUserDisabled","UserManagement","TbInputControl","ctrlName","Name","inutType","DataInputHandler","AddNewPayment","amount","redirect","ReadyUser","postPaymnet","cookies","Accid","PaymentDetails","IsReadyforPayment","setIsReadyforPayment","peymentHistory","payment","payingDate","payedAmount","AccId","AccountCard","showToast","setShowtoast","toast","closingReason","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","schemeName","desc","isAccClosed","paymentDisplayHandler","gotoPaymentHistory","disableAcc","enableAcc","styles","AccountDetails","gotoHistoryPaymentRedirectHandler","gotoHistoryPaymentRedirect","redir","AccountEnableHandler","ClosingDescription","prompt","put","Accounts","AccountDisableHandler","Account","DisplayAcc","accPaymentDetails","Schemes","match","params","history","Scheme","mtServiceId","details","closingDescription","PaymentHistory","printModeHandler","goneToPrint","searchByDateTime","searchQuery","startDate","toLocaleDateString","endDate","historyList","queryExecuted","queryDataLoader","postedByUserId","arrayHistory","payDate","paymentId","PostedByUser","backToAppMode","isPrintable","goBackFunc","paymentHistoryList","AccID","DisplayHistory","sum","updateComponent","print","printPage","cursor","color","backgroundColor","CreateNewUser","setFullName","setUserName","setGender","setEmail","setPassword","setCNIC","setAddress","setPhoneNumber","userDetails","address","setUserType","CreatNewUser","response","MTServices","amountInputRef","React","createRef","AttachWithNewScheme","TotalAmountPayable","MonthlyInstallment","AccProtoType","monthlyInstalment","userid","amountPayable","PostData","duplicated","acc","MTServiceSelection","mtService","ProductManager","mtServices","service","TbInput","AddNewProduct","newProduct","inputHandler","handleName","handleAmount","handleDetails","postNewProduct","ModifyPayment","EntryDateTime","accDetailsId","modifiedResp","EntryDateTimeHandler","ShopAdminLayout","ShopNav","HeaderBox","currentAmount","scope","tooltip","accHistory","AccPayment","paymentTitle","amountRecived","amountPaid","transectionDate","paymentDescription","Shop","shopId","redirectToLogin","propsDataMount","currentPayment","Jumbotron","TrensectionTypeCheckBoxs","t_State","NewTransection","redirectToBack","submitTransection","t_Type","shopAccountId","setT_Type","TransectionTypeCheckBoxs","rows","CreateShop","responce","bankName","accountNo","isDefaulter","App","exact","component","MTHome","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","SIGNIN_USER","SIGNOUT_USER","initState","loggedinUser","displayName","pictureURL","loggedinStatus","userReducer","action","Cookies","storedCookie","ActionTypes","payload","SetEmptyUser","store","createStore","applyMiddleware","getState","next","ReactDOM","render","StrictMode","Store","document","getElementById"],"mappings":"wGACAA,EAAOC,QAAU,CAAC,KAAO,kC,mBCAzBD,EAAOC,QAAU,CAAC,KAAO,4B,+LCiCVC,E,uKA9BP,OACI,qBAAKC,UAAU,sDAAsDC,GAAG,UAAxE,SACI,sBAAKD,UAAU,YAAf,UACI,cAAC,IAAD,CAAME,GAAG,IAAIC,MAAM,iCAAnB,SAAqD,mBAAIH,UAAU,aAAaI,cAAY,WAC5F,wBAAQJ,UAAU,sCAAsCK,KAAK,SAASC,cAAY,WAAWC,cAAY,oBAAoBC,gBAAc,mBAAmBC,gBAAc,QAAQC,aAAW,oBAA/L,SAAmN,sBAAMV,UAAU,0BACnO,qBAAKA,UAAU,2BAA2BC,GAAG,mBAA7C,SACI,qBAAID,UAAU,kCAAd,UACI,oBAAIA,UAAU,WAAd,SAAyB,eAAC,IAAD,CAAMA,UAAU,6BAA6BE,GAAG,IAAhD,UACrB,mBAAIF,UAAU,cAAcI,cAAY,SADnB,qBAGzB,qBAAIJ,UAAU,oBAAd,UACI,eAAC,IAAD,CAAMA,UAAU,2BAA4BC,GAAG,yBAAyBK,cAAY,WAAWK,gBAAc,OAAOF,gBAAc,QAAlI,UACA,mBAAIT,UAAU,aAAaI,cAAY,SADvC,eAGA,sBAAKJ,UAAU,gBAAgBY,kBAAgB,yBAA/C,UACI,cAAC,IAAD,CAAMZ,UAAU,gBAAiBE,GAAG,cAApC,4BACA,cAAC,IAAD,CAAMF,UAAU,gBAAgBE,GAAG,cAAnC,6BACA,cAAC,IAAD,CAAMF,UAAU,yBAAhB,wCAGR,oBAAIA,UAAU,WAAd,SAAyB,eAAC,IAAD,CAAMA,UAAU,6BAA6BE,GAAG,YAAhD,UAA4D,mBAAIF,UAAU,cAAcI,cAAY,SAApG,kC,GAtBhCS,aCSNC,EATK,SAAAC,GAChB,OACI,qCACI,cAAC,EAAD,IACCA,EAAMC,a,QCeJC,EAlBY,SAACF,GACxB,IAAIG,EAAS,kBACTC,EAAW,WACf,OACI,qBAAInB,UAAU,2BAAd,UACI,oBAAIA,UAAU,WAAd,SACI,cAAC,IAAD,CAAMoB,QAAW,kBAAIL,EAAMM,qBAAqB,IAAIrB,UAAiC,IAAtBe,EAAMO,YAAoBJ,EAASC,EAAlG,sCAEJ,oBAAInB,UAAU,WAAd,SACI,cAAC,IAAD,CAAMoB,QAAW,kBAAIL,EAAMM,qBAAqB,IAAKrB,UAAiC,IAAtBe,EAAMO,YAAoBJ,EAASC,EAAnG,oCAEJ,oBAAInB,UAAU,WAAd,SACI,cAAC,IAAD,CAAMoB,QAAW,kBAAIL,EAAMM,qBAAqB,IAAIrB,UAAiC,IAAtBe,EAAMO,YAAoBJ,EAASC,EAAlG,wC,gBC8DDI,E,4MArEXC,MAAO,CACHC,UAAW,GACXC,YAAa,G,EAGjBC,SAAW,WACPC,IAAMC,IAAIC,OAAOC,QAAU,kCAC1BC,MAAK,SAAAC,GACF,EAAKC,SAAS,CAACT,UAAWQ,EAAKE,OAC/B,EAAKX,MAAMC,UAAUW,KACnB,SAAAD,GACE,EAAKD,SAAS,CAACR,YAAa,EAAKF,MAAME,YAAcS,EAAKE,sB,kEAM/B,IAAhCC,KAAKd,MAAMC,UAAUc,QACxBD,KAAKX,a,+BAKL,OAAO,qCACL,qBAAKxB,MAAM,yBAAX,SACE,qBAAKA,MAAM,YAAX,SACI,sBAAKA,MAAM,oCAAX,UACI,sBAAKA,MAAM,WAAX,UACI,qBAAKA,MAAM,4DAAX,mCAEA,sBAAKA,MAAM,yCAAX,gBAAwD,IAAImC,KAAKd,MAAME,kBAE3E,qBAAKvB,MAAM,WAAX,SACI,mBAAGA,MAAM,mDAKvB,wBAAOA,MAAM,8BAAb,UACE,gCACE,+BACE,6CACA,uCACA,8CACA,6CACA,8CACA,mDAGJ,gCAEsC,IAAhCmC,KAAKd,MAAMC,UAAUc,OAAeD,KAAKd,MAAMC,UAAUW,KACvD,SAAAD,GACA,OAAQ,+BACM,6BAAKA,EAAKK,OACV,6BAAKL,EAAKM,QACV,6BAAKN,EAAKE,eACV,6BAAKF,EAAKO,SACV,6BAAKP,EAAKQ,WACV,6BAAI,cAAC,IAAD,CAAMzC,GAAI,aAAciC,EAAKS,MAAO,WAApC,0BAEnB,8D,GA/DS/B,aCsDbgC,E,4MApDXrB,MAAO,CACHC,UAAW,I,EAGfE,SAAW,WACPC,IAAMC,IAAIC,OAAOC,QAAU,kDAC1BC,MAAK,SAAAC,GACF,EAAKC,SAAS,CAACT,UAAWQ,EAAKE,W,EAOvCW,WAAY,SAAAC,GAEVnB,IAAMC,IAAIC,OAAOC,QAAU,gDAAkD,IAAIiB,KAAKD,EAAME,OAAOC,OAAOC,gBACvGnB,MAAK,SAAAC,GACF,EAAKC,SAAS,CAACT,UAAWQ,EAAKE,W,kEAPA,IAAhCG,KAAKd,MAAMC,UAAUc,QACxBD,KAAKX,a,+BAUL,OAAO,qCACG,uBAAO3B,UAAU,2BAA2BK,KAAK,QAAQJ,GAAG,QAAQuC,KAAK,QACzEY,IAAI,UAAUC,aAAe,UAAUC,SAAUhB,KAAKQ,aAEtD,wBAAO3C,MAAM,8BAAb,UACE,gCACE,+BACE,6CACA,uCACA,6CACA,mDAGJ,gCAEsC,IAAhCmC,KAAKd,MAAMC,UAAUc,OAAeD,KAAKd,MAAMC,UAAUW,KACvD,SAAAD,GAAI,OAAI,+BACI,6BAAKA,EAAKK,OACV,6BAAKL,EAAKM,QACV,6BAAKN,EAAKO,SACV,6BAAI,cAAC,IAAD,CAAMxC,GAAI,aAAciC,EAAKS,MAAO,WAApC,0BAEjB,qE,GA9CS/B,a,QCqBrB0C,EArBY,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,MAAMC,EAAc,EAAdA,UAC/B,OACI,cAAC,IAAD,CACIC,MAAO,QACPC,OAAQ,QACRC,UAAU,aACVC,OAAQ,qBAAK7D,UAAU,YAAf,2BACRmC,KAAMsB,EACNK,QAAS,CACLN,MAAOA,EACPO,MAAO,CAAEP,MAAO,iBAChBQ,MAAO,CAAER,MAAO,WAChBS,WAAY,OACZC,OAAQ,CAAEC,EAAG,CAAE9D,KAAM,UAEzB+D,UAAW,CAAE,cAAe,QCrB3BC,EAAQ,SAACtD,GAClB,OAAO,yBAAQf,UAAU,kBAAkBoB,QAAS,kBAAIL,EAAMsD,UAAUC,MAAO,CAACC,SAAU,WAAYC,IAAK,QAApG,UACP,mBAAIrE,MAAO,sBAAuBC,cAAY,SADvC,cAIEqE,EAAa,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OACzE,OAAQ,SAAU,YAAa,UAAW,WAAY,YC8EzCC,EA9EO,SAAA3D,GAAS,IAAD,EACJ4D,mBAAS,MADL,mBACrBxC,EADqB,KACfyC,EADe,OAEeD,mBAAS,GAFxB,mBAErBE,EAFqB,KAENC,EAFM,OAGSH,mBAAS,MAHlB,mBAGrBI,EAHqB,KAGTC,EAHS,KAIpBC,EAAeC,iBAAO,MACtBC,EAAaD,iBAAO,MACpBE,EAA2BF,iBAAO,MANd,EAOeP,mBAAS,MAPxB,mBAOrBU,EAPqB,KAONC,EAPM,KAyC1B,OAPAC,qBAAU,WACa,OAAhBR,GACHnD,IAAMC,IAAIC,OAAOC,QAAU,kBACvBC,MAAK,SAAAC,GACD+C,EAAe/C,EAAKE,YAI5B,qCACI,8CACA,yBAAQmB,SAnCC,SAAAP,GACbyC,QAAQC,IAAI,UACZV,EAAYW,SAAQ,SAAAC,GACbA,EAAInD,OAASO,EAAME,OAAOC,OACzBoC,EAAkBK,EAAI1F,QA+BGE,MAAM,iCAAiCO,aAAW,0BAA/E,UACgB,wBAAQkF,UAAQ,EAAhB,0CAEQb,EACAA,EAAY3C,KAAI,SAAAyD,GACZ,OAAO,wBAAQ5F,GAAI4F,EAAU5F,GAAtB,SAA8C4F,EAAUrD,MAAzBqD,EAAU5F,OAEpD,wBAAQ2F,UAAQ,EAAhB,mEAGpB,sBAAKzF,MAAM,iBAAX,UACA,uBAAO2F,IAAKV,EAA0BjF,MAAM,mBAAmBE,KAAK,WAAW6C,MAAM,GAAGjD,GAAG,kBAC3F,uBAAOE,MAAM,mBAAmB4F,IAAI,gBAApC,uCAIA,uBAAOA,IAAI,aAAX,0BACA,uBAAOD,IAAKb,EAAcjF,UAAU,4BAA4BK,KAAK,QAAQJ,GAAG,aAAauC,KAAK,eAElG,uBAAOuD,IAAI,YAAX,wBACA,uBAAQD,IAAKX,EAAYnF,UAAU,2BAA2BK,KAAK,QAAQJ,GAAG,QAAQuC,KAAK,aAC3F,qBAAKxC,UAAU,MAAf,SAEA,wBAAQA,UAAU,qBAAqBoB,QAlDhC,WAEO,OAAnBiE,EAC+B,KAA/BJ,EAAae,QAAQ9C,OAA6C,KAA7BiC,EAAWa,QAAQ9C,MACxD+B,EAAae,QAAQ9C,MAAQiC,EAAWa,QAAQ9C,MAAS+C,MAAM,yCAElErE,IAAMC,IAAIC,OAAOC,QAAQ,mEAAoEkD,EAAae,QAAQ9C,MAAO,iBAAkBiC,EAAWa,QAAQ9C,MAAO,aAAcmC,EAAgB,iBAAmBD,EAAyBY,QAAQE,SACtPlE,MAAK,SAAAC,GACF,IAAIkE,EAAc,CAAC,CAAC,QAAQ,4BAC5BlE,EAAKE,KAAKA,KAAKuD,SAAQ,SAAAU,GACnBD,EAAaE,KAAK,CAAC5B,EAAW,IAAIzB,KAAKoD,EAAQE,OAAOC,YAAc,SAAUH,EAAQI,gBAAkB,MAAOJ,EAAQK,uBAE3H3B,EAAkB7C,EAAKE,KAAKuE,eAC5B9B,EAAQuB,MAEXQ,OAAM,SAAA1E,GAAI,OAAGgE,MAAMhE,EAAKE,SAZiD8D,MAAM,6BADnDA,MAAM,yBAgDiC3B,MAAO,CAACsC,WAAY,OAAQC,YAAa,OAArG,sBAEA,cAAC,EAAD,CACIrD,MAAO,6DAA+DqB,EACtEpB,UAAatB,QC7CjB2E,E,4MAzBZtF,MAAQ,CACJuF,UAAW,G,EAEfC,kBAAoB,SAAAC,GAChB,EAAK/E,SAAS,CAAC6E,UAAWE,K,uDAG1B,OACI,qCACI,qBAAKjH,UAAU,WAAf,SACI,cAAC,EAAD,CAAoBsB,YAAagB,KAAKd,MAAMuF,UAAW1F,qBAAsBiB,KAAK0E,sBAEtF,qBAAKhH,UAAU,WAAf,SAEiC,IAAzBsC,KAAKd,MAAMuF,UAAiB,cAAC,EAAD,IACF,IAAzBzE,KAAKd,MAAMuF,UAAiB,cAAC,EAAD,IACH,IAAzBzE,KAAKd,MAAMuF,UAAiB,cAAC,EAAD,IAC3B,Y,GAlBElG,aCoBbqG,EAnBK,WAAM,IAAD,EACIvC,oBAAS,GADb,mBAChBwC,EADgB,KACRC,EADQ,KAOrB,YAJkCC,KADpB,IAAIC,KACPzF,IAAI,iBAA4C,IAAZsF,GAC3CC,GAAS,GAIT,mCACI,eAAC,EAAD,WACKD,EAAQ,GAAG,cAAC,IAAD,CAAUjH,GAAG,WACzB,qBAAKF,UAAU,mDAAmDsE,MAAO,CAACX,OAAQ,SAAlF,SACI,cAAC,EAAD,Y,gBCoGL4D,E,kDA9GX,WAAYxG,GAAQ,IAAD,8BACf,cAAMA,IAUVyG,UAAU,WACN,EAAKtF,SAAS,CAACuF,iBAAiB,IAChCC,IAAMC,KAAK7F,OAAOC,QAAU,gCAAiC,EAAKP,MAAMoG,KAAO,aAAc,EAAKpG,MAAMqG,UACvG7F,MAAK,SAAAC,GACoB,UAAnBA,EAAKE,KAAK2F,MAKbJ,IAAMC,KAAK7F,OAAOC,QAAU,8BAA+BE,EAAKE,KAAKlC,IAChE+B,MACG,SAAAC,GAGIyF,IAAMC,KAAK7F,OAAOC,QAAU,mCAAoCE,EAAKE,MACpEH,MACG,SAAAC,GAEIgE,MAAM,yCAGZ,IAAIqB,KACVS,IAAI,cAAe,CACvBC,SAAU/F,EAAKE,KAAK6F,SACpBC,MAAOhG,EAAKE,KAAK8F,MACjBH,KAAM7F,EAAKE,KAAK2F,KAChB7H,GAAIgC,EAAKE,KAAKlC,IAEd,CACAiI,KAAM,IACNC,OAAQ,OAEV,EAAKjG,SAAS,CAACkG,OAAO,IACtB,EAAKlG,SAAS,CAACuF,iBAAiB,KA3B9BxB,MAAM,yDA6BbU,OACG,SAAA0B,GACOA,GACHpC,MAAMoC,EAAIC,QAAU,yDACpB,EAAKpG,SAAS,CAACuF,iBAAiB,QAhDxC,EAAKjG,MAAQ,CACToG,KAAM,GACNC,SAAU,GACVO,OAAO,EACPX,iBAAiB,GAEzB,EAAKD,UAAY,EAAKA,UAAUe,KAAf,gBARE,E,qEAuDmBlB,KADpB,IAAIC,KACPzF,IAAI,iBAAqD,IAArBS,KAAKd,MAAM4G,OACtD9F,KAAKJ,SAAS,CAACkG,OAAO,M,+BAGrB,IAAD,OACJ,OACI,sBAAKpI,UAAU,iBAAiBsE,MAAO,CAACZ,MAAO,OAA/C,UACKpB,KAAKd,MAAM4G,MAAO,cAAC,IAAD,CAAUlI,GAAG,MAAM,GACtC,sBAAKF,UAAU,MAAf,UACI,qBAAKA,UAAU,sBACf,sBAAKA,UAAU,8BAAf,UAEI,qBAAKA,UAAU,yBAAf,SAEI,oBAAGsE,MAAO,CAACkE,UAAW,UAAtB,UACI,mBAAGxI,UAAU,YAAYI,cAAY,SADzC,cAKJ,qBAAKJ,UAAU,uBAAf,SACI,qBAAKA,UAAU,uBAAf,SACI,uBAAMyI,UAAQ,EAAd,UACI,sBAAKzI,UAAU,aAAf,UACI,uBAAOA,UAAU,qBAAjB,sBACA,uBAAOsD,SAAU,SAAAP,GAAK,OAAG,EAAKb,SAAS,CAAC0F,KAAM7E,EAAME,OAAOC,SAAS7C,KAAK,OAAOL,UAAU,oBAE9F,sBAAKA,UAAU,aAAf,UACI,uBAAOA,UAAU,qBAAjB,sBACA,uBAAOsD,SAAU,SAAAP,GAAK,OAAG,EAAKb,SAAS,CAAC2F,SAAU9E,EAAME,OAAOC,SAAS7C,KAAK,WAAWL,UAAU,oBAEtG,qBAAKA,UAAU,sBAAf,SAEQsC,KAAKd,MAAMiG,gBAAkB,cAACiB,EAAA,EAAD,CAASC,UAAU,SAC9C,qBAAK3I,UAAU,kCAAf,SACE,wBAAQoB,QAASkB,KAAKkF,UAAWxH,UAAU,oCAAoCsE,MAAO,CAACsE,aAAc,UAArG,8BAUxB,qBAAK5I,UAAU,mC,GApGnBa,a,iBCqLLgI,E,kDArLX,WAAY9H,GAAQ,IAAD,8BACf,cAAMA,IAQV+H,aAAa,SAAC/F,QACGsE,IAAVtE,EACH2E,IAAM7F,IAAIC,OAAOC,QAAU,aAAaC,MACpC,SAAAC,GACI,EAAKC,SAAS,CAAC6G,SAAU,KACzB,EAAK7G,SAAS,CAAC6G,SAAU9G,EAAKE,OAC9BF,EAAKE,KAAKC,KACN,SAAA4G,GACItB,IAAM7F,IAAIC,OAAOC,QAAU,8CAAgDiH,EAAS/I,IACnF+B,MAAK,SAAAiH,GACF,IAAIC,EAAW,EAAK1H,MAAM2H,QAC1BD,EAAS7C,KAAK,CAAC+C,OAAQJ,EAAS/I,GAAGoJ,MAAOJ,EAAQ9G,OAClD,EAAKD,SAAS,CAACiH,QAASD,OAE3BvC,OAAM,SAAA1E,GAAI,OAAEA,EAAKE,KAAKmG,iBAIrC3B,OACE,SAAA0B,GACIpC,MAAM,qBAAsBoC,MAGN,iBAAtBtF,EAAME,OAAOT,MAAkD,KAAvBO,EAAME,OAAOC,MACzDwE,IAAM7F,IAAIC,OAAOC,QAAU,8BAAgCgB,EAAME,OAAOC,OACxElB,MACI,SAAAC,GACI,EAAKC,SAAS,CAAC6G,SAAU9G,EAAKE,UAEpCwE,OACE,SAAA0B,GACIpC,MAAM,uBAAuBoC,MAIX,iBAAtBtF,EAAME,OAAOT,MAAkD,KAAvBO,EAAME,OAAOC,MACzDwE,IAAM7F,IAAIC,OAAOC,QAAU,8BAAgCgB,EAAME,OAAOC,OACxElB,MACI,SAAAC,GACI,EAAKC,SAAS,CAAC6G,SAAU9G,EAAKE,UAEpCwE,OACE,SAAA0B,GACIpC,MAAM,uBAAuBoC,MAIX,mBAAtBtF,EAAME,OAAOT,MAAoD,KAAvBO,EAAME,OAAOC,OAC3DwE,IAAM7F,IAAIC,OAAOC,QAAU,sCAAwCgB,EAAME,OAAOC,OAChFlB,MACI,SAAAC,GACI,EAAKC,SAAS,CAAC6G,SAAU9G,EAAKE,UAEpCwE,OACE,SAAA0B,GACIpC,MAAM,uBAAuBoC,OAhE1B,EAqEnBiB,4BAA8B,SAACF,GAExBtH,OAAOyH,QAAQ,2GAEd7B,IAAMC,KAAK7F,OAAOC,QAAU,gDAAkDqH,GACzEpH,MAAK,SAAAC,GACF,EAAK6G,mBA3EF,EAqFnBU,YAAY,SAAAJ,GAET,IADC,IAAIK,EAAI,KACAC,EAAG,EAAEA,EAAE,EAAKlI,MAAM2H,QAAQ5G,OAAOmH,IACrC,GAAG,EAAKlI,MAAM2H,QAAQO,GAAGN,SAAWA,EACpC,CACIK,EAAG,EAAKjI,MAAM2H,QAAQO,GAAGL,MACzB,MAGT,OAAOI,GA5FN,EAAKjI,MAAQ,CACXuH,SAAU,GACVI,QAAS,IAEf,EAAKL,aAAe,EAAKA,aAAaP,KAAlB,gBAND,E,gEAiFmB,IAA/BjG,KAAKd,MAAMuH,SAASxG,QACvBD,KAAKwG,iB,+BAcA,IAAD,OACJ,OACI,sBAAK9I,UAAU,0CAAf,UACI,8CAAgB,mBAAIA,UAAU,gBAAgBI,cAAY,YAC3D,sBAAKJ,UAAU,qCAAf,UACK,sBAAKA,UAAU,kBAAf,UACI,kCAAO,qCAAP,kBACA,uBAAQK,KAAK,OAAOF,MAAM,sBAAsBmD,SAAUhB,KAAKwG,aAActG,KAAK,oBAEtF,sBAAKxC,UAAU,kBAAf,UACI,kCAAQ,qCAAR,WACA,uBAAQK,KAAK,OAAOL,UAAU,sBAAsBsD,SAAUhB,KAAKwG,aAActG,KAAK,oBAE1F,sBAAKxC,UAAU,kBAAf,UACI,kCAAQ,qCAAR,gBACA,uBAAQK,KAAK,SAASL,UAAU,sBAAsBsD,SAAUhB,KAAKwG,aAActG,KAAK,yBAGjG,wCAAU,mBAAIxC,UAAW,eAAiB2J,IAAOC,KAAMxJ,cAAY,YAClE,qBAAKJ,UAAU,+BAAf,SACA,wBAAOA,UAAU,yBAAjB,UACI,gCACI,+BACI,2CACA,sCACA,sCACA,kDACA,mDACA,2CACA,wCACA,2CACA,uCACA,8CACA,sCACA,sEACA,4EACA,mDAGR,gCAEQsC,KAAKd,MAAMuH,SAASxG,OAAS,EAC7BD,KAAKd,MAAMuH,SAAS3G,KAAI,SAAAwF,GACpB,IAAIyB,EAAM,EAAKG,YAAY5B,EAAK3H,IAEhC,OAAO,+BACH,6BAAK2H,EAAK3H,KACV,6BAAK2H,EAAKE,OACV,6BAAKF,EAAKpF,OACV,6BACiB,UAAZoF,EAAKE,KAAe,GAAG,cAAC,IAAD,CAAM5H,GAAI,uBAAwB0H,EAAK3H,GAAvC,oBAE5B,6BACiB,UAAZ2H,EAAKE,KAAe,GAAG,cAAC,IAAD,CAAM5H,GAAI,SAAU0H,EAAK3H,GAAK,kBAA9B,mBAE5B,6BACmB,UAAd2H,EAAKE,KAAmBuB,EACzB,cAAC,IAAD,CAAMnJ,GAAI,SAAU0H,EAAK3H,GAAG,QAA5B,gBACA,cAAC,IAAD,CAAMC,GAAI,SAAW0H,EAAK3H,GAAK,uBAA/B,oBACC,KAEL,6BAAK2H,EAAKiC,SACV,6BAAKjC,EAAKI,WACV,6BAAKJ,EAAKK,QACV,6BAAKL,EAAKkC,cACV,6BAAKlC,EAAKmC,OACV,6BAAK,IAAI/G,KAAK4E,EAAKoC,WAAW7G,eAAiB,IAC5C,IAAIH,KAAK4E,EAAKoC,WAAWC,uBAC5B,6BAAK,IAAIjH,KAAK4E,EAAKsC,mBAAmB/G,iBACtC,oBAAI/B,QAAS,WAAqB,UAAZwG,EAAKE,MAAe,EAAKwB,4BAA4B1B,EAAK3H,KAAhF,SACK2H,EAAKuC,eACN,mBAAIhK,MAAO,cAAgBwJ,IAAOC,KAAMxJ,cAAY,SACpD,mBAAID,MAAO,eAAiBwJ,IAAOC,KAAMxJ,cAAY,aA3B7CwH,EAAK3H,OA8BrB,cAACyI,EAAA,EAAD,CAASC,UAAU,uB,GA5K5B9H,aCcRuJ,EAfQ,WAAK,IAAD,EACEzF,oBAAS,GADX,mBAClBwC,EADkB,KACVC,EADU,KAOvB,YAJkCC,KADpB,IAAIC,KACPzF,IAAI,iBAA4C,IAAZsF,GAC3CC,GAAS,GAIT,eAAC,EAAD,WACKD,EAAQ,GAAG,cAAC,IAAD,CAAUjH,GAAG,WACzB,cAAC,EAAD,QCPGmK,EATQ,SAAAtJ,GACnB,OACI,sBAAKZ,MAAM,cAAX,UACI,wBAAO4F,IAAKhF,EAAMuJ,SAAlB,UAA6BvJ,EAAMwJ,KAAnC,OACA,uBAAQlK,KAAMU,EAAMyJ,SAAUrK,MAAM,eAAemD,SAAUvC,EAAM0J,iBAAkBjI,KAAMzB,EAAMuJ,eC6C9FI,E,4MAzCXlJ,MAAQ,CACJmJ,OAAQ,EACRC,UAAU,G,EAEdC,UAAY,SAAA9H,GACLA,EAAME,OAAOC,MAAQ,GACpB,EAAKhB,SAAS,CAACyI,OAAQ5H,EAAME,OAAOC,S,EAE5C4H,YAAa,WACT,IAAIC,EAAU,IAAIzD,IAClB1F,IAAM+F,KACF7F,OAAOC,QAAU,iBACjB,CACI,GAAM,EACN,YAAe,EAAKP,MAAMmJ,OAC1B,WAAc,2BACd,MAAS,EAAK5J,MAAMiK,MACpB,eAAkBD,EAAQlJ,IAAI,eAAe5B,KAEnD+B,MACE,SAAAC,GACI,EAAKC,SAAS,CAAC0I,UAAU,Q,uDAKjC,OACQ,sBAAK5K,UAAU,iBAAf,UAEQsC,KAAKd,MAAMoJ,SAAW,cAAC,IAAD,CAAU1K,GAAI,aAAaoC,KAAKvB,MAAMiK,MAAM,aAAgB,GAEtF,6CACA,uBACA,oGACA,uBACA,cAAC,EAAD,CAAgBP,iBAAkBnI,KAAKuI,UAAWN,KAAM,UAAWC,SAAU,SAAUF,SAAU,gBACjG,wBAAQlJ,QAASkB,KAAKwI,YAAa9K,UAAU,kBAA7C,gC,GArCQa,aCsCboK,EAvCQ,SAAAlK,GAAQ,IAAD,EACqB4D,oBAAS,GAD9B,mBACrBuG,EADqB,KACHC,EADG,OAEDxG,oBAAS,GAFR,mBAErBwC,EAFqB,KAEbC,EAFa,KAO1B,YAHkCC,KADpB,IAAIC,KACPzF,IAAI,iBAA4C,IAAZsF,GAC3CC,GAAS,GAGT,sBAAKpH,UAAU,0CAAf,UACKmH,EAAQ,GAAG,cAAC,IAAD,CAAUjH,GAAG,WAEzB,wBAAOF,UAAU,8BAAjB,UACI,gCACI,+BACI,sCACA,8CAGR,gCAEQe,EAAMqK,eAAehJ,KAAI,SAAAiJ,GACrB,OAAO,+BACK,6BAAK,IAAIrI,KAAKqI,EAAQC,YAAYnI,iBAClC,6BAAKkI,EAAQE,yBAOzC,wBAAQnK,QAAS,kBAAyB+J,GAApBD,IAA6ElL,UAAU,kBAA7G,6BAEoB,IAAhBe,EAAMyK,OAAeN,EACrB,cAAC,EAAD,CAAeF,MAASjK,EAAMyK,QAAW,O,iCCN1CC,EA3BI,SAAA1K,GAAS,IAAD,EACQ4D,oBAAS,GADjB,mBAClB+G,EADkB,KACRC,EADQ,KAEDC,YAAM7K,EAAM8K,cAAe,CACjBtH,SAAU,YACVuH,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAU9E,IAE1C,OACI,sBAAKlH,MAAM,kBAAkBmE,MAAO,CAACZ,MAAO,SAA5C,UACKgI,EAAW,cAAC,IAAD,IAAmB,GAC/B,sBAAKvL,MAAM,YAAX,UACI,oBAAIA,MAAM,aAAV,SAAwBY,EAAMqL,aAC9B,mBAAGjM,MAAM,YAAT,SAAsBY,EAAMsL,OAC3BtL,EAAMuL,YAAa,GAAG,wBAAQlL,QAAS,kBAAIL,EAAMwL,sBAAsBxL,EAAMyK,QAAQrL,MAAM,kBAArE,6BACvB,wBAAQiB,QAAS,WAAKL,EAAMyL,mBAAmBzL,EAAMyK,QAASxL,UAAU,oBAAxE,0BACCe,EAAMuL,YAAa,GAAI,wBAAQlL,QAAS,WAAKL,EAAM0L,WAAW1L,EAAMyK,QAASxL,UAAU,sBAAhE,6BACvBe,EAAMuL,YAAY,wBAAQlL,QAAS,kBAAIuK,GAAcD,IAAY1L,UAAU,uBAAzD,yBAAsG,MAE5He,EAAMuL,YAAa,uBAAMlL,QAASL,EAAMuL,YAAY,kBAAIvL,EAAM2L,UAAU3L,EAAMyK,QAAO,GAAIrL,MAAO,sBAAwBwM,IAAO/C,KAA5G,cAAoH,mBAAIzJ,MAAM,aAAaC,cAAY,YAAmB,uBAAMD,MAAQ,uBAAyBwM,IAAO/C,KAA9C,cAAqD,mBAAIzJ,MAAM,cAAcC,cAAY,gBCqHpRwM,E,kDAtIX,WAAY7L,GAAQ,IAAD,8BACf,cAAMA,IAWV8L,kCAAkC,SAACrB,GAC/B,EAAKtJ,SAAS,CAAC4K,2BAA4B,CACvCtB,MAAOA,EACPuB,OAAO,MAfI,EAkBnBC,qBAAsB,SAACxB,GAEnB,IAAIyB,EAAqBnL,OAAOoL,OAAO,0CACb,OAAvBD,GACAnL,OAAOyH,QAAQ,6FAEd7B,IAAMyF,IAAIrL,OAAOC,QAAU,wCAA0CyJ,EAAQ,uBAAyByB,GACjGjL,MAAK,SAAAC,OAGV,EAAKC,SAAS,CAACkL,SAAU,SA5Bd,EA+BnBC,sBAAuB,SAAC7B,GAEpB,IAAIyB,EAAqBnL,OAAOoL,OAAO,2CACb,OAAvBD,GACAnL,OAAOyH,QAAQ,0FAEd7B,IAAMyF,IAAIrL,OAAOC,QAAU,wCAA0CyJ,EAAQ,uBAAyByB,GACjGjL,MAAK,SAAAC,OAEN,EAAKC,SAAS,CAACkL,SAAU,SAxClB,EAmFnBb,sBAAwB,SAACvB,GACrB,EAAKxJ,MAAM4L,SAAShL,KAChB,SAAAkL,GACOA,EAAQrN,KAAO+K,IACd,EAAK9I,SAAS,CAACqL,WAAYD,EAAQE,oBACnC,EAAKtL,SAAS,CAACsJ,MAAOR,SAtFlC,EAAKxJ,MAAQ,CACT4L,SAAS,KACTK,QAAS,KACTF,WAAY,KACZ/B,MAAO,EACPsB,2BAA4B,KAC5B3F,SAAS,GARE,E,gEA4CC,IAAD,OACY,OAAxB7E,KAAKd,MAAM4L,WACVxL,IAAMC,IAAIC,OAAOC,QAAU,mCAAqCO,KAAKvB,MAAM2M,MAAMC,OAAO1N,IACvF+B,MACG,SAAAC,GACI,EAAKC,SAAS,CAACkL,SAAUnL,EAAKE,UAGtCP,IAAMC,IAAIC,OAAOC,QAAU,kBAC1BC,MACG,SAAAC,GACI,EAAKC,SAAS,CAACuL,QAASxL,EAAKE,gBAMPkF,KADpB,IAAIC,KACPzF,IAAI,gBAEXS,KAAKJ,SAAS,CAACiF,SAAS,M,2CAGX,IAAD,OACW,OAAxB7E,KAAKd,MAAM4L,WACVxL,IAAMC,IAAIC,OAAOC,QAAU,mCAAqCO,KAAKvB,MAAM2M,MAAMC,OAAO1N,IACvF+B,MACG,SAAAC,GACI,EAAKC,SAAS,CAACkL,SAAUnL,EAAKE,UAGtCP,IAAMC,IAAIC,OAAOC,QAAU,kBAC1BC,MACG,SAAAC,GACI,EAAKC,SAAS,CAACuL,QAASxL,EAAKE,a,+BAgBpC,IAAD,OACJ,OACI,eAAC,EAAD,WACKG,KAAKd,MAAM2F,QAAQ,GAAG,cAAC,IAAD,CAAUjH,GAAG,WACM,OAAzCoC,KAAKd,MAAMsL,2BAAoC,GAAG,cAAC,IAAD,CAAU5M,GAAI,aAAeoC,KAAKd,MAAMsL,2BAA2BtB,MAAQ,aAC9H,sBAAKxL,UAAU,iBAAf,UACCqE,EAAO/B,KAAKvB,MAAM6M,SACf,sBAAK5N,UAAU,MAAf,UACI,sBAAKA,UAAU,WAAf,UACI,qBAAIsE,MAAO,CAACkE,UAAW,UAAvB,iCAAsD,mBAAIxI,UAAU,eAAeI,cAAY,YAEpE,OAAvBkC,KAAKd,MAAMiM,SAA4C,OAAxBnL,KAAKd,MAAM4L,SAAmB9K,KAAKd,MAAM4L,SAAShL,KAC7E,SAAAkL,GAAO,OAAI,EAAK9L,MAAMiM,QAAQrL,KAC1B,SAAAyL,GAAM,OAAGA,EAAO5N,KAAOqN,EAAQQ,YAAc,cAAC,EAAD,CACG1B,WAAYyB,EAAOrL,KACnB6J,KAAMwB,EAAOE,QACbvC,MAAO8B,EAAQrN,GACfsM,sBAAwB,EAAKA,sBAC7BC,mBAAqB,EAAKK,kCAC1BP,YAAcgB,EAAQhB,YACtBG,WAAY,EAAKY,sBACjBxB,cAAeyB,EAAQU,mBACvBtB,UAAW,EAAKM,uBAAyB,SAE/F,qBAAKhN,UAAU,MAAf,SAAqB,cAAC0I,EAAA,EAAD,CAASC,UAAU,cAGlD,sBAAK3I,UAAU,WAAf,UACI,oBAAIsE,MAAO,CAACkE,UAAW,UAAvB,qCAEIlG,KAAKd,MAAM+L,WACX,cAAC,EAAD,CAAgBnC,eAAgB9I,KAAKd,MAAM+L,WAAY/B,MAASlJ,KAAKd,MAAMgK,QAC1E,yC,GA9HJ3K,aCDvBoN,E,kDAEF,WAAYlN,GAAQ,IAAD,8BACf,cAAMA,IAkDVmN,iBAAmB,WACf,EAAKhM,SAAS,CAACiM,aAAc,EAAK3M,MAAM2M,eApDzB,EAsDnBC,iBAAmB,SAACrL,GACS,eAAtBA,EAAME,OAAOT,MACZ,EAAKN,SAAS,CAACmM,YAAa,CACxBC,UAAW,IAAItL,KAAKD,EAAME,OAAOC,OAAOqL,qBACxCC,QAAS,EAAKhN,MAAM6M,YAAYG,WAGf,aAAtBzL,EAAME,OAAOT,MACZ,EAAKN,SAAS,CAACmM,YAAa,CACxBC,UAAW,EAAK9M,MAAM6M,YAAYC,UAClCE,QAAS,IAAIxL,KAAKD,EAAME,OAAOC,OAAOqL,yBA9D9C,EAAK/M,MAAS,CACViN,YAAa,GACbtH,SAAS,EACTgH,aAAa,EACbE,YAAa,CACTC,UAAW,KACXE,QAAS,MAEbE,eAAe,GAEnB,EAAKC,gBAAkB,EAAKA,gBAAgBpG,KAArB,gBAZR,E,gEAcC,IAAD,OACsB,IAAlCjG,KAAKd,MAAMiN,YAAYlM,QAEtBX,IAAMC,IAAIC,OAAOC,QAAU,2CAA6CO,KAAKvB,MAAM2M,MAAMC,OAAO1N,IAC/F+B,MACG,SAAAC,GACQA,EAAKE,KAAKC,KACN,SAAAiJ,GACIzJ,IAAMC,IAAIC,OAAOC,QAAU,aAAesJ,EAAQuD,gBAAgB5M,MAC9D,SAAA4F,GACI,IAAIiH,EAAe,IACnBA,EAAe,EAAKrN,MAAMiN,aACbpI,KACT,CACIyI,QAASzD,EAAQC,WACjByD,UAAW1D,EAAQpL,GACnBsL,YAAaF,EAAQE,YACrByD,aAAcpH,EAAKzF,KAAK6F,WAEhC,EAAK9F,SAAS,CAACuM,YAAaI,aAMtDlI,OACE,SAAA0B,YAM0BhB,KADpB,IAAIC,KACPzF,IAAI,gBAEXS,KAAKJ,SAAS,CAACiF,SAAS,M,wCAoBd,IAAD,OAE+B,OAArC7E,KAAKd,MAAM6M,YAAYC,WACgB,OAAnChM,KAAKd,MAAM6M,YAAYG,UAE1BlM,KAAKJ,SAAS,CAACuM,YAAa,KAC5B7M,IAAM+F,KAAK7F,OAAOC,QAAU,gDAC9BO,KAAKvB,MAAM2M,MAAMC,OAAO1N,GACxB,cAAgBqC,KAAKd,MAAM6M,YAAYC,UACvC,YAAchM,KAAKd,MAAM6M,YAAYG,SAClCxM,MACG,SAAAC,GACQA,EAAKE,KAAKC,KACN,SAAAiJ,GACIzJ,IAAMC,IAAIC,OAAOC,QAAU,aAAesJ,EAAQuD,gBAAgB5M,MAC9D,SAAA4F,GACI,IAAIiH,EAAe,IACnBA,EAAe,EAAKrN,MAAMiN,aACbpI,KACT,CACIyI,QAASzD,EAAQC,WACjByD,UAAW1D,EAAQpL,GACnBsL,YAAaF,EAAQE,YACrByD,aAAcpH,EAAKzF,KAAK6F,WAEhC,EAAK9F,SAAS,CAACuM,YAAaI,aAMtDlI,OACE,SAAA0B,U,+BAKP,IAAD,OACJ,OACI,eAAC,EAAD,WACK/F,KAAKd,MAAM2F,QAAQ,GAAG,cAAC,IAAD,CAAUjH,GAAG,WAClCoC,KAAKd,MAAM2M,YAyBhB,cAAC,EAAD,CAAgBc,cAAe3M,KAAK4L,iBAAmBgB,aAAc,EAAMC,WAAY7M,KAAKvB,MAAM6M,QAASwB,mBAAqB9M,KAAKd,MAAMiN,YAAaY,MAAO/M,KAAKvB,MAAM2M,MAAMC,OAAO1N,KAxBpL,sBAAKD,UAAU,0CAAf,UACKqE,EAAO/B,KAAKvB,MAAM6M,SACnB,iDACA,uBAAO7H,IAAI,aAAX,0BACA,uBAAO/F,UAAU,4BAA4BK,KAAK,OAAOJ,GAAG,aAAauC,KAAK,aAC9Ea,aAAe,UAAUC,SAAUhB,KAAK8L,mBACxC,uBAAOrI,IAAI,YAAX,wBACA,uBAAO/F,UAAU,2BAA2BK,KAAK,OAAOJ,GAAG,QAAQuC,KAAK,WACtEc,SAAUhB,KAAK8L,mBACjB,qBAAKpO,UAAU,MAAf,SACA,wBAAQA,UAAU,qBAAsBsE,MAAO,CAACsC,WAAY,OAAQC,YAAa,OAC/EzF,QAASkB,KAAKqM,gBADhB,sBAI+B,OAA3BrM,KAAKd,MAAMiN,YACX,cAAC,EAAD,CACAW,mBAAqB9M,KAAKd,MAAMiN,YAChCY,MAAO/M,KAAKvB,MAAM2M,MAAMC,OAAO1N,GAC/BiP,aAAc,IAEZ,cAACxG,EAAA,EAAD,CAASC,UAAU,SAEzB,wBAAQvH,QAAS,kBAAI,EAAKc,SAAS,CAACiM,aAAa,KAAQnO,UAAU,kBAAnE,6B,GAtISa,aA+IhByO,EAAb,4MACI9N,MAAQ,CACJoJ,UAAU,EACV2E,IAAK,GAHb,EAWIC,gBAAgB,WACZ,GAAG,EAAKzO,MAAMqO,mBAAmB7M,OAAS,MAA2B,IAAnB,EAAKf,MAAM+N,IAC7D,CACI,IAAIA,EAAI,EACR,EAAKxO,MAAMqO,mBAAmBhN,KAAI,SAAAiJ,GAC9BkE,GAAQlE,EAAQE,eAEpB,EAAKrJ,SAAS,CAACqN,IAAKA,MAlBhC,kEAMQjN,KAAKkN,oBANb,2CASQlN,KAAKkN,oBATb,kCAsBQ1N,OAAO2N,QACPnN,KAAKvB,MAAMkO,kBAvBnB,+BAyBc,IAAD,OACP,OACE,sBAAKjP,UAAU,MAAf,UAEGsC,KAAKvB,MAAMmO,YAAa,qCACvB,yDAA4B5M,KAAKd,MAAM+N,OACvC,6CAAgBjN,KAAKvB,MAAMsO,YACvB,GAER,wBAAOrP,UAAU,SAAjB,UACC,gCACG,+BACI,8CACA,yCACA,qDACCsC,KAAKvB,MAAMmO,YAAY,GAAG,0DAGjC,gCACC5M,KAAKvB,MAAMqO,mBACZ9M,KAAKvB,MAAMqO,mBAAmBhN,KAAI,SAAAiJ,GAC5B,OAAO,+BACK,6BAAK,IAAIrI,KAAKqI,EAAQyD,SAAS3L,eAAiB,OAAS,IAAIH,KAAKqI,EAAQyD,SAAS7E,uBACnF,6BAAKoB,EAAQE,cACb,6BAAKF,EAAQ2D,eACZ,EAAKjO,MAAMmO,YAAY,GAAG,6BAAI,cAAC,IAAD,CAAMhP,GAAI,iCAAmCmL,EAAQ0D,UAArD,4BAG1C,QAGRzM,KAAKvB,MAAMmO,YACZ,mBAAG9N,QAAS,kBAAI,EAAKsO,aAAapL,MAAO,CAACqL,OAAQ,UAAWC,MAAO,QAASC,gBAAiB,QAA9F,uBAAsH,UAzD9H,GAAoChP,aAgErBoN,IC7BA6B,E,kDAnLX,WAAY/O,GAAQ,IAAD,8BACf,cAAMA,IAsBV8J,UAAU,SAAC9H,GACkB,gBAAtBA,EAAME,OAAOT,KACZ,EAAKuN,YAAYhN,EAAME,QAEG,gBAAtBF,EAAME,OAAOT,KACjB,EAAKwN,YAAYjN,EAAME,QAEG,cAAtBF,EAAME,OAAOT,KACjB,EAAKyN,UAAUlN,EAAME,QAEK,aAAtBF,EAAME,OAAOT,KACjB,EAAK0N,SAASnN,EAAME,QAEM,gBAAtBF,EAAME,OAAOT,KACjB,EAAK2N,YAAYpN,EAAME,QAEG,YAAtBF,EAAME,OAAOT,KACjB,EAAK4N,QAAQrN,EAAME,QAEO,eAAtBF,EAAME,OAAOT,KACjB,EAAK6N,WAAWtN,EAAME,QAEI,aAAtBF,EAAME,OAAOT,MACjB,EAAK8N,eAAevN,EAAME,SA9Cf,EAiDnB8M,YAAa,SAAC9M,GACV,EAAKf,SAAS,CAACqO,YAAa,CACxB,GAAM,EACN,KAAQtN,EAAOC,MACf,KAAQ,EAAK1B,MAAM+O,YAAYxG,KAC/B,YAAe,EAAKvI,MAAM+O,YAAYzG,YACtC,QAAW,EAAKtI,MAAM+O,YAAYC,QAClC,OAAU,EAAKhP,MAAM+O,YAAY1G,OACjC,kBAAqB,EAAKrI,MAAM+O,YAAYrG,sBAzDjC,EA4DnB+F,UAAW,SAAChN,GACR,EAAKf,SAAS,CAACqO,YAAa,CACxB,GAAM,EACN,KAAQ,EAAK/O,MAAM+O,YAAY/N,KAC/B,KAAQ,EAAKhB,MAAM+O,YAAYxG,KAC/B,YAAe,EAAKvI,MAAM+O,YAAYzG,YACtC,QAAW,EAAKtI,MAAM+O,YAAYC,QAClC,OAAUvN,EAAOC,MACjB,kBAAqB,EAAK1B,MAAM+O,YAAYrG,sBApEjC,EAuEnB8F,YAAc,SAAC/M,GACX,EAAKf,SAAS,CAAC8F,SAAU/E,EAAOC,SAxEjB,EA0EnBgN,SAAW,SAACjN,GACR,EAAKf,SAAS,CAAC+F,MAAOhF,EAAOC,SA3Ed,EA6EnBiN,YAAc,SAAClN,GACX,EAAKf,SAAS,CAAC2F,SAAU5E,EAAOC,SA9EjB,EAgFnBkN,QAAS,SAACnN,GACN,EAAKf,SAAS,CAACqO,YAAa,CACxB,GAAM,EACN,KAAQ,EAAK/O,MAAM+O,YAAY/N,KAC/B,KAAQS,EAAOC,MACf,YAAe,EAAK1B,MAAM+O,YAAYzG,YACtC,QAAW,EAAKtI,MAAM+O,YAAYC,QAClC,OAAU,EAAKhP,MAAM+O,YAAY1G,OACjC,kBAAqB,EAAKrI,MAAM+O,YAAYrG,sBAxFjC,EA2FnBmG,WAAY,SAACpN,GACT,EAAKf,SAAS,CAACqO,YAAa,CACxB,GAAM,EACN,KAAQ,EAAK/O,MAAM+O,YAAY/N,KAC/B,KAAQ,EAAKhB,MAAM+O,YAAYxG,KAC/B,YAAe,EAAKvI,MAAM+O,YAAYzG,YACtC,QAAW7G,EAAOC,MAClB,OAAU,EAAK1B,MAAM+O,YAAY1G,OACjC,kBAAqB,EAAKrI,MAAM+O,YAAYrG,sBAnGjC,EAsGnBoG,eAAgB,SAACrN,GACb,EAAKf,SAAS,CAACqO,YAAa,CACxB,GAAM,EACN,KAAQ,EAAK/O,MAAM+O,YAAY/N,KAC/B,KAAQ,EAAKhB,MAAM+O,YAAYxG,KAC/B,YAAe9G,EAAOC,MACtB,QAAW,EAAK1B,MAAM+O,YAAYC,QAClC,OAAU,EAAKhP,MAAM+O,YAAY1G,OACjC,kBAAqB,EAAKrI,MAAM+O,YAAYrG,sBA9GjC,EAkHnBuG,YAAa,SAAC1N,GAEV,EAAKb,SAAS,CAAC4F,KAAM/E,EAAME,OAAOC,SApHnB,EAuHnBwN,aAAe,WACX9O,IAAM+F,KACE7F,OAAOC,QAAU,YACjB,CACI,GAAM,EACN,MAAS,EAAKP,MAAMyG,MACpB,SAAY,EAAKzG,MAAMwG,SACvB,SAAY,EAAKxG,MAAMqG,SACvB,KAAQ,EAAKrG,MAAMsG,KACnB,WAAc,CACV,GAAM,EACN,KAAQ,EAAKtG,MAAM+O,YAAY/N,KAC/B,KAAQ,EAAKhB,MAAM+O,YAAYxG,KAC/B,YAAe,EAAKvI,MAAM+O,YAAYzG,YACtC,QAAW,EAAKtI,MAAM+O,YAAYC,QAClC,OAAU,EAAKhP,MAAM+O,YAAY1G,UAIhD7H,MAAK,SAAA2O,GAAQ,OAAI,EAAKzO,SAAS,CAAC0I,UAAU,OAC1CjE,OACG,SAAA0B,GAEIpC,MAAMoC,EAAIsI,SAASxO,UA5I3B,EAAKX,MAAQ,CACT,GAAM,EACN,MAAS,GACT,KAAQ,OACR,SAAY,GACZ,SAAY,GACZ,YAAe,CACb,GAAM,EACN,KAAQ,GACR,KAAQ,GACR,YAAe,GACf,QAAW,GACX,OAAU,GACV,kBAAqB,IAEvBoP,WAAW,GACXhG,UAAU,GAEd,EAAKiG,eAAiBC,IAAMC,YAC5B,EAAKlG,UAAY,EAAKA,UAAUtC,KAAf,gBArBF,E,qDAoJf,OACI,cAAC,EAAD,UACA,sBAAKvI,UAAU,YAAf,UACKqE,EAAO/B,KAAKvB,MAAM6M,SAClBtL,KAAKd,MAAMoJ,SAAS,cAAC,IAAD,CAAU1K,GAAG,gBAAgB,GAClD,iDACA,uBACA,yDACA,yBAAQC,MAAM,6BAA6BmD,SAAUhB,KAAKmO,YAAa/P,aAAW,0BAAlF,UACA,wBAAQkF,UAAQ,EAAhB,kBACA,+CAEA,uBACA,kDACA,uBACI,cAAC,EAAD,CAAgB6E,iBAAkBnI,KAAKuI,UAAWN,KAAM,YAAaC,SAAU,OAAQF,SAAU,gBACjG,cAAC,EAAD,CAAgBG,iBAAkBnI,KAAKuI,UAAWN,KAAM,YAAaC,SAAU,OAAQF,SAAU,gBACjG,cAAC,EAAD,CAAgBG,iBAAkBnI,KAAKuI,UAAWN,KAAM,SAAUC,SAAU,QAASF,SAAU,aAC/F,cAAC,EAAD,CAAgBG,iBAAkBnI,KAAKuI,UAAWN,KAAM,WAAYC,SAAU,WAAYF,SAAU,gBACpG,cAAC,EAAD,CAAgBG,iBAAkBnI,KAAKuI,UAAWN,KAAM,eAAgBC,SAAU,OAAQF,SAAU,aACpG,cAAC,EAAD,CAAgBG,iBAAkBnI,KAAKuI,UAAWN,KAAM,OAAQC,SAAU,OAAQF,SAAU,YAC5F,cAAC,EAAD,CAAgBG,iBAAkBnI,KAAKuI,UAAWN,KAAM,mBAAoBC,SAAU,OAAQF,SAAU,eACxG,cAAC,EAAD,CAAgBG,iBAAkBnI,KAAKuI,UAAWN,KAAM,SAAUC,SAAU,OAAQF,SAAU,cAC9F,wBAAQlJ,QAASkB,KAAKoO,aAAc1Q,UAAU,oBAA9C,6B,GA5KQa,aC0KbmQ,E,kDAxKX,WAAYjQ,GAAQ,IAAD,8BACf,cAAMA,IAmBV8J,UAAU,SAAC9H,GACkB,qBAAtBA,EAAME,OAAOT,KAEZ,EAAKyO,mBAAmBlO,EAAME,QAEJ,0BAAtBF,EAAME,OAAOT,MACjB,EAAK0O,mBAAmBnO,EAAME,SA1BnB,EA8BnBgO,mBAAqB,SAAAhO,GACjB,EAAKf,SAAS,CAACiP,aACX,CACI,GAAM,EACN,cAAiBlO,EAAOC,MACxB,kBAAqB,EAAK1B,MAAM2P,aAAaC,kBAC7C,aAAe,EACf,OAAU,EAAK5P,MAAM2P,aAAaE,OAClC,YAAe,EAAK7P,MAAM2P,aAAarD,YACvC,kBAAqB,SAvCd,EA4CnBoD,mBAAqB,SAAAjO,GACjB,EAAKf,SAAS,CAACiP,aACX,CACI,GAAM,EACN,cAAiB,EAAK3P,MAAM2P,aAAaG,cACzC,kBAAqBrO,EAAOC,MAC5B,aAAe,EACf,OAAU,EAAK1B,MAAM2P,aAAaE,OAClC,YAAc,EAAK7P,MAAM2P,aAAarD,YACtC,kBAAqB,SArDd,EAyDnByD,SAAS,WACL3P,IAAMC,IAAIC,OAAOC,QAAU,mCAAqC,EAAKP,MAAM2P,aAAaE,QACvFrP,MACG,SAAAC,GACI,IAAIuP,GAAa,EACjBvP,EAAKE,KAAKC,KAAI,SAAAqP,GACPA,EAAI3D,cAAgB,EAAKtM,MAAM2P,aAAarD,cAE3C0D,GAAa,EACbvL,MAAM,oDAGVuL,GAEA5P,IAAM+F,KAAK7F,OAAOC,QAAU,eAAe,EAAKP,MAAM2P,cACjDnP,MAAK,SAAAC,GACF,EAAKC,SAAS,CAAC0I,UAAU,OACzBjE,OACA,SAAA1E,GAAI,OAAGgE,MAAMhE,EAAKE,KAAKmG,eAIxC3B,OACC,SAAA1E,GAAI,OAAGgE,MAAMhE,EAAKE,KAAKmG,aAhFZ,EAoFnBoJ,mBAAqB,SAAC3O,GACQ,iCAAvBA,EAAME,OAAOC,OACZ,EAAK1B,MAAMoP,WAAWxO,KAClB,SAAAuP,GACOA,EAAUnP,OAASO,EAAME,OAAOC,OAC/B,EAAKhB,SAAS,CAACiP,aACX,CACI,GAAM,EACN,cAAiB,EAAK3P,MAAM2P,aAAaG,cACzC,kBAAqB,EAAK9P,MAAM2P,aAAaC,kBAC7C,aAAe,EACf,OAAU,EAAK5P,MAAM2P,aAAaE,OAClC,YAAeM,EAAU1R,GACzB,kBAAqB,YA/F7C,EAAKuB,MAAQ,CACT2P,aAAa,CACT,GAAM,EACN,cAAiB,EACjB,kBAAqB,EACrB,aAAe,EACf,OAAU,EACV,YAAe,EACf,kBAAqB,MAEzBP,WAAY,KACZhG,UAAU,EACVzD,SAAS,GAEb,EAAK0J,eAAiBC,IAAMC,YAC5B,EAAKlG,UAAY,EAAKA,UAAUtC,KAAf,gBAjBF,E,gEA0GC,IAAD,OACuB,IAAnCjG,KAAKd,MAAM2P,aAAaE,QACvB/O,KAAKJ,SAAS,CAACiP,aAAc,CACzB,GAAM,EACN,cAAiB7O,KAAKd,MAAM2P,aAAaG,cACzC,kBAAqBhP,KAAKd,MAAM2P,aAAaC,kBAC7C,aAAe,EACf,OAAU9O,KAAKvB,MAAM2M,MAAMC,OAAO1N,GAClC,YAAeqC,KAAKd,MAAM2P,aAAarD,YACvC,kBAAqB,QAGA,OAA1BxL,KAAKd,MAAMoP,YACVhP,IAAMC,IAAIC,OAAOC,QAAU,kBAC3BC,MAAK,SAAAC,GACD,EAAKC,SAAS,CAAC0O,WAAY3O,EAAKE,eAINkF,KADpB,IAAIC,KACPzF,IAAI,gBAEXS,KAAKJ,SAAS,CAACiF,SAAS,M,+BAK5B,OACI,eAAC,EAAD,WACK7E,KAAKd,MAAM2F,QAAQ,GAAG,cAAC,IAAD,CAAUjH,GAAG,WACnCoC,KAAKd,MAAMoJ,SAAU,cAAC,IAAD,CAAU1K,GAAG,gBAAiB,GACpD,sBAAKF,UAAU,YAAf,UACCqE,EAAO/B,KAAKvB,MAAM6M,SACf,sBAAK5N,UAAU,kBAAf,UACI,wDACA,uBACA,8DACA,uBACI,yBAAQG,MAAM,6BAA6BmD,SAAUhB,KAAKoP,mBAAoBhR,aAAW,0BAAzF,UACA,wBAAQkF,UAAQ,EAAhB,0CAEQtD,KAAKd,MAAMoP,WACXtO,KAAKd,MAAMoP,WAAWxO,KAAI,SAAAyD,GACtB,OAAO,iCAA4BA,EAAUrD,MAAzBqD,EAAU5F,OAElC,wBAAQ2F,UAAQ,EAAhB,sEAIhB,uBACA,sBAAKzF,MAAM,cAAX,UACI,uBAAO4F,IAAI,mBAAX,mCACA,uBAAOD,IAAKxD,KAAKuO,eAAgBxQ,KAAK,SAASF,MAAM,eAAemD,SAAUhB,KAAKuI,UAAWrI,KAAK,wBAEvG,cAAC,EAAD,CAAgBiI,iBAAkBnI,KAAKuI,UAAWN,KAAM,sBAAuBC,SAAU,SAAUF,SAAU,0BAC7G,wBAAQtK,UAAU,kBAAkBoB,QAASkB,KAAKiP,SAAlD,8C,GAjKc1Q,aCmEnB+Q,E,4MAnEXpQ,MAAQ,CACJqQ,WAAY,KACZ1K,SAAS,G,kEAIO,IAAD,OACY,OAAxB7E,KAAKd,MAAMqQ,YACVnK,IAAM7F,IAAIC,OAAOC,QAAU,kBAAkBC,MACzC,SAAAC,GACI,EAAKC,SAAS,CAAC2P,WAAY5P,EAAKE,UAEtCwE,OACE,SAAA0B,GACIpC,MAAM,wBAAyBoC,WAKThB,KADpB,IAAIC,KACPzF,IAAI,gBAEXS,KAAKJ,SAAS,CAACiF,SAAS,M,+BAK5B,OACI,cAAC,EAAD,UAEI,sBAAKnH,UAAU,YAAf,UACI,yDACA,qBAAKA,UAAU,wBAAf,SACI,wBAAOA,UAAU,+BAAjB,UACI,gCACI,+BACI,oCACA,sCACA,8CACA,8CAGR,gCAEIsC,KAAKd,MAAMqQ,WACXvP,KAAKd,MAAMqQ,WAAWzP,KAAI,SAAA0P,GACtB,OAAQ,+BACI,6BAAKA,EAAQ7R,KACb,6BAAK6R,EAAQtP,OACb,6BAAKsP,EAAQnH,SACb,6BAAKmH,EAAQ/D,gBAE1B,yCAKf,cAAC,IAAD,CAAM/N,UAAU,yBAAyBE,GAAG,cAA5C,uC,GAzDSW,aCEdkR,EATC,SAAAhR,GACZ,OACI,sBAAKZ,MAAM,cAAX,UACI,wBAAO4F,IAAKhF,EAAMyB,KAAlB,UAAyBzB,EAAMwJ,KAA/B,OACA,uBAAQlK,KAAMU,EAAMV,KAAMF,MAAM,eAAemD,SAAUvC,EAAM0J,iBAAkBjI,KAAMzB,EAAMwJ,WCuE1FyH,E,4MAnEXxQ,MAAQ,CACJyQ,WAAY,CACRhS,GAAI,EACJuC,KAAK,GACLmI,OAAQ,EACRoD,QAAS,IAEbnD,UAAU,G,EAEdsH,aAAe,SAAAnP,GACc,wBAAtBA,EAAME,OAAOT,KACZ,EAAK2P,WAAWpP,EAAME,OAAOC,OACC,iBAAtBH,EAAME,OAAOT,KACjB,EAAK4P,aAAarP,EAAME,OAAOC,OACD,gBAAtBH,EAAME,OAAOT,MAChB,EAAK6P,cAActP,EAAME,OAAOC,Q,EAGjDiP,WAAa,SAAAjP,GACT,EAAKhB,SAAS,CAAC+P,WAAY,CACvBhS,GAAI,EACJuC,KAAMU,EACNyH,OAAQ,EAAKnJ,MAAMyQ,WAAWtH,OAC9BoD,QAAS,EAAKvM,MAAMyQ,WAAWlE,Y,EAIvCqE,aAAe,SAAAlP,GACX,EAAKhB,SAAS,CAAC+P,WAAY,CACvBhS,GAAI,EACJuC,KAAO,EAAKhB,MAAMyQ,WAAWzP,KAC7BmI,OAAQzH,EACR6K,QAAS,EAAKvM,MAAMyQ,WAAWlE,Y,EAIvCsE,cAAgB,SAAAnP,GACZ,EAAKhB,SAAS,CAAC+P,WAAY,CACvBhS,GAAI,EACJuC,KAAO,EAAKhB,MAAMyQ,WAAWzP,KAC7BmI,OAAQ,EAAKnJ,MAAMyQ,WAAWtH,OAC9BoD,QAAU7K,M,EAIlBoP,eAAiB,WACb5K,IAAMC,KAAK7F,OAAOC,QAAU,iBAAiB,EAAKP,MAAMyQ,YAAYjQ,MAAK,SAAAC,GACrE,EAAKC,SAAS,CAAC0I,UAAU,OAC1BjE,OAAM,SAAA0B,GACLpC,MAAMoC,O,uDAIV,OAAQ,eAAC,EAAD,WAEQ/F,KAAKd,MAAMoJ,SAAU,cAAC,IAAD,CAAU1K,GAAG,cAAc,GAEpD,sBAAKF,UAAU,YAAf,UACI,iDACA,cAAC,EAAD,CAASyK,iBAAkBnI,KAAK4P,aAAc3H,KAAK,sBAAsBlK,KAAK,SAC9E,cAAC,EAAD,CAASoK,iBAAkBnI,KAAK4P,aAAc3H,KAAK,eAAelK,KAAK,WACvE,cAAC,EAAD,CAASoK,iBAAkBnI,KAAK4P,aAAc3H,KAAK,cAAclK,KAAK,SACtE,cAAC,IAAD,CAAML,UAAU,kBAAkBoB,QAASkB,KAAKgQ,eAAhD,mC,GAhEIzR,aC4Db0R,E,4MAzDX/Q,MAAQ,CACJmJ,OAAQ,EACR6H,cAAe,KACf5H,UAAU,EACV6H,aAAc,EACdtL,SAAS,G,EAEb0D,UAAY,SAAA9H,GACLA,EAAME,OAAOC,MAAQ,GACpB,EAAKhB,SAAS,CAACyI,OAAQ5H,EAAME,OAAOC,S,EAE5C4H,YAAa,WACTlJ,IAAMC,IAAIC,OAAOC,QAAU,kBAAoB,EAAKhB,MAAM2M,MAAMC,OAAO1N,IACtE+B,MAAK,SAAAC,GACF,IAAIE,EAAOF,EAAKE,KAChBA,EAAKoJ,YAAc,EAAK/J,MAAMmJ,OAC9BxI,EAAKmJ,WAAa,EAAK9J,MAAMgR,cAC7B5Q,IAAMuL,IAAIrL,OAAOC,QAAU,kBAAoB,EAAKhB,MAAM2M,MAAMC,OAAO1N,GAAGkC,GACzEH,MAAK,SAAA0Q,GAEF,EAAKxQ,SAAS,CAACuQ,aAAcxQ,EAAKE,KAAKS,QACvC,EAAKV,SAAS,CAAC0I,UAAU,UAGhCjE,OAAM,SAAA0B,GACHpC,MAAMoC,O,EAGdsK,qBAAuB,SAAC5P,GACpB,EAAKb,SAAS,CAACsQ,cAAezP,EAAME,OAAOC,S,uEAITmE,KADpB,IAAIC,KACPzF,IAAI,gBAEXS,KAAKJ,SAAS,CAACiF,SAAS,M,+BAI5B,OACQ,eAAC,EAAD,WACK7E,KAAKd,MAAM2F,QAAQ,GAAG,cAAC,IAAD,CAAUjH,GAAG,WACpC,sBAAKF,UAAU,iBAAf,UAEIsC,KAAKd,MAAMoJ,SAAW,cAAC,IAAD,CAAU1K,GAAI,aAAaoC,KAAKd,MAAMiR,aAAa,aAAgB,GAE7F,gDACA,uBACI,uBAAO1M,IAAI,QAAX,gCACA,uBAAOzC,SAAUhB,KAAKqQ,qBAAsBtS,KAAK,iBAAiBJ,GAAG,QAAQuC,KAAK,UAClF,cAAC,EAAD,CAAgBiI,iBAAkBnI,KAAKuI,UAAWN,KAAM,UAAWC,SAAU,SAAUF,SAAU,gBACjG,wBAAQlJ,QAASkB,KAAKwI,YAAa9K,UAAU,kBAA7C,mC,GApDIa,a,SCcbd,G,uKAjBP,OACI,qBAAKC,UAAU,sDAAsDC,GAAG,UAAxE,SACI,sBAAKD,UAAU,YAAf,UACI,cAAC,IAAD,CAAME,GAAG,IAAIC,MAAM,iCAAnB,kBACA,wBAAQH,UAAU,sCAAsCK,KAAK,SAASC,cAAY,WAAWC,cAAY,oBAAoBC,gBAAc,mBAAmBC,gBAAc,QAAQC,aAAW,oBAA/L,SAAmN,sBAAMV,UAAU,0BACnO,qBAAKA,UAAU,2BAA2BC,GAAG,mBAA7C,SACI,oBAAID,UAAU,kCAAd,SACI,oBAAIA,UAAU,WAAd,SAAyB,cAAC,IAAD,CAAMA,UAAU,6BAA6BE,GAAG,cAAhD,uC,GAThCW,aCQN+R,GATS,SAAA7R,GACpB,OACI,qCACI,cAAC8R,GAAD,IACC9R,EAAMC,aCSJ8R,GAfE,SAAA/R,GAAK,OAAE,qBAAKZ,MAAM,yBAAX,SACZ,qBAAKA,MAAM,YAAX,SACI,sBAAKA,MAAM,oCAAX,UACI,sBAAKA,MAAM,WAAX,UACI,qBAAKA,MAAM,4DAAX,4BAEA,sBAAKA,MAAM,yCAAX,iBAAyDY,EAAMgS,cAA/D,WAEJ,qBAAK5S,MAAM,WAAX,SACI,mBAAGA,MAAM,qDC2BlB8N,GAjCQ,SAAClN,GACpB,IAAI2I,EAAG,EACP,OACI,8BACI,wBAAO1J,UAAU,oBAAjB,UACI,gCACI,+BACI,oBAAIgT,MAAM,MAAV,iBACA,oBAAIA,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAV,sBACA,oBAAIA,MAAM,MAAV,kBACA,oBAAIA,MAAM,MAAMC,QAAQ,mBAAxB,mCACA,oBAAID,MAAM,MAAV,8BAGR,gCACKjS,EAAMmS,WAAW9Q,KAAI,SAAA+Q,GAElB,OADAzJ,GAAG,EACI,+BACP,6BAAKA,IACL,oBAAIsJ,MAAM,MAAV,SAAiBG,EAAWC,eAC5B,6BAAKD,EAAWE,gBAChB,6BAAKF,EAAWG,aAChB,6BAAKH,EAAWI,kBAChB,6BAAKJ,EAAWK,mCC0FzBC,G,kDA3GX,WAAY1S,GAAQ,IAAD,8BACf,cAAMA,IAwCVqN,iBAAmB,SAACrL,GACS,eAAtBA,EAAME,OAAOT,MACZ,EAAKN,SAAS,CAACmM,YAAa,CACxBC,UAAW,IAAItL,KAAKD,EAAME,OAAOC,OAAOqL,qBACxCC,QAAS,EAAKhN,MAAM6M,YAAYG,WAGf,aAAtBzL,EAAME,OAAOT,MACZ,EAAKN,SAAS,CAACmM,YAAa,CACxBC,UAAW,EAAK9M,MAAM6M,YAAYC,UAClCE,QAAS,IAAIxL,KAAKD,EAAME,OAAOC,OAAOqL,yBAjD9C,EAAK/M,MAAS,CACV0R,WAAY,GACZH,cAAe,EACfW,OAAQ,EACRrF,YAAa,CACTC,UAAW,KACXE,QAAS,MAEbmF,iBAAiB,EACjBC,gBAAgB,GAEpB,EAAKjF,gBAAkB,EAAKA,gBAAgBpG,KAArB,gBAbR,E,gEAeC,IAAD,OACqB,IAAjCjG,KAAKd,MAAM0R,WAAW3Q,QAErBX,IAAMC,IAAIC,OAAOC,QAAU,wEAA0EO,KAAKvB,MAAM2M,MAAMC,OAAO1N,IAC5H+B,MAAK,SAAAC,GACF,EAAKC,SAAS,CAACgR,WAAYjR,EAAKE,UACjCwE,OAAM,SAAA1E,GACLgE,MAAMhE,Q,2CAKG,IAAD,QACiB,IAA9BK,KAAKd,MAAMoS,gBACVhS,IAAMC,IAAIC,OAAOC,QAAU,2CAA6CO,KAAKvB,MAAM2M,MAAMC,OAAO1N,IAC3F+B,MAAK,SAAAC,GAEF,EAAKC,SAAS,CAAC6Q,cAAe9Q,EAAKE,KAAK0R,iBACxC,EAAK3R,SAAS,CAACwR,OAAQzR,EAAKE,KAAKlC,KACjC,EAAKiC,SAAS,CAAC0R,gBAAgB,OAChCjN,OAAM,SAAA1E,GACLgE,MAAMhE,EAAKE,KAAKmG,c,wCAoBd,IAAD,OAC2B,OAArChG,KAAKd,MAAM6M,YAAYC,WAAyD,OAAnChM,KAAKd,MAAM6M,YAAYG,QAEnE5M,IAAMC,IAAIC,OAAOC,QAAU,2EACrBO,KAAKvB,MAAM2M,MAAMC,OAAO1N,GACxB,cAAgBqC,KAAKd,MAAM6M,YAAYC,UACvC,YAAchM,KAAKd,MAAM6M,YAAYG,SAC1CxM,MACG,SAAAC,GACQ,EAAKC,SAAS,CAACgR,WAAYjR,EAAKE,UAE1CwE,OACE,SAAA0B,OAIHpC,MAAM,8B,+BAIX,OAAO,mCACC,cAAC,GAAD,UACI,eAAC6N,GAAA,EAAD,WACCzP,EAAO/B,KAAKvB,MAAM6M,SACnB,cAAC,GAAD,CAAWmF,cAAgBzQ,KAAKd,MAAMuR,gBAClC,sBAAK/S,UAAU,MAAf,UACI,sBAAKA,UAAU,WAAf,UACA,uBAAO+F,IAAI,aAAX,yBACA,uBAAO/F,UAAU,6BAA6BK,KAAK,OAAOJ,GAAG,aAAauC,KAAK,aAC/Ea,aAAe,UAAUC,SAAUhB,KAAK8L,sBAExC,sBAAKpO,UAAU,WAAf,UACI,uBAAO+F,IAAI,YAAX,uBACA,uBAAO/F,UAAU,6BAA6BK,KAAK,OAAOJ,GAAG,QAAQuC,KAAK,WACtEc,SAAUhB,KAAK8L,yBAG3B,sBAAKpO,UAAU,UAAf,UACI,eAAC,IAAD,CAAME,GAAI,SAAYoC,KAAKvB,MAAM2M,MAAMC,OAAO1N,GAAO,SAAWqC,KAAKd,MAAMkS,OAAS,kBAAmB1T,UAAU,4BAAjH,6BAA6J,mBAAIA,UAAU,qBAAqBI,cAAY,YAC5M,yBAAQgB,QAAS,WAAKU,OAAO2N,SAAUzP,UAAU,6BAAjD,kBAAmF,mBAAIA,UAAU,cAAcI,cAAY,YAC3H,yBAAQJ,UAAU,4BAA6BsE,MAAO,CAACsC,WAAY,OAAQC,YAAa,OACxFzF,QAASkB,KAAKqM,gBADd,mBACqC,mBAAI3O,UAAU,gBAAgBI,cAAY,eAEnF,cAAC,GAAD,CAAgB8S,WAAY5Q,KAAKd,MAAM0R,wB,GArG5CrS,aCSJkT,GAjBkB,SAAChT,GAC9B,OAAO,mCACC,iCACI,qBAAKZ,MAAM,oBAAX,SACI,wBAAOA,MAAM,mBAAb,UACI,uBAAQE,KAAK,QAAQF,MAAM,mBAAmBqC,KAAK,SAASvC,GAAG,UAAUmB,QAASL,EAAMiT,UAD5F,yBAIJ,qBAAK7T,MAAM,oBAAX,SACI,wBAAOA,MAAM,mBAAb,UACI,uBAAOE,KAAK,QAASF,MAAM,mBAAmBqC,KAAK,SAASvC,GAAG,MAAMmB,QAASL,EAAMiT,UADxF,4BC6FLC,G,4MA3FXzS,MAAO,CACC,GAAM,EACN,aAAgB,GAChB,cAAiB,EACjB,WAAc,EACd,mBAAsB,GACtB,gBAAmB,sBACnB,cAAiB,EAAKT,MAAM2M,MAAMC,OAAO+F,OACzC,OAAU,UACVQ,gBAAgB,G,EAGxBhC,aAAa,SAACnP,GACV,IAAIuH,EAAWvH,EAAME,OAAOT,KACxBU,EAAQH,EAAME,OAAOC,MAET,sBAAboH,EAAkC,EAAKpI,SAAS,CAACkR,aAAclQ,IAC7C,qBAAboH,EAAgC,EAAKpI,SAAS,CAACmR,cAAenQ,IACjD,gBAAboH,EAA2B,EAAKpI,SAAS,CAACoR,WAAYpQ,IACzC,4BAAboH,EAAuC,EAAKpI,SAAS,CAACsR,mBAAoBtQ,IAC7D,0BAAboH,GAAsC,EAAKpI,SAAS,CAACqR,gBAAiBrQ,K,EAGlFiR,kBAAoB,WACS,QAAtB,EAAK3S,MAAM4S,OACV1M,IAAMC,KACF7F,OAAOC,QAAU,kCACjB,CACI,GAAM,EACN,aAAgB,EAAKP,MAAM4R,aAC3B,cAAiB,EACjB,WAAc,EAAK5R,MAAM8R,WACzB,mBAAsB,EAAK9R,MAAMgS,mBACjC,gBAAmB,EAAKhS,MAAM+R,gBAC9B,cAAiB,EAAK/R,MAAM6S,gBAE9BrS,MAAK,SAAAC,GACH,EAAKC,SAAS,CAACgS,gBAAgB,OAElCvN,OACG,SAAA0B,GAEIpC,MAAMoC,EAAIsI,SAASxO,SAGL,YAAtB,EAAKX,MAAM4S,QACf1M,IAAMC,KAAK7F,OAAOC,QAAU,kCACxB,CACI,GAAM,EACN,aAAgB,EAAKP,MAAM4R,aAC3B,cAAiB,EAAK5R,MAAM6R,cAC5B,WAAc,EACd,mBAAsB,EAAK7R,MAAMgS,mBACjC,gBAAmB,EAAKhS,MAAM+R,gBAC9B,cAAiB,EAAKxS,MAAM2M,MAAMC,OAAO+F,SACxC1R,MAAK,SAAAC,GACN,EAAKC,SAAS,CAACgS,gBAAgB,OAElCvN,OACG,SAAA0B,GAEIpC,MAAMoC,EAAIsI,SAASxO,U,EAIvCmS,UAAY,SAACvR,GACT,IAAIuH,EAAWvH,EAAME,OAAOhD,GACZ,QAAbqK,EAAoB,EAAKpI,SAAS,CAACkS,OAAQ,QACzB,YAAb9J,GAAwB,EAAKpI,SAAS,CAACkS,OAAQ,a,uDAInD,OAAO,eAAC,GAAD,WACF9R,KAAKd,MAAM0S,eAAgB,cAAC,IAAD,CAAUhU,GAAI,SAAUoC,KAAKvB,MAAM2M,MAAMC,OAAO1N,GAAI,UAAY,GAC5F,sBAAKD,UAAU,YAAf,UACKqE,EAAO/B,KAAKvB,MAAM6M,SACvB,oBAAItJ,MAAO,CAACkE,UAAW,UAAvB,iCACA,cAAC+L,GAAD,CAA0BP,QAAS1R,KAAKgS,YACxC,cAAC,EAAD,CAAS7J,iBAAkBnI,KAAK4P,aAAc3H,KAAK,oBAAoBlK,KAAK,SAC5E,cAAC,EAAD,CAASoK,iBAAkBnI,KAAK4P,aAAc3H,KAAK,mBAAmBlK,KAAK,WAC3E,cAAC,EAAD,CAASoK,iBAAkBnI,KAAK4P,aAAc3H,KAAK,cAAclK,KAAK,WACtE,sBAAKF,MAAM,aAAX,UACI,uBAAO4F,IAAI,UAAX,sCACA,0BAAUzC,SAAUhB,KAAK4P,aAAc/R,MAAM,eAAeqU,KAAK,IAAIhS,KAAK,0BAA0BvC,GAAG,eAE3G,cAAC,EAAD,CAASwK,iBAAkBnI,KAAK4P,aAAc3H,KAAK,wBAAwBlK,KAAK,mBAChF,cAAC,IAAD,CAAML,UAAU,kBAAkBoB,QAASkB,KAAK6R,kBAAhD,8B,GAxFatT,aCgGd4T,G,4MAhGXjT,MAAO,CACH,GAAM,EACN,SAAY,GACZ,UAAa,GACb,aAAe,EACf,eAAkB,EAClB,OAAU,EAAKT,MAAM2M,MAAMC,OAAO1N,GAClC2K,UAAU,EACV8J,SAAU,M,EAGdxC,aAAa,SAACnP,GACV,IAAIuH,EAAWvH,EAAME,OAAOT,KACxBU,EAAQH,EAAME,OAAOC,MAET,cAAboH,EAA0B,EAAKpI,SAAS,CAACyS,SAAUzR,IACjC,eAAboH,EAA0B,EAAKpI,SAAS,CAAC0S,UAAW1R,IACvC,iBAAboH,GAA4B,EAAKpI,SAAS,CAAC2R,eAAgB3Q,K,EAGvEiR,kBAAoB,WAChBzM,IAAMC,KACF7F,OAAOC,QAAU,mBACjB,CACI,GAAM,EACN,SAAY,EAAKP,MAAMmT,SACvB,UAAa,EAAKnT,MAAMoT,UACxB,YAAe,EAAKpT,MAAMqT,YAC1B,eAAkB,EAClB,OAAU,EAAKrT,MAAM4H,SAE5BpH,MAAK,SAAA2O,GACC,EAAKnP,MAAMqS,eAAiB,EAC3BnM,IAAMC,KACF7F,OAAOC,QAAU,kCACjB,CACI,GAAM,EACN,aAAgB,qBAChB,cAAiB,EAAKP,MAAMqS,eAC5B,WAAc,EACd,mBAAsB,4CACtB,gBAAmB,IAAI7Q,KACvB,cAAiB2N,EAASxO,KAAKlC,KAChC0G,OACC,SAAA0B,GAEIpC,MAAMoC,EAAIsI,SAASxO,SAG3B,EAAKX,MAAMqS,eAAiB,GAChCnM,IAAMC,KACF7F,OAAOC,QAAU,kCACjB,CACI,GAAM,EACN,aAAgB,qBAChB,cAAiB,EACjB,WAAc,EAAKP,MAAMqS,eACzB,mBAAsB,4CACtB,gBAAmB,IAAI7Q,KACvB,cAAiB2N,EAASxO,KAAKlC,KAG1C0G,OACG,SAAA0B,GAEIpC,MAAMoC,EAAIsI,SAASxO,SAG3B,EAAKD,SAAS,CAACwS,SAAU/D,EAASxO,OAClC,EAAKD,SAAS,CAAC0I,UAAU,OAE5BjE,OACG,SAAA0B,GAEIpC,MAAMoC,O,uDAMV,OAAO,cAAC,GAAD,UACH,sBAAKrI,UAAU,YAAf,UACCqE,EAAO/B,KAAKvB,MAAM6M,SACdtL,KAAKd,MAAMkT,UACRpS,KAAKd,MAAMoJ,SACP,cAAC,IAAD,CAAU1K,GAAI,SAAUoC,KAAKvB,MAAM2M,MAAMC,OAAO1N,GAAK,UAChD,GACjB,oBAAIqE,MAAO,CAACkE,UAAW,UAAvB,iCACA,cAAC,EAAD,CAASiC,iBAAkBnI,KAAK4P,aAAc3H,KAAK,YAAYlK,KAAK,SACpE,cAAC,EAAD,CAASoK,iBAAkBnI,KAAK4P,aAAc3H,KAAK,aAAalK,KAAK,SACrE,cAAC,EAAD,CAASoK,iBAAkBnI,KAAK4P,aAAc3H,KAAK,eAAelK,KAAK,WACvE,cAAC,IAAD,CAAML,UAAU,kBAAkBoB,QAASkB,KAAK6R,kBAAhD,6B,GA7FStT,aCczBiB,OAAOC,QAAU,wDAiCF+S,OA7Bf,WACE,OACE,mCACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAO5M,KAAK,IAAI6M,OAAK,EAACC,UAAWC,IAEjC,cAAC,IAAD,CAAOF,OAAK,EAAC7M,KAAK,SAAS8M,UAAWzN,IAEtC,cAAC,IAAD,CAAOW,KAAK,cAAc6M,OAAK,EAACC,UAAW5K,IAC3C,cAAC,IAAD,CAAOlC,KAAK,0BAA0B8M,UAAWpI,IACjD,cAAC,IAAD,CAAO1E,KAAK,wBAAwB8M,UAAW/G,IAC/C,cAAC,IAAD,CAAO8G,OAAK,EAAC7M,KAAM,cAAe8M,UAAWlF,IAE7C,cAAC,IAAD,CAAOiF,OAAK,EAAC7M,KAAK,iBAAiB8M,UAAWvB,KAC9C,cAAC,IAAD,CAAOsB,OAAK,EAAC7M,KAAK,wCAAwC8M,UAAWf,KACrE,cAAC,IAAD,CAAOc,OAAK,EAAC7M,KAAK,gCAAgC8M,UAAWP,KAE7D,cAAC,IAAD,CAAOM,OAAK,EAAC7M,KAAK,YAAa8M,UAAWpD,IAC1C,cAAC,IAAD,CAAOmD,OAAK,EAAC7M,KAAK,cAAe8M,UAAWhD,IAG5C,cAAC,IAAD,CAAO9J,KAAK,2BAA2B6M,OAAK,EAACC,UAAWhE,IACxD,cAAC,IAAD,CAAO9I,KAAM,oCAAqC8M,UAAWzC,UCnCtD2C,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBpT,MAAK,YAAkD,IAA/CqT,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,2BCPDO,GAAc,cACdC,GAAe,eCEtBC,GAAY,CACdC,aAAc,CACV5N,MAAO,GACP6N,YAAa,GACbC,WAAY,GACZC,gBAAgB,IAwCTC,GAnCG,WAA6B,IAA5BzU,EAA2B,uDAAnBoU,GAAUM,EAAS,uCACpCnL,EAAU,IAAIoL,IACdC,EAAerL,EAAQlJ,IAAI,QACjC,GAAGuU,GACIA,EAAaJ,eACZ,OAAO,6BACAxU,GADP,IAEIqU,aAAc9K,EAAQlJ,IAAI,UAGtC,OADAkJ,EAAQhD,IAAI,OAAQvG,EAAMqU,aAAe,CAAE3N,KAAM,MAC1CgO,EAAO7V,MACV,KAAKgW,GAED,OADAtL,EAAQhD,IAAI,OAAQmO,EAAOI,QAAU,CAAEpO,KAAM,MAC7C,6BACO1G,GADP,IAEIqU,aAAcK,EAAOI,UAE7B,KAAKD,GACD,IAAME,EAAe,CACjBV,aAAc,CACV5N,MAAO,GACP6N,YAAa,GACbC,WAAY,GACZC,gBAAgB,IAIpB,OADJjL,EAAQhD,IAAI,OAAQwO,EAAaV,aAAgB,CAAE3N,KAAM,MACrD,6BACO1G,GADP,IAEIqU,aAAcU,EAAaV,eAEvC,QAAS,OAAOrU,IC5BxB,IAEegV,GAFAC,aAAYR,GAAYS,cAbvC,YACI,OAD0B,EAAZC,SACP,SAAAC,GAAI,OAAI,SAAAV,GAQb,OALoBU,EAAKV,SCI/BW,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,KAAD,CAAUP,MAAOQ,GAAjB,SACE,cAAC,GAAD,UAINC,SAASC,eAAe,SAM1BhC,O","file":"static/js/main.d7460376.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"zoom\":\"AllUserListStyles_zoom__2nCo-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"zoom\":\"CardStyling_zoom__BwXAY\"};","import { Component } from \"react\";\r\nimport {Link} from 'react-router-dom'\r\nclass NavBar extends Component{\r\n    render(){\r\n        return(\r\n            <nav className=\" navbar-expand-lg navbar navbar-light bg-dark  py-3\" id=\"mainNav\">\r\n                <div className=\"container\">\r\n                    <Link to=\"/\" class=\"navbar-brand js-scroll-trigger\" ><i  className=\"fa fa-home\" aria-hidden=\"true\"></i></Link>\r\n                    <button className=\"navbar-toggler navbar-toggler-right\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarResponsive\" aria-controls=\"navbarResponsive\" aria-expanded=\"false\" aria-label=\"Toggle navigation\"><span className=\"navbar-toggler-icon\"></span></button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarResponsive\">\r\n                        <ul className=\"navbar-nav ml-auto my-2 my-lg-0\">\r\n                            <li className=\"nav-item\"><Link className=\"nav-link js-scroll-trigger\" to=\"/\">\r\n                                <i  className=\"fa fa-table\" aria-hidden=\"true\"></i>&#160;DashBoard</Link></li>\r\n                            \r\n                            <li className=\"nav-item dropdown\">\r\n                                <Link className=\"nav-link dropdown-toggle\"  id=\"navbarDropdownMenuLink\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" >\r\n                                <i  className=\"fa fa-user\" aria-hidden=\"true\"></i>&#160; User\r\n                                </Link>\r\n                                <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdownMenuLink\">\r\n                                    <Link className=\"dropdown-item\"  to=\"/manageuser\" >Show User List</Link>\r\n                                    <Link className=\"dropdown-item\" to='/CreateUser' >Create New User</Link>\r\n                                    <Link className=\"dropdown-item disabled\" >Update Existing User</Link>\r\n                                </div>\r\n                            </li>\r\n                            <li className=\"nav-item\"><Link className=\"nav-link js-scroll-trigger\" to=\"/Products\"><i  className=\"fa fa-magic\" aria-hidden=\"true\"></i>&#160;Products</Link></li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        );   \r\n    } \r\n}\r\n\r\n\r\nexport default NavBar;","import React from 'react';\r\nimport NavBar from '../NavBar/NavBar';\r\nconst AdminLayout = props =>{\r\n    return(\r\n        <>\r\n            <NavBar/>\r\n            {props.children}\r\n        </>\r\n    );    \r\n}\r\n\r\nexport default AdminLayout;","\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst DashBoardNavigator = (props)=>{\r\n    var active = \"nav-link active\";\r\n    var inActive = \"nav-link\";\r\n    return(\r\n        <ul className=\"nav nav-tabs flex-column\">\r\n            <li className=\"nav-item\">\r\n                <Link onClick = {()=>props.menuSwitchingHandler(1)} className={props.currentMenu === 1 ? active : inActive }  >Today Recovery Details</Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n                <Link onClick = {()=>props.menuSwitchingHandler(2)}  className={props.currentMenu === 2 ? active : inActive }>Show Remain Recovery</Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n                <Link onClick = {()=>props.menuSwitchingHandler(3)} className={props.currentMenu === 3 ? active : inActive }>Show Report by Month</Link>\r\n            </li>\r\n        </ul>\r\n    );\r\n}\r\n\r\nexport default DashBoardNavigator;","import axios from 'axios';\r\nimport {Component} from 'react'\r\nimport { Spinner } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nclass TodayRecovery extends Component {\r\n\r\n    state= {\r\n        dataArray: [],\r\n        recoverySum: 0\r\n    }\r\n\r\n    loadData = ()=>{\r\n        axios.get(window.$domain + 'api/Analatics/GetTodayRecovery')\r\n        .then(resp=>{\r\n            this.setState({dataArray: resp.data});\r\n            this.state.dataArray.map(\r\n              data=>{\r\n                this.setState({recoverySum: this.state.recoverySum + data.payed_Amount});\r\n              }\r\n            )\r\n        });\r\n    }\r\n    componentDidMount(){\r\n        if(this.state.dataArray.length === 0)\r\n        this.loadData();\r\n        \r\n    }\r\n    render(){\r\n      var sum = 0;\r\n        return <>\r\n          <div class=\"card  shadow h-30 py-1\">\r\n            <div class=\"card-body\">\r\n                <div class=\"row no-gutters align-items-center\">\r\n                    <div class=\"col mr-2\">\r\n                        <div class=\"text-xs font-weight-bold text-primary text-uppercase mb-1\">\r\n                            Gain Recovery (Today)</div>\r\n                        <div class=\"h5 mb-0 font-weight-bold text-gray-800\">PKR{' '+this.state.recoverySum}</div>\r\n                    </div>\r\n                    <div class=\"col-auto\">\r\n                        <i class=\"fa fa-credit-card fa-2x text-gray-300\"></i>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n          </div>\r\n          <table class=\"table shadow table-bordered\">\r\n            <thead>\r\n              <tr>\r\n                <th >Client Name</th>\r\n                <th >Phone</th>\r\n                <th >Payed Amount</th>\r\n                <th >Scheme Name</th>\r\n                <th >Payment Time</th>\r\n                <th >Show Account</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {\r\n                  this.state.dataArray.length !== 0 ? this.state.dataArray.map(\r\n                    data =>{\r\n                    return  <tr>\r\n                                  <th>{data.name}</th>\r\n                                  <td>{data.phone}</td>\r\n                                  <td>{data.payed_Amount}</td>\r\n                                  <td>{data.scheme}</td>\r\n                                  <td>{data.pay_Time}</td>\r\n                                  <td><Link to={'/Accounts/'+ data.accId +'/Payment'}>show</Link></td>\r\n                              </tr>}\r\n                ): <p>No Recovery Found</p> \r\n              }\r\n            </tbody>\r\n          </table>\r\n        </>\r\n    }\r\n}\r\n\r\nexport default TodayRecovery;","import axios from 'axios';\r\nimport {Component} from 'react'\r\nimport { Spinner } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nclass MonthlyRemainRecovery extends Component {\r\n\r\n    state= {\r\n        dataArray: []\r\n    }\r\n\r\n    loadData = ()=>{\r\n        axios.get(window.$domain + 'api/Analatics/GetRemainingRecoveryCurrentMonth')\r\n        .then(resp=>{\r\n            this.setState({dataArray: resp.data});\r\n        });\r\n    }\r\n    componentDidMount(){\r\n        if(this.state.dataArray.length === 0)\r\n        this.loadData();\r\n    }\r\n    dataLoader= event=>{\r\n      \r\n      axios.get(window.$domain + 'api/Analatics/GetRemainingRecoveryGivenMonth/' + new Date(event.target.value).toDateString() )\r\n        .then(resp=>{\r\n            this.setState({dataArray: resp.data});\r\n        });\r\n    }\r\n    render(){\r\n        return <>\r\n                  <input className='shadow form-control mb-1' type=\"month\" id=\"start\" name=\"start\"\r\n                  min=\"2019-03\" defaultValue = '2021-10' onChange={this.dataLoader}></input>\r\n                  \r\n                  <table class=\"table shadow table-bordered\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th >Client Name</th>\r\n                        <th >Phone</th>\r\n                        <th >Scheme Name</th>\r\n                        <th >Show Account</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {\r\n                          this.state.dataArray.length !== 0 ? this.state.dataArray.map(\r\n                            data => <tr>\r\n                                        <th>{data.name}</th>\r\n                                        <td>{data.phone}</td>\r\n                                        <td>{data.scheme}</td>\r\n                                        <td><Link to={'/Accounts/'+ data.accId +'/Payment'}>show</Link></td>\r\n                                    </tr>\r\n                        ): <p>No Remain Recovery Found</p> \r\n                      }\r\n                    </tbody>\r\n                  </table>\r\n                </>\r\n    }\r\n}\r\n\r\nexport default MonthlyRemainRecovery;","\r\n\r\n\r\n\r\nimport Chart from \"react-google-charts\";\r\n\r\nconst MonthlyReportChart = ({title,graphData}) =>{\r\n    return(\r\n        <Chart\r\n            width={'650px'}\r\n            height={'450px'}\r\n            chartType=\"ComboChart\"\r\n            loader={<div className='jumbotron'>Loading Chart</div>}\r\n            data={graphData}\r\n            options={{\r\n                title: title,\r\n                vAxis: { title: 'Paid Customer' },\r\n                hAxis: { title: 'Monthly' },\r\n                seriesType: 'bars',\r\n                series: { 6: { type: 'line' } },\r\n            }}\r\n            rootProps={{ 'data-testid': '1' }}\r\n        />\r\n    );\r\n\r\n}\r\n\r\nexport default MonthlyReportChart;","export const goBack= (props)=>{\r\n    return <button className='btn btn-primary' onClick={()=>props.goBack()} style={{position: 'absolute', top: '80px'}} >\r\n    <i  class={\"fa fa-backward mr-1\"} aria-hidden=\"true\"></i>Go Back\r\n    </button>\r\n}\r\nexport const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\r\n  \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\r\n];","\r\nimport MonthlyReportChart from \"./MonthlyReportChart\";\r\nimport axios from \"axios\";\r\nimport { useEffect, useState, useRef} from \"react\";\r\nimport { monthNames } from \"../../../Assets/StaticFunc/UI\";\r\n\r\nconst MonthlyReport = props =>{\r\n    var [data, SetData] = useState(null);\r\n    var [totalCustomers,setTotalCustomers] = useState(0);\r\n    var [productList,setProductList] = useState(null)\r\n    const startDateRef = useRef(null);\r\n    const EndDateRef = useRef(null);\r\n    const cbAllowDisableAccountRef = useRef(null);\r\n    var [selectedScheme,setSelectedScheme] = useState(null);\r\n\r\n    const addState = event => {\r\n        console.log('called')\r\n        productList.forEach(ele=>{\r\n            if(ele.name === event.target.value) \r\n                setSelectedScheme(ele.id);\r\n        });\r\n    }\r\n\r\n    const searchData = () => {\r\n        \r\n        if(selectedScheme === null) {alert('please select Scheme');return;};\r\n        if(startDateRef.current.value === '' || EndDateRef.current.value === '') {alert('Check Start and End Dates');return;}\r\n        if(startDateRef.current.value > EndDateRef.current.value ) {alert('Check Start date greater to End Dates');return;}\r\n        \r\n        axios.get(window.$domain+'api/Analatics/GetPaidAndUnpaidCustomerReportOfScheme?StartMonth='+ startDateRef.current.value +'&EndtartMonth='+ EndDateRef.current.value +'&SchemeId='+ selectedScheme +'&WithCloseAcc=' + cbAllowDisableAccountRef.current.checked)\r\n        .then(resp => {\r\n            var compiledData= [['Month','Number of Paid Customer']];\r\n            resp.data.data.forEach(element => {\r\n                compiledData.push([monthNames[new Date(element.month).getMonth()] + ' Paid:' +element.totalPaidAmount + 'PKR', element.totalPaidCustomer])\r\n            });\r\n            setTotalCustomers(resp.data.totalCustomer);\r\n            SetData(compiledData);\r\n        })\r\n        .catch(resp=> alert(resp.data));\r\n      };\r\n    useEffect(()=>{\r\n        if(productList === null)\r\n        axios.get(window.$domain + 'api/MTServices').\r\n            then(resp=>{\r\n                setProductList(resp.data);\r\n            });\r\n        });\r\n    return(\r\n        <>\r\n            <h4>Chart Report</h4>\r\n            <select onChange={addState}  class=\"form-select form-select-lg m-1\" aria-label=\".form-select-sm example\">\r\n                            <option selected >Please Select Scheme/Product</option>\r\n                                {\r\n                                    productList?\r\n                                    productList.map(MTService=>{\r\n                                        return <option id={MTService.id} key={MTService.id}>{MTService.name}</option>\r\n                                    }):\r\n                                    <option selected>Wait We are trying to Load Your Providing Services</option>\r\n                                }\r\n                            </select>\r\n                <div class=\"form-check m-1\">\r\n                <input ref={cbAllowDisableAccountRef} class=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"defaultCheck1\"/>\r\n                <label class=\"form-check-label\" for=\"defaultCheck1\">\r\n                    Allow Disable Accounts\r\n                </label>\r\n                </div>   \r\n                <label for=\"StartMonth\">Start Month:</label>\r\n                <input ref={startDateRef} className='shadow form-control  ml-1' type=\"month\" id=\"StartMonth\" name=\"Start-Date\"\r\n                 ></input>\r\n                <label for=\"End-Month\">End Month:</label>\r\n                <input  ref={EndDateRef} className='shadow form-control ml-1' type=\"month\" id=\"start\" name=\"End-Date\" ></input>\r\n                <div className='row'>\r\n                 \r\n                <button className='btn btn-light mt-2' onClick={searchData} style={{marginLeft: 'auto', marginRight: '5px'}}>Search</button>\r\n            </div>\r\n                <MonthlyReportChart \r\n                    title={'We have total number of customers of selected Scheme are: ' + totalCustomers}\r\n                    graphData = {data}\r\n                />\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default MonthlyReport;","import { Component } from \"react\"\r\nimport DashBoardNavigator from \"./DashBoardNavigator/DashBoardNavigator\";\r\nimport TodayRecovery from \"./TodayRecovery/TodayRecovery\";\r\nimport MonthlyRemainRecovery from \"./MonthlyRecoveryReport/MonthlyRecoveryReport\";\r\nimport MonthlyReport from \"./MonthlyReport/MonthlyReport\";\r\n\r\nclass MainDashBoard extends Component{\r\n    state = {\r\n        menuIndex: 1,\r\n    }\r\n    menuSwitchHandler = menu =>{\r\n        this.setState({menuIndex: menu});\r\n    }\r\n    render(){\r\n        return(\r\n            <>\r\n                <div className='col-md-3'>\r\n                    <DashBoardNavigator currentMenu={this.state.menuIndex} menuSwitchingHandler={this.menuSwitchHandler}/>\r\n                </div>\r\n                <div className='col-md-9'> \r\n                    {\r\n                        this.state.menuIndex === 1? <TodayRecovery/>\r\n                        :this.state.menuIndex === 2? <MonthlyRemainRecovery/>\r\n                        :this.state.menuIndex === 3? <MonthlyReport/>\r\n                        : ''\r\n                    }                    \r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default  MainDashBoard;","\r\nimport { Redirect } from \"react-router\";\r\nimport AdminLayout from \"./Components/AdminLayout/AdminLayout\"\r\nimport { useState } from 'react'\r\nimport Cookie from 'universal-cookie/es6';\r\nimport MainDashBoard from \"./Components/DashBoard/MainDashBoard\";\r\n\r\nconst MTTraderApp = () =>{\r\n    var [isLogin,setLogin] = useState(false);\r\n    var cookies = new Cookie();\r\n    if(cookies.get('logedInUser') !== undefined && isLogin === false){\r\n        setLogin(true);\r\n    }\r\n    \r\n    return(\r\n        <>\r\n            <AdminLayout >\r\n                {isLogin?'':<Redirect to='/login'/>}\r\n                <div className=\"jumbotron floid-container row mt-2 overflow-auto\" style={{height: '600px'}}>\r\n                    <MainDashBoard/>\r\n                </div>\r\n            </AdminLayout>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MTTraderApp;","import React from 'react';\r\nimport { Component } from 'react';\r\nimport Cookie from 'universal-cookie/es6';\r\nimport Axios from \"axios\"\r\nimport { Redirect } from \"react-router\";\r\nimport { Spinner } from 'react-bootstrap';\r\n\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            user: '',\r\n            password: '',\r\n            login: false,\r\n            displayAnimator: false\r\n        };\r\n    this.loginUser = this.loginUser.bind(this);\r\n    }\r\n    \r\n    loginUser=()=>{\r\n        this.setState({displayAnimator: true})\r\n        Axios.post(window.$domain + 'api/Users/LoginUser?UserName='+ this.state.user + '&Password='+ this.state.password )\r\n        .then(resp=>{\r\n            if(resp.data.role !== 'admin' ) \r\n            {\r\n                alert('Your are not authorize for operating Admin Control');\r\n                return ;\r\n            }\r\n            Axios.post(window.$domain + 'api/Users/GetUserDatailsId/'+ resp.data.id )\r\n                .then(\r\n                    resp=>\r\n                    {\r\n                        \r\n                        Axios.post(window.$domain + 'api/UserDetails/UpdateLastLogin/'+ resp.data )\r\n                        .then(\r\n                            resp=>\r\n                            {\r\n                                alert('You are logged in successfully')\r\n                            });\r\n                    });\r\n            var cookies = new Cookie();\r\n            cookies.set('logedInUser', {\r\n                userName: resp.data.userName,\r\n                email: resp.data.email, \r\n                role: resp.data.role, \r\n                id: resp.data.id\r\n                }, \r\n                {\r\n                path: '/',\r\n                maxAge: 3600\r\n              });\r\n              this.setState({login: true});\r\n              this.setState({displayAnimator: false})\r\n        })\r\n        .catch(\r\n            err=>{\r\n                if(err)\r\n                alert(err.message + ': Check Internet Connection or Contact Database Admin');\r\n                this.setState({displayAnimator: false});\r\n            });\r\n    }\r\n    componentDidMount(){\r\n        var cookies = new Cookie();\r\n        if(cookies.get('logedInUser') !== undefined && this.state.login === false){\r\n            this.setState({login: true});\r\n        }\r\n    }\r\n    render(){\r\n        return (\r\n            <div className=\"container mt-4\" style={{width: \"80%\"}}>\r\n                {this.state.login? <Redirect to='/'/>:''}\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-3 col-md-2\"></div>\r\n                    <div className=\"col-lg-6 col-md-8 login-box\">\r\n                        \r\n                        <div className=\"col-lg-12 login-title \">\r\n                            \r\n                            <p style={{textAlign: 'center'}}>\r\n                                <i className=\"fa fa-key\" aria-hidden=\"true\"></i> \r\n                                -Login\r\n                            </p>\r\n                        </div>\r\n                        <div className=\"col-lg-12 login-form\">\r\n                            <div className=\"col-lg-12 login-form\">\r\n                                <form onSubmit>\r\n                                    <div className=\"form-group\">\r\n                                        <label className=\"form-control-label\">UserName</label>\r\n                                        <input onChange={event=> this.setState({user: event.target.value})} type=\"text\" className=\"form-control\" />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label className=\"form-control-label\">Password</label>\r\n                                        <input onChange={event=> this.setState({password: event.target.value})} type=\"password\" className=\"form-control\" ></input>\r\n                                    </div>\r\n                                    <div className=\"col-lg-12 loginbttm\">\r\n                                        {\r\n                                            this.state.displayAnimator ? <Spinner animation=\"grow\" />\r\n                                            : <div className=\"col-lg-6 login-btn login-button\">\r\n                                                <button onClick={this.loginUser} className=\"btn btn-outline-primary btn-light\" style={{alignContent: \"center\"}}>\r\n                                                    Login\r\n                                                </button>\r\n                                            </div>\r\n                                        }\r\n                                        \r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-lg-3 col-md-2\">\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nexport default Login;","import { Component } from \"react\";\r\nimport Axios from \"axios\"\r\nimport {Link} from 'react-router-dom'\r\n\r\nimport Styles from './AllUserListStyles.module.css';\r\nimport { Spinner } from 'react-bootstrap';\r\n\r\nclass UserList extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          userList: [],\r\n          shopAcc: []\r\n        };\r\n    this.LoadUserList = this.LoadUserList.bind(this);\r\n    }\r\n\r\n    LoadUserList=(event)=>{\r\n        if(event === undefined)\r\n        Axios.get(window.$domain + 'api/Users').then(\r\n            resp=>{\r\n                this.setState({userList: []});\r\n                this.setState({userList: resp.data});\r\n                resp.data.map(\r\n                    userResp=>{\r\n                        Axios.get(window.$domain + 'api/ShopAccounts/ShopAccountExistsByUserId/' + userResp.id)\r\n                        .then(accResp=>{  \r\n                            var newArray = this.state.shopAcc;\r\n                            newArray.push({userId: userResp.id,isAcc: accResp.data});\r\n                            this.setState({shopAcc: newArray});\r\n                        })\r\n                        .catch(resp=>resp.data.message); \r\n                    }\r\n                )\r\n            }\r\n        ).catch(\r\n            err=>{\r\n                alert('Page:manageuser =>'+ err)\r\n            }\r\n        )\r\n        else if(event.target.name === 'SearchByCnic' && event.target.value !== '' ){\r\n            Axios.get(window.$domain + 'api/Users/SearchUserbyCNIC/' + event.target.value).\r\n            then(\r\n                resp=>{\r\n                    this.setState({userList: resp.data});\r\n                }\r\n            ).catch(\r\n                err=>{\r\n                    alert('Page: Manage User =>'+err)\r\n                }\r\n            )\r\n        }\r\n        else if(event.target.name === 'SearchByName' && event.target.value !== ''){\r\n            Axios.get(window.$domain + 'api/Users/SearchUserbyName/' + event.target.value).\r\n            then(\r\n                resp=>{\r\n                    this.setState({userList: resp.data});\r\n                }\r\n            ).catch(\r\n                err=>{\r\n                    alert('Page: Manage User =>'+err)\r\n                }\r\n            )\r\n        }\r\n        else if(event.target.name === 'SearchByScheme' && event.target.value !== ''){\r\n            Axios.get(window.$domain + 'api/Users/SearchUserbyUserSchemeID/' + event.target.value).\r\n            then(\r\n                resp=>{\r\n                    this.setState({userList: resp.data});\r\n                }\r\n            ).catch(\r\n                err=>{\r\n                    alert('Page: Manage User =>'+err)\r\n                }\r\n            )\r\n        }\r\n    }\r\n    UserEnableandDisableHandler = (userId)=>\r\n    {\r\n        if(window.confirm('Attention Please! ' + 'Opration Defination: If Your User is Enabled turn Disabled if Disabled turn Enabled.'))\r\n        {\r\n            Axios.post(window.$domain + 'api/Users/UserAccountEnableandDisableHandler/' + userId)\r\n                .then(resp=> {\r\n                    this.LoadUserList();\r\n                })\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        if(this.state.userList.length === 0)\r\n        this.LoadUserList();\r\n        \r\n    }\r\n    getAccState=userId=>{\r\n        var is= null;\r\n       for(let  i= 0;i<this.state.shopAcc.length;i++){\r\n            if(this.state.shopAcc[i].userId === userId)\r\n            {\r\n                is=this.state.shopAcc[i].isAcc;\r\n                break;\r\n            }\r\n       } \r\n       return is;\r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"jumbotron container-fluid overflow-auto\">\r\n                <h3>Search User <i  className=\"fa fa-search \" aria-hidden=\"true\"></i></h3>\r\n               <div className='row ml-1 border border-dark shadow' >\r\n                    <div className=\"form-group ml-1\">\r\n                        <label><sub>by</sub>CNIC Number:</label>\r\n                        <input  type='text' class=\"form-control shadow\" onChange={this.LoadUserList} name='SearchByCnic'/>\r\n                    </div>\r\n                    <div className=\"form-group ml-1\">\r\n                        <label ><sub>by</sub>Name:</label>\r\n                        <input  type='text' className=\"form-control shadow\" onChange={this.LoadUserList} name='SearchByName'/>\r\n                    </div>\r\n                    <div className=\"form-group ml-1\">\r\n                        <label ><sub>by</sub>Scheme ID:</label>\r\n                        <input  type='number' className=\"form-control shadow\" onChange={this.LoadUserList} name='SearchByScheme'/>\r\n                    </div>\r\n               </div>\r\n               <h3>Users <i  className={\"fa fa-users \" + Styles.zoom} aria-hidden=\"true\"></i></h3>\r\n                <div className='row shadow overflow-auto m-1'>\r\n                <table className=\"table  table-bordered \">\r\n                    <thead>\r\n                        <tr >\r\n                            <th>System Id</th>\r\n                            <th>Role</th>\r\n                            <th>Name</th>\r\n                            <th>Accounts Details</th>\r\n                            <th>Add to new Scheme</th>\r\n                            <th>Shop Acc.</th>\r\n                            <th>Gender</th>\r\n                            <th>User Name</th>\r\n                            <th>Email</th>\r\n                            <th>Phone Number</th>\r\n                            <th>CNIC</th>\r\n                            <th >Last Login (DayName/Month/Day/Year) </th>\r\n                            <th>Registration Date (DayName/Month/Day/Year)</th>\r\n                            <th>User Enabled</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            this.state.userList.length > 0 ?\r\n                            this.state.userList.map(user=>{\r\n                                var isAcc=this.getAccState(user.id);\r\n                                \r\n                                return <tr key={user.id}>\r\n                                    <td>{user.id}</td>\r\n                                    <td>{user.role}</td>\r\n                                    <td>{user.name}</td>\r\n                                    <td>\r\n                                        {user.role==='admin'?'':<Link to={'/ShowAccountDetails/'+ user.id} >Show</Link>}\r\n                                    </td>\r\n                                    <td>\r\n                                        {user.role==='admin'?'':<Link to={'/User/'+ user.id + '/AddtoNewScheme'} >Add</Link>}\r\n                                    </td>\r\n                                    <td>\r\n                                        {user.role !== 'admin' ? isAcc  ? \r\n                                        <Link to={'/user/'+ user.id+'/shop'} >Go</Link>:\r\n                                        <Link to={'/user/' + user.id + '/create-shop-account'}  >Create</Link>\r\n                                        :''}\r\n                                    </td>\r\n                                    <td>{user.gender}</td>\r\n                                    <td>{user.userName}</td>\r\n                                    <td>{user.email}</td>\r\n                                    <td>{user.phoneNumber}</td>\r\n                                    <td>{user.cnic}</td>\r\n                                    <td>{new Date(user.lastLogin).toDateString() + ' ' \r\n                                     + new Date(user.lastLogin).toLocaleTimeString() }</td>\r\n                                    <td>{new Date(user.registration_Date).toDateString()}</td>\r\n                                    <td onClick={()=> {if(user.role!=='admin')this.UserEnableandDisableHandler(user.id)}}>\r\n                                        {user.isUserDisabled? \r\n                                        <i  class={\"fa fa-lock \" + Styles.zoom} aria-hidden=\"true\"></i> :\r\n                                        <i  class={\"fa fa-check \" + Styles.zoom} aria-hidden=\"true\"></i>}\r\n                                    </td>\r\n                                </tr>\r\n                            }): <Spinner animation=\"grow\"  /> \r\n                        }\r\n                    </tbody>\r\n                </table>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UserList;","import UserList from \"./UserList/AllUserList\";\r\nimport AdminLayout from '../../AdminLayout/AdminLayout'\r\nimport { useState } from 'react'\r\nimport Cookie from 'universal-cookie/es6';\r\nimport { Redirect } from \"react-router\";\r\n\r\nconst UserManagement = ()=>{\r\n    var [isLogin,setLogin] = useState(false);\r\n    var cookies = new Cookie();\r\n    if(cookies.get('logedInUser') !== undefined && isLogin === false){\r\n        setLogin(true);\r\n    }\r\n\r\n    return(\r\n        <AdminLayout >\r\n            {isLogin?'':<Redirect to='/login'/>}\r\n            <UserList/>\r\n        </AdminLayout>\r\n    );\r\n}\r\n\r\nexport default UserManagement;","const TbInputControl = props=>{\r\n    return(\r\n        <div class=\"form-group \">\r\n            <label for={props.ctrlName}>{props.Name}:</label>\r\n            <input  type={props.inutType} class=\"form-control\" onChange={props.DataInputHandler} name={props.ctrlName}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TbInputControl;","import axios from \"axios\";\r\nimport { Component } from \"react\";\r\nimport { Redirect } from \"react-router\";\r\nimport AdminLayout from \"../../../AdminLayout/AdminLayout\";\r\nimport TbInputControl from \"../UI/TbInputControl\";\r\nimport Cookie from 'universal-cookie';\r\n\r\nclass AddNewPayment extends Component{\r\n    state = {\r\n        amount: 0,\r\n        redirect: false\r\n    }\r\n    ReadyUser = event =>{\r\n        if(event.target.value > 0)\r\n            this.setState({amount: event.target.value})\r\n    }\r\n    postPaymnet= ()=>{\r\n        var cookies = new Cookie();\r\n        axios.post(\r\n            window.$domain + 'api/AccDetails',\r\n            {\r\n                \"id\": 0,\r\n                \"payedAmount\": this.state.amount,\r\n                \"payingDate\": \"2021-09-27T22:15:41.611Z\",\r\n                \"accId\": this.props.Accid,\r\n                \"postedByUserId\": cookies.get('logedInUser').id\r\n            }\r\n        ).then(\r\n            resp=>{\r\n                this.setState({redirect: true});\r\n            }\r\n        )\r\n    }\r\n    render(){\r\n        return(\r\n                <div className=\"jumbotron mt-3\">\r\n                    {\r\n                        this.state.redirect ? <Redirect to={'/Accounts/'+this.props.Accid+'/Payment'} />: ''\r\n                    }\r\n                    <h3>Add Payment</h3>\r\n                    <hr/>\r\n                    <h5>Please fill this form carefully, This transection is ir-revercible</h5>\r\n                    <hr/>\r\n                    <TbInputControl DataInputHandler={this.ReadyUser} Name={'Payment'} inutType={'number'} ctrlName={'Add Payment'} />\r\n                    <button onClick={this.postPaymnet} className='btn btn-success'>Post Amount</button>\r\n                </div>\r\n        )\r\n    }\r\n}\r\nexport default AddNewPayment;","\r\nimport AddNewPayment from \"../../UserManagement/AddNewPayment/AddNewPayment\";\r\nimport { useState } from 'react'\r\nimport Cookie from 'universal-cookie/es6';\r\nimport { Redirect } from \"react-router\";\r\n\r\nconst PaymentDetails = props=>{\r\n    var [IsReadyforPayment,setIsReadyforPayment] = useState(false);\r\n    var [isLogin,setLogin] = useState(false);\r\n    var cookies = new Cookie();\r\n    if(cookies.get('logedInUser') !== undefined && isLogin === false){\r\n        setLogin(true);\r\n    }\r\n    return(\r\n        <div className=\"jumbotron container-fluid overflow-auto\">\r\n            {isLogin?'':<Redirect to='/login'/>}\r\n            \r\n            <table className=\"table shadow table-bordered\">\r\n                <thead>\r\n                    <tr >\r\n                        <th>Date</th>\r\n                        <th>Payment</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        props.peymentHistory.map(payment=>{\r\n                            return <tr>\r\n                                        <td>{new Date(payment.payingDate).toDateString()}</td>\r\n                                        <td>{payment.payedAmount}</td>\r\n                                    </tr>\r\n                        })\r\n                    }\r\n                    \r\n                </tbody>\r\n            </table>\r\n            <button onClick={()=> IsReadyforPayment ? setIsReadyforPayment(false): setIsReadyforPayment(true)} className='btn btn-primary'>Pay Installment</button>\r\n            {\r\n                props.AccId !== 0 && IsReadyforPayment ?\r\n                <AddNewPayment Accid = {props.AccId} />: ''\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PaymentDetails;","\r\nimport { useState } from 'react';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport styles from './CardStyling.module.css'; \r\n\r\nconst AccountCard= props =>{\r\n    var [showToast,setShowtoast] = useState(false);\r\n    var toastAccountClose=toast(props.closingReason, {\r\n                                    position: \"top-right\",\r\n                                    autoClose: 10000,\r\n                                    hideProgressBar: false,\r\n                                    closeOnClick: true,\r\n                                    pauseOnHover: true,\r\n                                    draggable: true,\r\n                                    progress: undefined,\r\n                                    });\r\n    return(\r\n        <div class=\"card shadow m-2\" style={{width: '12rem'}}>\r\n            {showToast? <ToastContainer/>: ''}\r\n            <div class=\"card-body\">\r\n                <h5 class=\"card-title\">{props.schemeName}</h5>\r\n                <p class=\"card-text\">{props.desc}</p>\r\n                {props.isAccClosed? '':<button onClick={()=>props.paymentDisplayHandler(props.AccId)} class=\"btn btn-success\">Pay Installment</button>}\r\n                <button onClick={()=>{props.gotoPaymentHistory(props.AccId)}} className='btn btn-info mt-1'>Edit History</button>\r\n                {props.isAccClosed? '' :<button onClick={()=>{props.disableAcc(props.AccId)}} className='btn btn-danger mt-1'>Disable Account</button>}\r\n                {props.isAccClosed?<button onClick={()=>setShowtoast(!showToast)} className='btn btn-primary mt-1'>Show Reason</button> :''}\r\n            </div>\r\n            {props.isAccClosed? <span onClick={props.isAccClosed?()=>props.enableAcc(props.AccId):''} class={\"badge badge-danger \" + styles.zoom} > <i  class=\"fa fa-lock\" aria-hidden=\"true\"></i></span>:<span class= {\"badge badge-success \" + styles.zoom}> <i  class=\"fa fa-check\" aria-hidden=\"true\"></i></span>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AccountCard;","import axios from \"axios\";\r\nimport { Component } from \"react\";\r\nimport { Redirect } from \"react-router\";\r\nimport AdminLayout from \"../../AdminLayout/AdminLayout\";\r\nimport PaymentDetails from \"./DisplayPaymentDetails/PaymentDetails\";\r\nimport AccountCard from \"./UI/AccountCard\";\r\nimport Axios from \"axios\"\r\nimport Cookie from 'universal-cookie/es6';\r\nimport { Spinner } from 'react-bootstrap';\r\nimport {goBack} from '../../../Assets/StaticFunc/UI';\r\nclass AccountDetails extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            Accounts:null,\r\n            Schemes: null,\r\n            DisplayAcc: null,\r\n            AccId: 0,\r\n            gotoHistoryPaymentRedirect: null,\r\n            isLogin: true\r\n        }\r\n    }\r\n\r\n    gotoHistoryPaymentRedirectHandler=(AccId)=>{\r\n        this.setState({gotoHistoryPaymentRedirect: {\r\n            AccId: AccId,\r\n            redir: true \r\n        }})\r\n    }\r\n    AccountEnableHandler =(AccId)=>{\r\n        \r\n        var ClosingDescription = window.prompt(\"what is the reason of Enabling Account\");\r\n        if(ClosingDescription !== null)\r\n        if(window.confirm('Attention Please! ' + 'Opration Defination: Are you sure you want to --Enable-- this account'))\r\n        {\r\n            Axios.put(window.$domain + 'api/Accounts/DisableAndEnableHandler/' + AccId + '?ClosingDescription=' + ClosingDescription)\r\n                .then(resp=> {\r\n                    \r\n                });\r\n            this.setState({Accounts: null});\r\n        }\r\n    }\r\n    AccountDisableHandler =(AccId)=>{\r\n        \r\n        var ClosingDescription = window.prompt(\"what is the reason of Disabling Account\");\r\n        if(ClosingDescription !== null)\r\n        if(window.confirm('Attention Please! ' + 'Opration Defination: Are you sure you want to disable this account'))\r\n        {\r\n            Axios.put(window.$domain + 'api/Accounts/DisableAndEnableHandler/' + AccId + '?ClosingDescription=' + ClosingDescription)\r\n                .then(resp=> {\r\n                })\r\n                this.setState({Accounts: null});\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        if(this.state.Accounts === null){\r\n            axios.get(window.$domain + 'api/Accounts/GetAccountbyUserId/' + this.props.match.params.id)\r\n            .then(\r\n                resp=>{\r\n                    this.setState({Accounts: resp.data});\r\n                }\r\n            )\r\n            axios.get(window.$domain + 'api/MTServices')\r\n            .then(\r\n                resp=>{\r\n                    this.setState({Schemes: resp.data});\r\n                }\r\n            )\r\n            \r\n        }\r\n        var cookies = new Cookie();\r\n        if(cookies.get('logedInUser') === undefined)\r\n        {\r\n            this.setState({isLogin: false});\r\n        }\r\n    }\r\n    componentDidUpdate(){\r\n        if(this.state.Accounts === null){\r\n            axios.get(window.$domain + 'api/Accounts/GetAccountbyUserId/' + this.props.match.params.id)\r\n            .then(\r\n                resp=>{\r\n                    this.setState({Accounts: resp.data});\r\n                }\r\n            )\r\n            axios.get(window.$domain + 'api/MTServices')\r\n            .then(\r\n                resp=>{\r\n                    this.setState({Schemes: resp.data});\r\n                }\r\n            )\r\n        }\r\n    }\r\n\r\n    paymentDisplayHandler = (Accid)=>{\r\n        this.state.Accounts.map(\r\n            Account => {\r\n                if(Account.id === Accid ){\r\n                    this.setState({DisplayAcc: Account.accPaymentDetails});\r\n                    this.setState({AccId: Accid})\r\n                }\r\n            }\r\n        )\r\n    }\r\n    render(){\r\n        return(\r\n            <AdminLayout>\r\n                {this.state.isLogin?'':<Redirect to='/login'/>}\r\n                {this.state.gotoHistoryPaymentRedirect=== null? '':<Redirect to={'/Accounts/' + this.state.gotoHistoryPaymentRedirect.AccId + '/Payment'} /> }\r\n                <div className='jumbotron mt-3'>\r\n                {goBack(this.props.history)}\r\n                    <div className='row'>\r\n                        <div className='col-md-3'>\r\n                            <h5 style={{textAlign: 'center'}}>Participated Schemes<i  className=\"fa fa-magic \" aria-hidden=\"true\"></i></h5>\r\n                            {\r\n                                this.state.Schemes !== null && this.state.Accounts !== null ?this.state.Accounts.map(\r\n                                    Account => this.state.Schemes.map(\r\n                                        Scheme=> Scheme.id === Account.mtServiceId ? <AccountCard \r\n                                                                                        schemeName={Scheme.name} \r\n                                                                                        desc={Scheme.details} \r\n                                                                                        AccId={Account.id} \r\n                                                                                        paymentDisplayHandler ={this.paymentDisplayHandler}\r\n                                                                                        gotoPaymentHistory= {this.gotoHistoryPaymentRedirectHandler}\r\n                                                                                        isAccClosed= {Account.isAccClosed}\r\n                                                                                        disableAcc={this.AccountDisableHandler}\r\n                                                                                        closingReason={Account.closingDescription}\r\n                                                                                        enableAcc={this.AccountEnableHandler}/>: ''\r\n                                    ) \r\n                                ):<div className='m-5'><Spinner animation=\"grow\" /></div>\r\n                            }\r\n                        </div>\r\n                        <div className='col-md-9'>\r\n                            <h5 style={{textAlign: 'center'}}>Account Payment Details</h5>\r\n                            {\r\n                                this.state.DisplayAcc? \r\n                                <PaymentDetails peymentHistory={this.state.DisplayAcc} AccId = {this.state.AccId}/>\r\n                                :'Please select a Scheme'\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </AdminLayout>\r\n        );\r\n    }\r\n}\r\nexport default AccountDetails;\r\n\r\n","import React,{ Component } from \"react\";\r\nimport AdminLayout from \"../../../AdminLayout/AdminLayout\";\r\nimport axios from 'axios';\r\nimport Cookie from 'universal-cookie';\r\nimport { Redirect } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Spinner } from \"react-bootstrap\";\r\nimport {goBack} from '../../../../Assets/StaticFunc/UI';\r\n\r\nclass PaymentHistory extends Component{\r\n   \r\n    constructor(props) {\r\n        super(props);\r\n        this.state =  {\r\n            historyList: [],\r\n            isLogin: true,\r\n            goneToPrint: false,\r\n            searchQuery: {\r\n                startDate: null,\r\n                endDate: null\r\n            },\r\n            queryExecuted: false\r\n        };\r\n        this.queryDataLoader = this.queryDataLoader.bind(this);\r\n    }\r\n    componentDidMount(){\r\n        if(this.state.historyList.length === 0)\r\n        {\r\n            axios.get(window.$domain + 'api/AccDetails/GetAccDetailsbyAccountId/' + this.props.match.params.id)\r\n            .then(\r\n                resp=>{\r\n                        resp.data.map(\r\n                            payment => {\r\n                                axios.get(window.$domain + 'api/Users/' + payment.postedByUserId).then(\r\n                                    user=>{\r\n                                        var arrayHistory = [];\r\n                                        arrayHistory = this.state.historyList;\r\n                                        arrayHistory.push(\r\n                                            {\r\n                                                payDate: payment.payingDate, \r\n                                                paymentId: payment.id,\r\n                                                payedAmount: payment.payedAmount,\r\n                                                PostedByUser: user.data.userName\r\n                                            });\r\n                                        this.setState({historyList: arrayHistory});\r\n                                    }\r\n                                )\r\n                            }\r\n                    );\r\n                }\r\n            ).catch(\r\n                err=> {\r\n\r\n                }\r\n            )\r\n        }\r\n        var cookies = new Cookie();\r\n        if(cookies.get('logedInUser') === undefined)\r\n        {\r\n            this.setState({isLogin: false});\r\n        }\r\n    }\r\n    printModeHandler = ()=>{\r\n        this.setState({goneToPrint: !this.state.goneToPrint});\r\n    }\r\n    searchByDateTime = (event)=>{\r\n        if(event.target.name === 'Start-Date'){\r\n            this.setState({searchQuery: {\r\n                startDate: new Date(event.target.value).toLocaleDateString(),\r\n                endDate: this.state.searchQuery.endDate\r\n            }});\r\n        }\r\n        if(event.target.name === 'End-Date'){\r\n            this.setState({searchQuery: {\r\n                startDate: this.state.searchQuery.startDate,\r\n                endDate: new Date(event.target.value).toLocaleDateString()\r\n            }});\r\n        }\r\n    }\r\n    queryDataLoader(){\r\n        \r\n            if(this.state.searchQuery.startDate !== null \r\n                && this.state.searchQuery.endDate !== null)\r\n            {\r\n                this.setState({historyList: []});\r\n                axios.post(window.$domain + 'api/AccDetails/GetAccountDetailsByGivenMonth/' \r\n            + this.props.match.params.id \r\n            + '?StartDate=' + this.state.searchQuery.startDate \r\n            + '&EndDate=' + this.state.searchQuery.endDate)\r\n                .then(\r\n                    resp=>{\r\n                            resp.data.map(\r\n                                payment => {\r\n                                    axios.get(window.$domain + 'api/Users/' + payment.postedByUserId).then(\r\n                                        user=>{\r\n                                            var arrayHistory = [];\r\n                                            arrayHistory = this.state.historyList;\r\n                                            arrayHistory.push(\r\n                                                {\r\n                                                    payDate: payment.payingDate, \r\n                                                    paymentId: payment.id,\r\n                                                    payedAmount: payment.payedAmount,\r\n                                                    PostedByUser: user.data.userName\r\n                                                });\r\n                                            this.setState({historyList: arrayHistory});\r\n                                        }\r\n                                    )\r\n                                }\r\n                        );\r\n                    }\r\n                ).catch(\r\n                    err=> {\r\n                    }\r\n                )\r\n            }\r\n    }\r\n    render(){\r\n        return(\r\n            <AdminLayout>\r\n                {this.state.isLogin?'':<Redirect to='/login'/>}\r\n                {!this.state.goneToPrint?\r\n                <div className=\"jumbotron container-fluid overflow-auto\" >\r\n                    {goBack(this.props.history)}\r\n                    <h2>Payment History</h2>\r\n                    <label for=\"StartMonth\">Start Month:</label>\r\n                    <input className='shadow form-control  ml-1' type=\"date\" id=\"StartMonth\" name=\"Start-Date\"\r\n                    defaultValue = '2021-10' onChange={this.searchByDateTime}></input>\r\n                    <label for=\"End-Month\">End Month:</label>\r\n                    <input className='shadow form-control ml-1' type=\"date\" id=\"start\" name=\"End-Date\"\r\n                      onChange={this.searchByDateTime}></input>\r\n                    <div className='row'>\r\n                    <button className='btn btn-light mt-2'  style={{marginLeft: 'auto', marginRight: '5px'}}\r\n                      onClick={this.queryDataLoader}>Search</button>\r\n                    </div>\r\n                    {\r\n                        this.state.historyList !== null ?\r\n                        <DisplayHistory  \r\n                        paymentHistoryList= {this.state.historyList} \r\n                        AccID={this.props.match.params.id}\r\n                        isPrintable= {false}\r\n                         />\r\n                        : <Spinner animation=\"grow\" />\r\n                    }\r\n                    <button onClick={()=>this.setState({goneToPrint: true})} className='btn btn-primary'>Print</button>\r\n            </div>\r\n            :<DisplayHistory backToAppMode={this.printModeHandler}  isPrintable= {true} goBackFunc={this.props.history} paymentHistoryList= {this.state.historyList} AccID={this.props.match.params.id} />}\r\n            </AdminLayout>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nexport class DisplayHistory extends Component {\r\n    state = {\r\n        redirect: false,\r\n        sum: 0\r\n    }\r\n    componentDidMount(){\r\n        this.updateComponent();\r\n    }\r\n    componentDidUpdate(){\r\n        this.updateComponent();\r\n    }\r\n    updateComponent=()=>{\r\n        if(this.props.paymentHistoryList.length > null && this.state.sum === 0)\r\n        {\r\n            var sum=0;\r\n            this.props.paymentHistoryList.map(payment=>{\r\n                sum=sum+payment.payedAmount;\r\n            })\r\n            this.setState({sum: sum});\r\n        }\r\n    }\r\n    printPage(){\r\n        window.print();\r\n        this.props.backToAppMode();\r\n    }\r\n    render() {\r\n      return (\r\n        <div className='m-2'>\r\n        {\r\n           this.props.isPrintable? <>\r\n            <h4>Total Paid Amount: PKR {this.state.sum}</h4>\r\n            <h5>Scheme ID: {this.props.AccID}</h5>\r\n            </>:''\r\n        }\r\n        <table className='table '>\r\n         <thead>\r\n            <tr >\r\n                <th>Date -- Time</th>\r\n                <th>Payment</th>\r\n                <th>Payment Received By</th>\r\n                {this.props.isPrintable?'':<th>Amount Modification</th>}\r\n            </tr>\r\n        </thead>\r\n          <tbody>\r\n          {this.props.paymentHistoryList?\r\n          this.props.paymentHistoryList.map(payment=>{\r\n                return <tr>\r\n                            <td>{new Date(payment.payDate).toDateString() + ' -- ' + new Date(payment.payDate).toLocaleTimeString() }</td>\r\n                            <td>{payment.payedAmount}</td>\r\n                            <td>{payment.PostedByUser}</td>\r\n                            {this.props.isPrintable?'':<td><Link to={'/account/payment/modification/' + payment.paymentId}>modify</Link></td>}\r\n                    </tr>\r\n                })\r\n                :''}\r\n          </tbody>\r\n        </table>\r\n        {this.props.isPrintable?\r\n        <a onClick={()=>this.printPage()} style={{cursor: 'pointer', color: \"white\", backgroundColor: 'gray'}} >Print Out</a>:''}\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n\r\nexport default PaymentHistory;\r\n","import axios from \"axios\";\r\nimport React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router\";\r\nimport AdminLayout from \"../../../AdminLayout/AdminLayout\";\r\nimport TbInputControl from \"../UI/TbInputControl\";\r\nimport {goBack} from '../../../../Assets/StaticFunc/UI';\r\n\r\nclass CreateNewUser extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            \"id\": 0,\r\n            \"email\": \"\",\r\n            \"role\": \"user\",\r\n            \"userName\": \"\",\r\n            \"password\": \"\",\r\n            \"userDetails\": {\r\n              \"id\": 0,\r\n              \"name\": \"\",\r\n              \"cnic\": \"\",\r\n              \"phoneNumber\": \"\",\r\n              \"address\": \"\",\r\n              \"gender\": \"\",\r\n              \"registration_Date\": \"\"\r\n            },\r\n            MTServices:[],\r\n            redirect: false\r\n        };\r\n        this.amountInputRef = React.createRef();\r\n        this.ReadyUser = this.ReadyUser.bind(this);\r\n    }\r\n    ReadyUser=(event)=>{\r\n        if(event.target.name === 'GetFullName'){\r\n            this.setFullName(event.target)\r\n        }\r\n        else if(event.target.name === 'GetUserName'){\r\n            this.setUserName(event.target)\r\n        }\r\n        else if(event.target.name === 'GetGender'){\r\n            this.setGender(event.target)\r\n        }\r\n        else if(event.target.name === 'GetEmail'){\r\n            this.setEmail(event.target)\r\n        }\r\n        else if(event.target.name === 'GetPassword'){\r\n            this.setPassword(event.target)\r\n        }\r\n        else if(event.target.name === 'GetCNIC'){\r\n            this.setCNIC(event.target)\r\n        }\r\n        else if(event.target.name === 'GetAddress'){\r\n            this.setAddress(event.target)\r\n        }\r\n        else if(event.target.name === 'GetPhone'){\r\n            this.setPhoneNumber(event.target)\r\n        }\r\n    }\r\n    setFullName =(target)=>{\r\n        this.setState({userDetails: {\r\n            \"id\": 0,\r\n            \"name\": target.value,\r\n            \"cnic\": this.state.userDetails.cnic,\r\n            \"phoneNumber\": this.state.userDetails.phoneNumber,\r\n            \"address\": this.state.userDetails.address,\r\n            \"gender\": this.state.userDetails.gender,\r\n            \"registration_Date\": this.state.userDetails.registration_Date\r\n          }});\r\n    }\r\n    setGender =(target)=>{\r\n        this.setState({userDetails: {\r\n            \"id\": 0,\r\n            \"name\": this.state.userDetails.name,\r\n            \"cnic\": this.state.userDetails.cnic,\r\n            \"phoneNumber\": this.state.userDetails.phoneNumber,\r\n            \"address\": this.state.userDetails.address,\r\n            \"gender\": target.value,\r\n            \"registration_Date\": this.state.userDetails.registration_Date\r\n          }});\r\n    }\r\n    setUserName = (target)=>{\r\n        this.setState({userName: target.value});\r\n    }\r\n    setEmail = (target)=>{\r\n        this.setState({email: target.value});\r\n    }\r\n    setPassword = (target)=>{\r\n        this.setState({password: target.value});\r\n    }\r\n    setCNIC =(target)=>{\r\n        this.setState({userDetails: {\r\n            \"id\": 0,\r\n            \"name\": this.state.userDetails.name,\r\n            \"cnic\": target.value,\r\n            \"phoneNumber\": this.state.userDetails.phoneNumber,\r\n            \"address\": this.state.userDetails.address,\r\n            \"gender\": this.state.userDetails.gender,\r\n            \"registration_Date\": this.state.userDetails.registration_Date\r\n          }});\r\n    }\r\n    setAddress =(target)=>{\r\n        this.setState({userDetails: {\r\n            \"id\": 0,\r\n            \"name\": this.state.userDetails.name,\r\n            \"cnic\": this.state.userDetails.cnic,\r\n            \"phoneNumber\": this.state.userDetails.phoneNumber,\r\n            \"address\": target.value,\r\n            \"gender\": this.state.userDetails.gender,\r\n            \"registration_Date\": this.state.userDetails.registration_Date\r\n          }});\r\n    }\r\n    setPhoneNumber =(target)=>{\r\n        this.setState({userDetails: {\r\n            \"id\": 0,\r\n            \"name\": this.state.userDetails.name,\r\n            \"cnic\": this.state.userDetails.cnic,\r\n            \"phoneNumber\": target.value,\r\n            \"address\": this.state.userDetails.address,\r\n            \"gender\": this.state.userDetails.gender,\r\n            \"registration_Date\": this.state.userDetails.registration_Date\r\n          }});\r\n    }\r\n\r\n    setUserType= (event)=>\r\n    {\r\n        this.setState({role: event.target.value});\r\n    }\r\n    \r\n    CreatNewUser = ()=>{\r\n        axios.post(\r\n                window.$domain + 'api/Users',\r\n                {\r\n                    \"id\": 0,\r\n                    \"email\": this.state.email,\r\n                    \"userName\": this.state.userName,\r\n                    \"password\": this.state.password,\r\n                    \"role\": this.state.role,\r\n                    \"userDetail\": {\r\n                        \"id\": 0,\r\n                        \"name\": this.state.userDetails.name,\r\n                        \"cnic\": this.state.userDetails.cnic,\r\n                        \"phoneNumber\": this.state.userDetails.phoneNumber,\r\n                        \"address\": this.state.userDetails.address,\r\n                        \"gender\": this.state.userDetails.gender,\r\n                    }\r\n                }    \r\n            )\r\n        .then(response => this.setState({redirect: true}))\r\n        .catch(\r\n            err=>\r\n            {\r\n                alert(err.response.data);\r\n            }\r\n            );\r\n    }\r\n    \r\n    render(){\r\n        return(\r\n            <AdminLayout>\r\n            <div className=\"jumbotron\">\r\n                {goBack(this.props.history)}\r\n                {this.state.redirect?<Redirect to='/manageuser'/>:''}\r\n                <h3>Create New User</h3>\r\n                <hr/>\r\n                <h5>Please Select User Type</h5>\r\n                <select class=\"form-select form-select-lg\" onChange={this.setUserType} aria-label=\".form-select-sm example\">\r\n                <option selected>user</option>\r\n                <option>worker</option>\r\n                </select>\r\n                <hr/>\r\n                <h5>User Information</h5>\r\n                <hr/>\r\n                    <TbInputControl DataInputHandler={this.ReadyUser} Name={'Full Name'} inutType={'text'} ctrlName={'GetFullName'} />\r\n                    <TbInputControl DataInputHandler={this.ReadyUser} Name={'User Name'} inutType={'text'} ctrlName={'GetUserName'} />\r\n                    <TbInputControl DataInputHandler={this.ReadyUser} Name={'E-mail'} inutType={'email'} ctrlName={'GetEmail'} />\r\n                    <TbInputControl DataInputHandler={this.ReadyUser} Name={'Password'} inutType={'password'} ctrlName={'GetPassword'} />\r\n                    <TbInputControl DataInputHandler={this.ReadyUser} Name={'Phone Number'} inutType={'text'} ctrlName={'GetPhone'} />\r\n                    <TbInputControl DataInputHandler={this.ReadyUser} Name={'CNIC'} inutType={'text'} ctrlName={'GetCNIC'} />\r\n                    <TbInputControl DataInputHandler={this.ReadyUser} Name={'Complete Address'} inutType={'text'} ctrlName={'GetAddress'} />\r\n                    <TbInputControl DataInputHandler={this.ReadyUser} Name={'Gender'} inutType={'text'} ctrlName={'GetGender'} />\r\n                    <button onClick={this.CreatNewUser} className='btn btn-secondary'>Create</button>\r\n                </div>\r\n                \r\n            </AdminLayout>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CreateNewUser;","import { Component } from \"react\";\r\nimport React from 'react'\r\nimport AdminLayout from '../../../AdminLayout/AdminLayout'\r\nimport TbInputControl from '../UI/TbInputControl'\r\nimport axios from \"axios\";\r\nimport { Redirect } from \"react-router\";\r\nimport Cookie from 'universal-cookie';\r\nimport {goBack} from '../../../../Assets/StaticFunc/UI';\r\nclass AttachWithNewScheme extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            AccProtoType:{\r\n                \"id\": 0,\r\n                \"amountPayable\": 0,\r\n                \"monthlyInstalment\": 0,\r\n                \"isAccClosed\": false,\r\n                \"userid\": 0,\r\n                \"mtServiceId\": 0,\r\n                \"accPaymentDetails\": null\r\n            },\r\n            MTServices: null,\r\n            redirect: false,\r\n            isLogin: true\r\n        };\r\n        this.amountInputRef = React.createRef();\r\n        this.ReadyUser = this.ReadyUser.bind(this);\r\n    }\r\n\r\n    ReadyUser=(event)=>{\r\n        if(event.target.name === 'GetAmountPayable')\r\n        {\r\n            this.TotalAmountPayable(event.target)\r\n        }\r\n        else if(event.target.name === 'GetMonthlyInstallment'){\r\n            this.MonthlyInstallment(event.target)\r\n        }\r\n    }\r\n\r\n    TotalAmountPayable = target =>{\r\n        this.setState({AccProtoType: \r\n            {\r\n                \"id\": 0,\r\n                \"amountPayable\": target.value,\r\n                \"monthlyInstalment\": this.state.AccProtoType.monthlyInstalment,\r\n                \"isAccClosed\": false,\r\n                \"userid\": this.state.AccProtoType.userid,\r\n                \"mtServiceId\": this.state.AccProtoType.mtServiceId,\r\n                \"accPaymentDetails\": null\r\n            }\r\n        })\r\n    }\r\n\r\n    MonthlyInstallment = target=>{\r\n        this.setState({AccProtoType: \r\n            {\r\n                \"id\": 0,\r\n                \"amountPayable\": this.state.AccProtoType.amountPayable,\r\n                \"monthlyInstalment\": target.value,\r\n                \"isAccClosed\": false,\r\n                \"userid\": this.state.AccProtoType.userid,\r\n                \"mtServiceId\":this.state.AccProtoType.mtServiceId,\r\n                \"accPaymentDetails\": null\r\n            }\r\n        })\r\n    }\r\n    PostData=()=>{\r\n        axios.get(window.$domain + 'api/Accounts/GetAccountbyUserId/' + this.state.AccProtoType.userid)\r\n        .then(\r\n            resp=> {\r\n                var duplicated = false;\r\n                resp.data.map(acc=>{\r\n                    if(acc.mtServiceId === this.state.AccProtoType.mtServiceId)\r\n                    {\r\n                        duplicated = true;\r\n                        alert('Sorry! You are not allow to make duplication')\r\n                    }\r\n                });\r\n                if(!duplicated)\r\n                {\r\n                    axios.post(window.$domain + 'api/Accounts',this.state.AccProtoType)\r\n                        .then(resp=> {\r\n                            this.setState({redirect: true});\r\n                        }). catch(\r\n                            resp=> alert(resp.data.message)\r\n                        );\r\n                }\r\n            }\r\n        ). catch(\r\n            resp=> alert(resp.data.message)\r\n        );\r\n    }\r\n\r\n    MTServiceSelection = (event) => {\r\n        if(event.target.value !== 'Please Select Scheme/Product'){\r\n            this.state.MTServices.map(\r\n                mtService=>{\r\n                    if(mtService.name === event.target.value){\r\n                        this.setState({AccProtoType: \r\n                            {\r\n                                \"id\": 0,\r\n                                \"amountPayable\": this.state.AccProtoType.amountPayable,\r\n                                \"monthlyInstalment\": this.state.AccProtoType.monthlyInstalment,\r\n                                \"isAccClosed\": false,\r\n                                \"userid\": this.state.AccProtoType.userid,\r\n                                \"mtServiceId\": mtService.id,\r\n                                \"accPaymentDetails\": null\r\n                            }\r\n                        })\r\n                    }\r\n                }\r\n            )\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        if(this.state.AccProtoType.userid === 0){\r\n            this.setState({AccProtoType: {\r\n                \"id\": 0,\r\n                \"amountPayable\": this.state.AccProtoType.amountPayable,\r\n                \"monthlyInstalment\": this.state.AccProtoType.monthlyInstalment,\r\n                \"isAccClosed\": false,\r\n                \"userid\": this.props.match.params.id,\r\n                \"mtServiceId\": this.state.AccProtoType.mtServiceId,\r\n                \"accPaymentDetails\": null\r\n            }})\r\n        }\r\n        if(this.state.MTServices === null){\r\n            axios.get(window.$domain + 'api/MTServices').\r\n            then(resp=>{\r\n                this.setState({MTServices: resp.data});\r\n            });\r\n        }\r\n        var cookies = new Cookie();\r\n        if(cookies.get('logedInUser') === undefined)\r\n        {\r\n            this.setState({isLogin: false});\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <AdminLayout>\r\n                {this.state.isLogin?'':<Redirect to='/login'/>}\r\n                {this.state.redirect? <Redirect to='/manageuser'/>: ''}\r\n                <div className='jumbotron'>\r\n                {goBack(this.props.history)}\r\n                    <div className='container-fluid'>\r\n                        <h5>Add User to New Scheme</h5>\r\n                        <hr/> \r\n                        <h6>Please Select Scheme/Product</h6>\r\n                        <hr/>\r\n                            <select class=\"form-select form-select-lg\" onChange={this.MTServiceSelection} aria-label=\".form-select-sm example\">\r\n                            <option selected>Please Select Scheme/Product</option>\r\n                                {\r\n                                    this.state.MTServices?\r\n                                    this.state.MTServices.map(MTService=>{\r\n                                        return <option key={MTService.id}>{MTService.name}</option>\r\n                                    }):\r\n                                    <option selected>Wait We are trying to Load Your Providing Services</option>\r\n                                }\r\n                            </select>\r\n                    </div>\r\n                    <hr/>\r\n                    <div class=\"form-group \">\r\n                        <label for='GetAmountPayable'>Total Amount Payable:</label>\r\n                        <input ref={this.amountInputRef} type='number' class=\"form-control\" onChange={this.ReadyUser} name='GetAmountPayable'/>\r\n                    </div>\r\n                    <TbInputControl DataInputHandler={this.ReadyUser} Name={'Monthly Installment'} inutType={'number'} ctrlName={'GetMonthlyInstallment'} />\r\n                    <button className=\"btn btn-success\" onClick={this.PostData}>Add User to this Sceme</button>\r\n                </div>\r\n            </AdminLayout>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default AttachWithNewScheme;","import { Component } from \"react\";\r\nimport AdminLayout from \"../../AdminLayout/AdminLayout\";\r\nimport Axios from \"axios\";\r\nimport {Link} from 'react-router-dom';\r\nimport Cookie from 'universal-cookie';\r\nimport { Redirect } from \"react-router\";\r\n\r\nclass ProductManager extends Component{\r\n    state = {\r\n        mtServices: null,\r\n        isLogin: true\r\n    }\r\n    \r\n\r\n    componentDidMount(){\r\n        if(this.state.mtServices===null){\r\n            Axios.get(window.$domain + 'api/MTServices').then(\r\n                resp=>{\r\n                    this.setState({mtServices: resp.data});\r\n                }\r\n            ).catch(\r\n                err=>{\r\n                    alert('Page: Product Load =>'+ err)\r\n                }\r\n            )\r\n        }\r\n        var cookies = new Cookie();\r\n        if(cookies.get('logedInUser') === undefined)\r\n        {\r\n            this.setState({isLogin: false});\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <AdminLayout>\r\n                {/* {this.state.isLogin?'':<Redirect to='/login'/>} */}\r\n                <div className='jumbotron'>\r\n                    <h3>Manage Products/Schemes</h3>\r\n                    <div className='row m-1 overflow-auto'>\r\n                        <table className=\"table shadow table-bordered \">\r\n                            <thead>\r\n                                <tr >\r\n                                    <th>Id</th>\r\n                                    <th>Name</th>\r\n                                    <th>Total Amount</th>\r\n                                    <th>Details</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                            {\r\n                                this.state.mtServices?\r\n                                this.state.mtServices.map(service=>{\r\n                                    return  <tr>\r\n                                                <td>{service.id}</td>\r\n                                                <td>{service.name}</td>\r\n                                                <td>{service.amount}</td>\r\n                                                <td>{service.details}</td>\r\n                                            </tr>\r\n                                }):'we are loading data from server'\r\n                            }\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                    <Link className='btn btn-success shadow' to='/AddProduct' >\r\n                        Add More Product\r\n                    </Link>\r\n                </div>\r\n            </AdminLayout>\r\n\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default ProductManager;","const TbInput = props=>{\r\n    return(\r\n        <div class=\"form-group \">\r\n            <label for={props.name}>{props.Name}:</label>\r\n            <input  type={props.type} class=\"form-control\" onChange={props.DataInputHandler} name={props.Name}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TbInput;","import { Component } from \"react\";\r\nimport AdminLayout from \"../../../AdminLayout/AdminLayout\";\r\nimport Axios from \"axios\"\r\nimport TbInput from '../UI/TbInput'\r\nimport { Link } from \"react-router-dom\";\r\nimport { Redirect } from \"react-router\";\r\nclass AddNewProduct extends Component\r\n{\r\n    state = {\r\n        newProduct: {\r\n            id: 0,\r\n            name:'',\r\n            amount: 0,\r\n            details: ''            \r\n        },\r\n        redirect: false\r\n    }\r\n    inputHandler = event=>{\r\n        if(event.target.name === 'Scheme/Product Name')\r\n            this.handleName(event.target.value)\r\n            else if(event.target.name === 'Total Amount')\r\n                this.handleAmount(event.target.value)\r\n                else if(event.target.name === 'Add Details')\r\n                     this.handleDetails(event.target.value)\r\n    }\r\n\r\n    handleName = value =>{\r\n        this.setState({newProduct: {\r\n            id: 0,\r\n            name: value,\r\n            amount: this.state.newProduct.amount,\r\n            details: this.state.newProduct.details            \r\n        }})\r\n    }\r\n    \r\n    handleAmount = value =>{\r\n        this.setState({newProduct: {\r\n            id: 0,\r\n            name:  this.state.newProduct.name,\r\n            amount: value,\r\n            details: this.state.newProduct.details            \r\n        }})\r\n    }\r\n    \r\n    handleDetails = value =>{\r\n        this.setState({newProduct: {\r\n            id: 0,\r\n            name:  this.state.newProduct.name,\r\n            amount: this.state.newProduct.amount,\r\n            details:  value           \r\n        }})\r\n    }\r\n\r\n    postNewProduct = ()=>{\r\n        Axios.post(window.$domain + 'api/MTServices',this.state.newProduct).then(resp=>{\r\n            this.setState({redirect: true})\r\n        }).catch(err=>{\r\n            alert(err)\r\n        })\r\n    }\r\n    render(){\r\n        return  <AdminLayout>\r\n                    {\r\n                        this.state.redirect? <Redirect to='/products'/>:''\r\n                    }\r\n                    <div className='jumbotron'>\r\n                        <h3>Add New Product</h3>\r\n                        <TbInput DataInputHandler={this.inputHandler} Name='Scheme/Product Name' type='text'   />\r\n                        <TbInput DataInputHandler={this.inputHandler} Name='Total Amount' type='Number'   />\r\n                        <TbInput DataInputHandler={this.inputHandler} Name='Add Details' type='text'   />\r\n                        <Link className='btn btn-success' onClick={this.postNewProduct}>Add Product</Link>\r\n                    </div>\r\n                </AdminLayout>\r\n    }\r\n}\r\nexport default AddNewProduct;","import axios from \"axios\";\r\nimport { Component } from \"react\";\r\nimport { Redirect } from \"react-router\";\r\nimport AdminLayout from \"../../../AdminLayout/AdminLayout\";\r\nimport TbInputControl from '../../UserManagement/UI/TbInputControl';\r\nimport Cookie from 'universal-cookie';\r\n\r\n\r\nclass ModifyPayment extends Component{\r\n    state = {\r\n        amount: 0,\r\n        EntryDateTime: null,\r\n        redirect: false,\r\n        accDetailsId: 0,\r\n        isLogin: true\r\n    }\r\n    ReadyUser = event =>{\r\n        if(event.target.value > 0)\r\n            this.setState({amount: event.target.value})\r\n    }\r\n    postPaymnet= ()=>{\r\n        axios.get(window.$domain + 'api/AccDetails/' + this.props.match.params.id)\r\n        .then(resp=>{\r\n            var data = resp.data;\r\n            data.payedAmount = this.state.amount;\r\n            data.payingDate = this.state.EntryDateTime;\r\n            axios.put(window.$domain + 'api/AccDetails/' + this.props.match.params.id,data)\r\n            .then(modifiedResp=>{\r\n                \r\n                this.setState({accDetailsId: resp.data.accId});\r\n                this.setState({redirect: true});\r\n            });\r\n        })\r\n        .catch(err=>{\r\n            alert(err);\r\n        });\r\n    }\r\n    EntryDateTimeHandler = (event)=>{\r\n        this.setState({EntryDateTime: event.target.value});\r\n    }\r\n    componentDidMount(){\r\n        var cookies = new Cookie();\r\n        if(cookies.get('logedInUser') === undefined)\r\n        {\r\n            this.setState({isLogin: false});\r\n        }\r\n    }\r\n    render(){\r\n        return(\r\n                <AdminLayout>\r\n                    {this.state.isLogin?'':<Redirect to='/login'/>}\r\n                    <div className=\"jumbotron mt-3\">\r\n                    {\r\n                        this.state.redirect ? <Redirect to={'/Accounts/'+this.state.accDetailsId+'/Payment'} />: ''\r\n                    }\r\n                    <h3>Modify Payment</h3>\r\n                    <hr/>\r\n                        <label for=\"Entry\">Entry Date Time:--</label>\r\n                        <input onChange={this.EntryDateTimeHandler} type=\"datetime-local\" id=\"Entry\" name=\"Entry\"/>\r\n                        <TbInputControl DataInputHandler={this.ReadyUser} Name={'Payment'} inutType={'number'} ctrlName={'Add Payment'} />\r\n                        <button onClick={this.postPaymnet} className='btn btn-success'>Post Amount</button>\r\n                    </div>\r\n                </AdminLayout>\r\n        )\r\n    }\r\n}\r\nexport default ModifyPayment;","import { Component } from \"react\";\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass NavBar extends Component{\r\n    render(){\r\n        return(\r\n            <nav className=\" navbar-expand-lg navbar navbar-light bg-dark  py-3\" id=\"mainNav\">\r\n                <div className=\"container\">\r\n                    <Link to=\"/\" class=\"navbar-brand js-scroll-trigger\" >Shop</Link>\r\n                    <button className=\"navbar-toggler navbar-toggler-right\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarResponsive\" aria-controls=\"navbarResponsive\" aria-expanded=\"false\" aria-label=\"Toggle navigation\"><span className=\"navbar-toggler-icon\"></span></button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarResponsive\">\r\n                        <ul className=\"navbar-nav ml-auto my-2 my-lg-0\">\r\n                            <li className=\"nav-item\"><Link className=\"nav-link js-scroll-trigger\" to=\"/manageuser\">Goto Users</Link></li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        );   \r\n    } \r\n}\r\n\r\n\r\nexport default NavBar;","import React from 'react';\r\nimport ShopNavBar from '../NavBar/ShopNav';\r\nconst ShopAdminLayout = props =>{\r\n    return(\r\n        <>\r\n            <ShopNavBar/>\r\n            {props.children}\r\n        </>\r\n    );    \r\n}\r\n\r\nexport default ShopAdminLayout;","const HeaderBox= props=><div class=\"card  shadow h-30 py-1\">\r\n            <div class=\"card-body\">\r\n                <div class=\"row no-gutters align-items-center\">\r\n                    <div class=\"col mr-2\">\r\n                        <div class=\"text-xs font-weight-bold text-primary text-uppercase mb-1\">\r\n                            Current Amount</div>\r\n                        <div class=\"h5 mb-0 font-weight-bold text-gray-800\">PKR {props.currentAmount}/-</div>\r\n                    </div>\r\n                    <div class=\"col-auto\">\r\n                        <i class=\"fas fa-credit-card fa-2x text-gray-300\"></i>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n          </div>\r\n\r\nexport default HeaderBox;","\r\n\r\n\r\nconst PaymentHistory = (props) => {\r\n    var i= 0;\r\n    return (\r\n        <div>\r\n            <table className=\"table mt-2 shadow\">\r\n                <thead>\r\n                    <tr>\r\n                        <th scope=\"col\">No#</th>\r\n                        <th scope=\"col\">Title</th>\r\n                        <th scope=\"col\">Received</th>\r\n                        <th scope=\"col\">Paid</th>\r\n                        <th scope=\"col\" tooltip='Transection Date'>Transection Date Time</th>\r\n                        <th scope=\"col\">Description</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {props.accHistory.map(AccPayment=>{\r\n                        i+=1;\r\n                        return <tr>\r\n                        <td>{i}</td>\r\n                        <th scope=\"row\">{AccPayment.paymentTitle}</th>\r\n                        <td>{AccPayment.amountRecived}</td>\r\n                        <td>{AccPayment.amountPaid}</td>\r\n                        <td>{AccPayment.transectionDate}</td>\r\n                        <td>{AccPayment.paymentDescription}</td>\r\n                    </tr>\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PaymentHistory;","import { Component } from \"react\"\r\nimport { Jumbotron } from \"react-bootstrap\";\r\nimport ShopAdminLayout from \"../../AdminLayout/ShopAdminLayout\";\r\nimport HeaderBox from \"./HeaderBox/HeaderBox\";\r\nimport PaymentHistory from \"./PaymentHistory/PaymentHistory\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {goBack} from '../../../Assets/StaticFunc/UI';\r\nclass Shop extends Component\r\n{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state =  {\r\n            accHistory: [],\r\n            currentAmount: 0,\r\n            shopId: 0,\r\n            searchQuery: {\r\n                startDate: null,\r\n                endDate: null\r\n            }, \r\n            redirectToLogin: false,\r\n            propsDataMount: false\r\n        };\r\n        this.queryDataLoader = this.queryDataLoader.bind(this);\r\n    }\r\n    componentDidMount(){\r\n        if(this.state.accHistory.length === 0)\r\n        {\r\n            axios.get(window.$domain + 'api/ShopAccountPaymentHistories/GetShopAccountPaymentHistorybuUserId/' + this.props.match.params.id)\r\n            .then(resp=>{\r\n                this.setState({accHistory: resp.data});\r\n            }).catch(resp=>{\r\n                alert(resp);\r\n            });\r\n            \r\n        }\r\n    }\r\n    componentDidUpdate(){\r\n        if(this.state.propsDataMount === false){\r\n            axios.get(window.$domain + 'api/ShopAccounts/GetShopAccountByUserId/' + this.props.match.params.id)\r\n                .then(resp=>\r\n                    {\r\n                    this.setState({currentAmount: resp.data.currentPayment});\r\n                    this.setState({shopId: resp.data.id});\r\n                    this.setState({propsDataMount: true});\r\n                }).catch(resp=>{\r\n                    alert(resp.data.message);\r\n                });\r\n        }\r\n    }\r\n\r\n    searchByDateTime = (event)=>{\r\n        if(event.target.name === 'Start-Date'){\r\n            this.setState({searchQuery: {\r\n                startDate: new Date(event.target.value).toLocaleDateString(),\r\n                endDate: this.state.searchQuery.endDate\r\n            }});\r\n        }\r\n        if(event.target.name === 'End-Date'){\r\n            this.setState({searchQuery: {\r\n                startDate: this.state.searchQuery.startDate,\r\n                endDate: new Date(event.target.value).toLocaleDateString()\r\n            }});\r\n        }\r\n    }\r\n\r\n    queryDataLoader(){\r\n        if(this.state.searchQuery.startDate !== null && this.state.searchQuery.endDate !== null)\r\n        {\r\n            axios.get(window.$domain + 'api/ShopAccountPaymentHistories/SearchShopAccountPaymentHistorybuUserId/' \r\n                + this.props.match.params.id \r\n                + '?StartDate=' + this.state.searchQuery.startDate \r\n                + '&EndDate=' + this.state.searchQuery.endDate)\r\n            .then(\r\n                resp=>{\r\n                        this.setState({accHistory: resp.data});\r\n                }\r\n            ).catch(\r\n                err=> {\r\n                }\r\n            )\r\n        }\r\n        else alert('Check Start and End Date');\r\n}\r\n\r\n    render(){\r\n        return(<>\r\n                <ShopAdminLayout>\r\n                    <Jumbotron>\r\n                    {goBack(this.props.history)}\r\n                    <HeaderBox currentAmount= {this.state.currentAmount}/>\r\n                        <div className='row'>\r\n                            <div className='col-md-6'>\r\n                            <label for=\"StartMonth\">Start Date:</label>\r\n                            <input className='shadow form-control shadow' type=\"date\" id=\"StartMonth\" name=\"Start-Date\"\r\n                            defaultValue = '2021-10' onChange={this.searchByDateTime}></input>\r\n                            </div>\r\n                            <div className='col-md-6'>\r\n                                <label for=\"End-Month\">End Date:</label>\r\n                                <input className='shadow form-control shadow' type=\"date\" id=\"start\" name=\"End-Date\"\r\n                                    onChange={this.searchByDateTime}></input>\r\n                            </div>\r\n                        </div>\r\n                        <div className='row m-1'>\r\n                            <Link to={'/user/' +  this.props.match.params.id  +  '/shop/' + this.state.shopId + '/NewTransection'} className='shadow btn btn-danger m-1'>New Transaction <i  className=\"fa fa-file-invoice\" aria-hidden=\"true\"></i></Link>\r\n                            <button onClick={()=>{window.print()}} className='shadow btn btn-success m-1'>Print<i  className=\"fa fa-print\" aria-hidden=\"true\"></i></button>\r\n                            <button className='btn btn-light mt-1 shadow'  style={{marginLeft: 'auto', marginRight: '5px'}}\r\n                            onClick={this.queryDataLoader}>Search<i  className=\"fa fa-search \" aria-hidden=\"true\"></i></button>\r\n                        </div>\r\n                        <PaymentHistory accHistory={this.state.accHistory} />\r\n                    </Jumbotron> \r\n                </ShopAdminLayout>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Shop;","const TrensectionTypeCheckBoxs = (props)=>{\r\n    return <>\r\n            <form >\r\n                <div class=\"form-check-inline\">\r\n                    <label class=\"form-check-label\">\r\n                        <input  type=\"radio\" class=\"form-check-input\" name='T-Type' id=\"receive\" onClick={props.t_State} />On Amount Receive\r\n                    </label>\r\n                </div>\r\n                <div class=\"form-check-inline\">\r\n                    <label class=\"form-check-label\">\r\n                        <input type=\"radio\"  class=\"form-check-input\" name='T-Type' id=\"pay\" onClick={props.t_State} />On Amount Paid\r\n                    </label>\r\n                </div>\r\n            </form>\r\n        </>\r\n}\r\n\r\nexport default TrensectionTypeCheckBoxs","import { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport TbInput from '../../ProductManager/UI/TbInput';\r\nimport TransectionTypeCheckBoxs from './TransectionTypeCheckBoxs';\r\nimport Axios from 'axios';\r\nimport ShopAdminLayout from \"../../../AdminLayout/ShopAdminLayout\";\r\nimport { Redirect } from 'react-router';\r\nimport { goBack } from '../../../../Assets/StaticFunc/UI';\r\n \r\nclass NewTransection extends Component\r\n{\r\n    state= {\r\n            \"id\": 0,\r\n            \"paymentTitle\": \"\",\r\n            \"amountRecived\": 0,\r\n            \"amountPaid\": 0,\r\n            \"paymentDescription\": \"\",\r\n            \"transectionDate\": \"2021-09-15T15:12:00\",\r\n            \"shopAccountId\": this.props.match.params.shopId,\r\n            't_Type': 'receive',\r\n            redirectToBack: false\r\n        }\r\n    \r\n    inputHandler=(event)=>{\r\n        var ctrlName = event.target.name;\r\n        var value = event.target.value;\r\n        \r\n        if(ctrlName === 'Transection Title') this.setState({paymentTitle: value})\r\n        else if(ctrlName === 'Receiving Amount')this.setState({amountRecived: value})\r\n        else if(ctrlName === 'Paid Amount')this.setState({amountPaid: value})\r\n        else if(ctrlName === 'Transection Description')this.setState({paymentDescription: value})\r\n        else if(ctrlName === 'Transection Date Time' )this.setState({transectionDate: value})\r\n    }\r\n    \r\n    submitTransection = ()=>{\r\n        if(this.state.t_Type === 'pay'){\r\n            Axios.post(\r\n                window.$domain + 'api/ShopAccountPaymentHistories',\r\n                {\r\n                    \"id\": 0,\r\n                    \"paymentTitle\": this.state.paymentTitle,\r\n                    \"amountRecived\": 0,\r\n                    \"amountPaid\": this.state.amountPaid,\r\n                    \"paymentDescription\": this.state.paymentDescription,\r\n                    \"transectionDate\": this.state.transectionDate,\r\n                    \"shopAccountId\": this.state.shopAccountId\r\n                  }\r\n                ).then(resp=>{\r\n                    this.setState({redirectToBack: true});\r\n                })\r\n                .catch(\r\n                    err=>\r\n                    {\r\n                        alert(err.response.data);\r\n                    });\r\n        }\r\n        else if(this.state.t_Type === 'receive'){\r\n            Axios.post(window.$domain + 'api/ShopAccountPaymentHistories',\r\n                {\r\n                    \"id\": 0,\r\n                    \"paymentTitle\": this.state.paymentTitle,\r\n                    \"amountRecived\": this.state.amountRecived,\r\n                    \"amountPaid\": 0,\r\n                    \"paymentDescription\": this.state.paymentDescription,\r\n                    \"transectionDate\": this.state.transectionDate,\r\n                    \"shopAccountId\": this.props.match.params.shopId\r\n                  }).then(resp=>{\r\n                    this.setState({redirectToBack: true});\r\n                })\r\n                .catch(\r\n                    err=>\r\n                    {\r\n                        alert(err.response.data);\r\n                    });\r\n                }\r\n    }\r\n    setT_Type = (event)=>{\r\n        var ctrlName = event.target.id;\r\n        if(ctrlName === 'pay') this.setState({t_Type: 'pay'})\r\n        else if(ctrlName === 'receive') this.setState({t_Type: 'receive'})\r\n    }\r\n\r\n    render(){\r\n            return <ShopAdminLayout>\r\n                {this.state.redirectToBack? <Redirect to={'/user/'+ this.props.match.params.id +'/shop'} />:''}\r\n                <div className='jumbotron'>\r\n                    {goBack(this.props.history)}\r\n                <h3 style={{textAlign: 'center'}}>Create Transactions</h3>\r\n                <TransectionTypeCheckBoxs t_State={this.setT_Type} />\r\n                <TbInput DataInputHandler={this.inputHandler} Name='Transection Title' type='text' />\r\n                <TbInput DataInputHandler={this.inputHandler} Name='Receiving Amount' type='Number' />\r\n                <TbInput DataInputHandler={this.inputHandler} Name='Paid Amount' type='Number' />\r\n                <div class=\"form-group\">\r\n                    <label for=\"comment\">Transection Description:</label>\r\n                    <textarea onChange={this.inputHandler} class=\"form-control\" rows=\"2\" name='Transection Description' id=\"comment\"></textarea>\r\n                </div>\r\n                <TbInput DataInputHandler={this.inputHandler} Name='Transection Date Time' type='datetime-local'   />\r\n                <Link className='btn btn-success' onClick={this.submitTransection}>Submit</Link>\r\n            </div>\r\n            </ShopAdminLayout>\r\n    }\r\n}\r\nexport default NewTransection;","import { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport TbInput from '../../ProductManager/UI/TbInput';\r\nimport Axios from 'axios';\r\nimport ShopAdminLayout from \"../../../AdminLayout/ShopAdminLayout\";\r\nimport {Redirect} from 'react-router'\r\nimport {goBack} from '../../../../Assets/StaticFunc/UI';\r\nclass CreateShop extends Component\r\n{\r\n    state= {\r\n        \"id\": 1,\r\n        \"bankName\": \"\",\r\n        \"accountNo\": \"\",\r\n        \"isDefaulter\": false,\r\n        \"currentPayment\": 0,\r\n        \"userId\": this.props.match.params.id,\r\n        redirect: false,\r\n        responce: null\r\n    }\r\n    \r\n    inputHandler=(event)=>{\r\n        var ctrlName = event.target.name;\r\n        var value = event.target.value;\r\n        \r\n        if(ctrlName === 'Bank Name') this.setState({bankName: value})\r\n        else if(ctrlName === 'Account No')this.setState({accountNo: value})\r\n        else if(ctrlName === 'Start Amount')this.setState({currentPayment: value})\r\n    }\r\n    \r\n    submitTransection = ()=>{\r\n        Axios.post(\r\n            window.$domain + 'api/ShopAccounts',\r\n            {\r\n                \"id\": 0,\r\n                \"bankName\": this.state.bankName,\r\n                \"accountNo\": this.state.accountNo ,\r\n                \"isDefaulter\": this.state.isDefaulter,\r\n                \"currentPayment\": 0,\r\n                \"userId\": this.state.userId\r\n            })\r\n        .then(response=>{\r\n            if(this.state.currentPayment > 0){\r\n                Axios.post(\r\n                    window.$domain + 'api/ShopAccountPaymentHistories',\r\n                    {\r\n                        \"id\": 0,\r\n                        \"paymentTitle\": 'Add Stating Amount',\r\n                        \"amountRecived\": this.state.currentPayment,\r\n                        \"amountPaid\": 0,\r\n                        \"paymentDescription\": 'This is shop Account Starting Transaction',\r\n                        \"transectionDate\": new Date(),\r\n                        \"shopAccountId\": response.data.id\r\n                    }).catch(\r\n                        err=>\r\n                        {\r\n                            alert(err.response.data);\r\n                        });\r\n            }\r\n            else if(this.state.currentPayment < 0){\r\n                Axios.post(\r\n                    window.$domain + 'api/ShopAccountPaymentHistories',\r\n                    {\r\n                        \"id\": 0,\r\n                        \"paymentTitle\": 'Add Stating Amount',\r\n                        \"amountRecived\": 0,\r\n                        \"amountPaid\": this.state.currentPayment,\r\n                        \"paymentDescription\": 'This is shop Account Starting Transaction',\r\n                        \"transectionDate\": new Date(),\r\n                        \"shopAccountId\": response.data.id\r\n                    }\r\n                    )\r\n            .catch(\r\n                err=>\r\n                {\r\n                    alert(err.response.data);\r\n                });\r\n            }\r\n            this.setState({responce: response.data});\r\n            this.setState({redirect: true});\r\n        })   \r\n        .catch(\r\n            err=>\r\n            {\r\n                alert(err);\r\n            });\r\n    }\r\n    \r\n\r\n    render(){\r\n            return <ShopAdminLayout>\r\n                <div className='jumbotron'>\r\n                {goBack(this.props.history)}\r\n                    {this.state.responce? \r\n                        this.state.redirect? \r\n                            <Redirect to={'/user/'+ this.props.match.params.id + '/shop'} /> \r\n                            :'' :'' }\r\n                <h3 style={{textAlign: 'center'}}>Create Shop Account</h3>\r\n                <TbInput DataInputHandler={this.inputHandler} Name='Bank Name' type='text' />\r\n                <TbInput DataInputHandler={this.inputHandler} Name='Account No' type='text' />\r\n                <TbInput DataInputHandler={this.inputHandler} Name='Start Amount' type='Number' />\r\n                <Link className='btn btn-success' onClick={this.submitTransection}>Submit</Link>\r\n                </div>\r\n            </ShopAdminLayout>\r\n    }\r\n}\r\nexport default CreateShop;","//Library Imports\nimport { Route, Switch } from 'react-router';\n\n//All Css Imports\nimport './App.css';\n\n//Component Imports\nimport MTHome from './MalikTraders/MalikTraderApp';\nimport Login from './MalikTraders/Components/Pages/Login/Login'\nimport UserManagement from './MalikTraders/Components/Pages/UserManagement/UserManagement';\nimport AccountDetails from './MalikTraders/Components/Pages/AccountManagement/ShowAccountDetails';\nimport PaymentHistory from './MalikTraders/Components/Pages/AccountManagement/PaymentHistory/PaymentHistory';\nimport CreateNewUser from './MalikTraders/Components/Pages/UserManagement/CreateUser/CreateUser';\nimport AttachWithNewScheme from './MalikTraders/Components/Pages/UserManagement/AttachWithNewScheme/AttachtoNewScheme';\nimport ProductManager from './MalikTraders/Components/Pages/ProductManager/ProductManager'\nimport AddNewProduct from './MalikTraders/Components/Pages/ProductManager/AddNewProduct/AddNewProduct';\nimport ModifyPayment from './MalikTraders/Components/Pages/AccountManagement/ModifyPayment/ModifyPayment';\nimport Shop from './MalikTraders/Components/Pages/Shop/Shop';\nimport NewTransection from './MalikTraders/Components/Pages/Shop/NewTransection/NewTransection';\nimport CreateShop from './MalikTraders/Components/Pages/Shop/CreateShop/CreateShop';\n\nwindow.$domain = 'https://maliktraders20211011002845.azurewebsites.net/' //global variable\n//window.$domain = 'https://localhost:44302/' //global variable\n\n//Start \nfunction App() {\n  return (\n    <>\n      <Switch>\n        <Route path=\"/\" exact component={MTHome} />\n\n        <Route exact path='/login' component={Login} />\n\n        <Route path=\"/ManageUser\" exact component={UserManagement} />\n        <Route path=\"/ShowAccountDetails/:id\" component={AccountDetails} />\n        <Route path='/Accounts/:id/Payment' component={PaymentHistory} />\n        <Route exact path={'/CreateUser'} component={CreateNewUser}/>\n\n        <Route exact path='/User/:id/shop' component={Shop}/>\n        <Route exact path='/User/:id/Shop/:shopId/NewTransection' component={NewTransection} />\n        <Route exact path='/User/:id/Create-Shop-Account' component={CreateShop} />\n\n        <Route exact path='/Products'  component={ProductManager} />\n        <Route exact path='/AddProduct'  component={AddNewProduct} />\n        \n        \n        <Route path='/User/:id/AddtoNewScheme' exact component={AttachWithNewScheme} />\n        <Route path={'/Account/Payment/Modification/:id'} component={ModifyPayment}/>\n      </Switch>\n    </>\n  );\n}\n\n//Exports \nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const SIGNIN_USER = \"SIGNIN_USER\";\r\nexport const SIGNOUT_USER = \"SIGNOUT_USER\";","import Cookies from 'universal-cookie';\r\nimport * as ActionTypes from \"./ActionTypes\"\r\n\r\nconst initState = {\r\n    loggedinUser: {\r\n        email: \"\",\r\n        displayName: \"\",\r\n        pictureURL: \"\",\r\n        loggedinStatus: false\r\n    },\r\n};\r\n\r\n\r\nconst userReducer=(state = initState,action)=>{\r\n    const cookies = new Cookies();\r\n    const storedCookie = cookies.get('user');\r\n    if(storedCookie)\r\n        if(storedCookie.loggedinStatus)\r\n            return {\r\n                ...state,\r\n                loggedinUser: cookies.get('user')\r\n            };\r\n    cookies.set('user', state.loggedinUser , { path: '/' });\r\n    switch(action.type){\r\n        case ActionTypes.SIGNIN_USER:\r\n            cookies.set('user', action.payload , { path: '/' });\r\n            return{\r\n                ...state,\r\n                loggedinUser: action.payload\r\n            }\r\n        case ActionTypes.SIGNOUT_USER:\r\n            const SetEmptyUser = {\r\n                loggedinUser: {\r\n                    email: \"\",\r\n                    displayName: \"\",\r\n                    pictureURL: \"\",\r\n                    loggedinStatus: false\r\n                }\r\n            }\r\n            cookies.set('user', SetEmptyUser.loggedinUser  , { path: '/' });\r\n                return{\r\n                    ...state,\r\n                    loggedinUser: SetEmptyUser.loggedinUser\r\n                }\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport default userReducer;","import { applyMiddleware, createStore } from 'redux'\r\nimport userReducer from './User/Reducer'\r\n\r\nfunction logger({ getState }) {\r\n    return next => action => {\r\n  \r\n      // Call the next dispatch method in the middleware chain.\r\n      const returnValue = next(action)\r\n  \r\n  \r\n      // This will likely be the action itself, unless\r\n      // a middleware further in chain changed it.\r\n      return returnValue\r\n    }\r\n  }\r\n\r\nconst store =  createStore(userReducer,applyMiddleware(logger));\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport Store from './Store/Store'\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={Store}>\n        <App />\n      </Provider>\n      </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}