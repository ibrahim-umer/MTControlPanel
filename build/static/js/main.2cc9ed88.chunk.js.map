{"version":3,"sources":["MalikTraders/Components/Pages/AccountManagement/UI/CardStyling.module.css","MalikTraders/Components/NavBar/NavBar.jsx","MalikTraders/Components/AdminLayout/AdminLayout.jsx","MalikTraders/Components/DashBoard/DashBoardNavigator/DashBoardNavigator.jsx","MalikTraders/Components/DashBoard/TodayRecovery/TodayRecovery.jsx","MalikTraders/Components/DashBoard/MonthlyRecoveryReport/MonthlyRecoveryReport.jsx","MalikTraders/Components/DashBoard/MonthlyReport/MonthlyReportChart.jsx","MalikTraders/Components/DashBoard/MonthlyReport/MonthlyReport.jsx","MalikTraders/Components/DashBoard/MainDashBoard.jsx","MalikTraders/MalikTraderApp.jsx","MalikTraders/Components/Pages/Login/Login.jsx","MalikTraders/Components/Pages/UserManagement/UserList/AllUserList.jsx","MalikTraders/Components/Pages/UserManagement/UserManagement.jsx","MalikTraders/Components/Pages/UserManagement/UI/TbInputControl.jsx","MalikTraders/Components/Pages/UserManagement/AddNewPayment/AddNewPayment.jsx","MalikTraders/Components/Pages/AccountManagement/DisplayPaymentDetails/PaymentDetails.jsx","MalikTraders/Components/Pages/AccountManagement/UI/AccountCard.jsx","MalikTraders/Components/Pages/AccountManagement/ShowAccountDetails.jsx","MalikTraders/Components/Pages/AccountManagement/PaymentHistory/PaymentHistory.jsx","MalikTraders/Components/Pages/UserManagement/CreateUser/CreateUser.jsx","MalikTraders/Components/Pages/UserManagement/AttachWithNewScheme/AttachtoNewScheme.jsx","MalikTraders/Components/Pages/ProductManager/ProductManager.jsx","MalikTraders/Components/Pages/ProductManager/UI/TbInput.jsx","MalikTraders/Components/Pages/ProductManager/AddNewProduct/AddNewProduct.jsx","MalikTraders/Components/Pages/AccountManagement/ModifyPayment/ModifyPayment.jsx","MalikTraders/Components/NavBar/ShopNav.jsx","MalikTraders/Components/AdminLayout/ShopAdminLayout.jsx","MalikTraders/Components/Pages/Shop/HeaderBox/HeaderBox.jsx","MalikTraders/Components/Pages/Shop/PaymentHistory/PaymentHistory.jsx","MalikTraders/Components/Pages/Shop/Shop.jsx","MalikTraders/Components/Pages/Shop/NewTransection/TransectionTypeCheckBoxs.jsx","MalikTraders/Components/Pages/Shop/NewTransection/NewTransection.jsx","MalikTraders/Components/Pages/Shop/CreateShop/CreateShop.jsx","App.js","reportWebVitals.js","Store/User/ActionTypes.js","Store/User/Reducer.js","Store/Store.js","index.js"],"names":["module","exports","NavBar","className","id","to","class","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","aria-haspopup","aria-labelledby","Component","AdminLayout","props","children","DashBoardNavigator","active","inActive","onClick","menuSwitchingHandler","currentMenu","TodayRecovery","state","dataArray","recoverySum","loadData","axios","get","window","$domain","then","resp","setState","data","map","payed_Amount","this","length","name","phone","scheme","pay_Time","accId","MonthlyRemainRecovery","dataLoader","event","Date","target","value","toDateString","min","defaultValue","onChange","MonthlyReportChart","width","height","chartType","loader","options","title","vAxis","hAxis","seriesType","series","6","rootProps","MonthlyReport","MainDashBoard","menuSwitcher","menuSwitchHandler","menu","MTTraderApp","useState","isLogin","setLogin","undefined","Cookie","style","Login","loginUser","displayAnimator","Axios","post","user","password","role","alert","set","userName","email","path","maxAge","login","catch","err","message","bind","history","goBack","textAlign","aria-hidden","onSubmit","Spinner","animation","alignContent","UserList","LoadUserList","userList","userResp","accResp","newArray","shopAcc","push","userId","isAcc","console","log","UserEnableandDisableHandler","confirm","getAccState","is","i","gender","phoneNumber","cnic","lastLogin","toLocaleTimeString","registration_Date","isUserDisabled","UserManagement","TbInputControl","for","ctrlName","Name","inutType","DataInputHandler","AddNewPayment","amount","redirect","ReadyUser","postPaymnet","cookies","Accid","PaymentDetails","IsReadyforPayment","setIsReadyforPayment","peymentHistory","payment","payingDate","payedAmount","AccId","styles","AccountCard","showToast","setShowtoast","toast","closingReason","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","schemeName","desc","isAccClosed","paymentDisplayHandler","gotoPaymentHistory","disableAcc","enableAcc","zoom","AccountDetails","gotoHistoryPaymentRedirectHandler","gotoHistoryPaymentRedirect","redir","AccountEnableHandler","ClosingDescription","prompt","put","Accounts","AccountDisableHandler","Account","DisplayAcc","accPaymentDetails","Schemes","match","params","Scheme","mtServiceId","details","closingDescription","PaymentHistory","printModeHandler","goneToPrint","searchByDateTime","searchQuery","startDate","toLocaleDateString","endDate","historyList","queryExecuted","queryDataLoader","postedByUserId","arrayHistory","payDate","paymentId","PostedByUser","backToAppMode","isPrintable","paymentHistoryList","AccID","marginLeft","marginRight","DisplayHistory","sum","updateComponent","print","printPage","cursor","color","backgroundColor","CreateNewUser","setFullName","setUserName","setGender","setEmail","setPassword","setCNIC","setAddress","setPhoneNumber","userDetails","address","setUserType","CreatNewUser","response","MTServices","amountInputRef","React","createRef","selected","AttachWithNewScheme","TotalAmountPayable","MonthlyInstallment","AccProtoType","monthlyInstalment","userid","amountPayable","PostData","duplicated","acc","MTServiceSelection","mtService","MTService","ref","ProductManager","mtServices","service","TbInput","AddNewProduct","newProduct","inputHandler","handleName","handleAmount","handleDetails","postNewProduct","ModifyPayment","EntryDateTime","accDetailsId","modifiedResp","EntryDateTimeHandler","ShopAdminLayout","ShopNav","HeaderBox","currentAmount","scope","tooltip","accHistory","AccPayment","paymentTitle","amountRecived","amountPaid","transectionDate","paymentDescription","Shop","shopId","redirectToLogin","currentPayment","Jumbotron","TrensectionTypeCheckBoxs","t_State","NewTransection","redirectToBack","submitTransection","t_Type","shopAccountId","setT_Type","TransectionTypeCheckBoxs","rows","CreateShop","responce","bankName","accountNo","isDefaulter","App","exact","component","MTHome","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","SIGNIN_USER","SIGNOUT_USER","initState","loggedinUser","displayName","pictureURL","loggedinStatus","userReducer","action","Cookies","storedCookie","ActionTypes","payload","SetEmptyUser","store","createStore","applyMiddleware","getState","next","returnValue","ReactDOM","render","StrictMode","Store","document","getElementById"],"mappings":"wGACAA,EAAOC,QAAU,CAAC,KAAO,4B,+LCiCVC,E,uKA9BP,OACI,qBAAKC,UAAU,sDAAsDC,GAAG,UAAxE,SACI,sBAAKD,UAAU,YAAf,UACI,cAAC,IAAD,CAAME,GAAG,IAAIC,MAAM,iCAAnB,iCACA,wBAAQH,UAAU,sCAAsCI,KAAK,SAASC,cAAY,WAAWC,cAAY,oBAAoBC,gBAAc,mBAAmBC,gBAAc,QAAQC,aAAW,oBAA/L,SAAmN,sBAAMT,UAAU,0BACnO,qBAAKA,UAAU,2BAA2BC,GAAG,mBAA7C,SACI,qBAAID,UAAU,kCAAd,UACI,oBAAIA,UAAU,WAAd,SAAyB,cAAC,IAAD,CAAMA,UAAU,6BAA6BE,GAAG,IAAhD,oBAEzB,qBAAIF,UAAU,oBAAd,UACI,cAAC,IAAD,CAAMA,UAAU,2BAA4BC,GAAG,yBAAyBI,cAAY,WAAWK,gBAAc,OAAOF,gBAAc,QAAlI,kBAGA,sBAAKR,UAAU,gBAAgBW,kBAAgB,yBAA/C,UACI,cAAC,IAAD,CAAMX,UAAU,gBAAiBE,GAAG,cAApC,4BACA,cAAC,IAAD,CAAMF,UAAU,gBAAgBE,GAAG,cAAnC,6BACA,cAAC,IAAD,CAAMF,UAAU,yBAAhB,wCAGR,oBAAIA,UAAU,WAAd,SAAyB,cAAC,IAAD,CAAMA,UAAU,6BAA6BE,GAAG,YAAhD,sC,GArBhCU,aCSNC,EATK,SAAAC,GAChB,OACI,qCACI,cAAC,EAAD,IACCA,EAAMC,a,QCeJC,EAlBY,SAACF,GACxB,IAAIG,EAAS,kBACTC,EAAW,WACf,OACI,qBAAIlB,UAAU,2BAAd,UACI,oBAAIA,UAAU,WAAd,SACI,cAAC,IAAD,CAAMmB,QAAW,kBAAIL,EAAMM,qBAAqB,IAAIpB,UAAiC,IAAtBc,EAAMO,YAAoBJ,EAASC,EAAlG,sCAEJ,oBAAIlB,UAAU,WAAd,SACI,cAAC,IAAD,CAAMmB,QAAW,kBAAIL,EAAMM,qBAAqB,IAAKpB,UAAiC,IAAtBc,EAAMO,YAAoBJ,EAASC,EAAnG,oCAEJ,oBAAIlB,UAAU,WAAd,SACI,cAAC,IAAD,CAAMmB,QAAW,kBAAIL,EAAMM,qBAAqB,IAAIpB,UAAiC,IAAtBc,EAAMO,YAAoBJ,EAASC,EAAlG,wC,gBC6DDI,E,4MArEXC,MAAO,CACHC,UAAW,GACXC,YAAa,G,EAGjBC,SAAW,WACPC,IAAMC,IAAIC,OAAOC,QAAU,kCAC1BC,MAAK,SAAAC,GACF,EAAKC,SAAS,CAACT,UAAWQ,EAAKE,OAC/B,EAAKX,MAAMC,UAAUW,KACnB,SAAAD,GACE,EAAKD,SAAS,CAACR,YAAa,EAAKF,MAAME,YAAcS,EAAKE,sB,kEAM/B,IAAhCC,KAAKd,MAAMC,UAAUc,QACxBD,KAAKX,a,+BAKL,OAAO,qCACL,qBAAKvB,MAAM,yBAAX,SACE,qBAAKA,MAAM,YAAX,SACI,sBAAKA,MAAM,oCAAX,UACI,sBAAKA,MAAM,WAAX,UACI,qBAAKA,MAAM,4DAAX,mCAEA,sBAAKA,MAAM,yCAAX,gBAAwD,IAAIkC,KAAKd,MAAME,kBAE3E,qBAAKtB,MAAM,WAAX,SACI,mBAAGA,MAAM,iDAKvB,wBAAOA,MAAM,8BAAb,UACE,gCACE,+BACE,6CACA,uCACA,8CACA,6CACA,8CACA,mDAGJ,gCAEsC,IAAhCkC,KAAKd,MAAMC,UAAUc,OAAeD,KAAKd,MAAMC,UAAUW,KACvD,SAAAD,GACA,OAAQ,+BACM,6BAAKA,EAAKK,OACV,6BAAKL,EAAKM,QACV,6BAAKN,EAAKE,eACV,6BAAKF,EAAKO,SACV,6BAAKP,EAAKQ,WACV,6BAAI,cAAC,IAAD,CAAMxC,GAAI,aAAcgC,EAAKS,MAAO,WAApC,0BAEnB,e,GA/DS/B,aCsDbgC,E,4MApDXrB,MAAO,CACHC,UAAW,I,EAGfE,SAAW,WACPC,IAAMC,IAAIC,OAAOC,QAAU,kDAC1BC,MAAK,SAAAC,GACF,EAAKC,SAAS,CAACT,UAAWQ,EAAKE,W,EAOvCW,WAAY,SAAAC,GAEVnB,IAAMC,IAAIC,OAAOC,QAAU,gDAAkD,IAAIiB,KAAKD,EAAME,OAAOC,OAAOC,gBACvGnB,MAAK,SAAAC,GACF,EAAKC,SAAS,CAACT,UAAWQ,EAAKE,W,kEAPA,IAAhCG,KAAKd,MAAMC,UAAUc,QACxBD,KAAKX,a,+BAUL,OAAO,qCACG,uBAAO1B,UAAU,2BAA2BI,KAAK,QAAQH,GAAG,QAAQsC,KAAK,QACzEY,IAAI,UAAUC,aAAe,UAAUC,SAAUhB,KAAKQ,aAEtD,wBAAO1C,MAAM,8BAAb,UACE,gCACE,+BACE,6CACA,uCACA,6CACA,mDAGJ,gCAEsC,IAAhCkC,KAAKd,MAAMC,UAAUc,OAAeD,KAAKd,MAAMC,UAAUW,KACvD,SAAAD,GAAI,OAAI,+BACI,6BAAKA,EAAKK,OACV,6BAAKL,EAAKM,QACV,6BAAKN,EAAKO,SACV,6BAAI,cAAC,IAAD,CAAMvC,GAAI,aAAcgC,EAAKS,MAAO,WAApC,0BAEjB,e,GA9CS/B,a,QC+BrB0C,EA/BY,SAAAxC,GACvB,OACI,cAAC,IAAD,CACIyC,MAAO,QACPC,OAAQ,QACRC,UAAU,aACVC,OAAQ,gDACRxB,KAAM,CACF,CACA,QACA,SACA,QAEA,CAAC,MAAO,GAAI,KACZ,CAAC,MAAO,GAAI,KACZ,CAAC,MAAO,GAAI,KACZ,CAAC,MAAO,GAAI,MAEhByB,QAAS,CACLC,MAAO9C,EAAM8C,MACbC,MAAO,CAAED,MAAO,iBAChBE,MAAO,CAAEF,MAAO,YAChBG,WAAY,OACZC,OAAQ,CAAEC,EAAG,CAAE7D,KAAM,UAEzB8D,UAAW,CAAE,cAAe,QCVzBC,EAfO,SAAArD,GAClB,OACI,qCACA,8CACI,cAAC,EAAD,CACA8C,MAAM,8CAEN,cAAC,EAAD,CACAA,MAAM,kECmBFQ,E,4MAzBZ7C,MAAQ,CACJ8C,aAAc,G,EAElBC,kBAAoB,SAAAC,GAChB,EAAKtC,SAAS,CAACoC,aAAcE,K,uDAG7B,OACI,qCACI,qBAAKvE,UAAU,WAAf,SACI,cAAC,EAAD,CAAoBqB,YAAagB,KAAKd,MAAM8C,aAAcjD,qBAAsBiB,KAAKiC,sBAEzF,qBAAKtE,UAAU,WAAf,SAEoC,IAA5BqC,KAAKd,MAAM8C,aAAoB,cAAC,EAAD,IACF,IAA5BhC,KAAKd,MAAM8C,aAAoB,cAAC,EAAD,IACH,IAA5BhC,KAAKd,MAAM8C,aAAoB,cAAC,EAAD,IAC9B,Y,GAlBEzD,aCoBb4D,EAnBK,WAAM,IAAD,EACIC,oBAAS,GADb,mBAChBC,EADgB,KACRC,EADQ,KAOrB,YAJkCC,KADpB,IAAIC,KACPjD,IAAI,iBAA4C,IAAZ8C,GAC3CC,GAAS,GAIT,mCACI,eAAC,EAAD,WACKD,EAAQ,GAAG,cAAC,IAAD,CAAUxE,GAAG,WACzB,qBAAKF,UAAU,mDAAmD8E,MAAO,CAACtB,OAAQ,SAAlF,SACI,cAAC,EAAD,Y,gBCoGLuB,E,kDA9GX,WAAYjE,GAAQ,IAAD,8BACf,cAAMA,IAUVkE,UAAU,WACN,EAAK/C,SAAS,CAACgD,iBAAiB,IAChCC,IAAMC,KAAKtD,OAAOC,QAAU,gCAAiC,EAAKP,MAAM6D,KAAO,aAAc,EAAK7D,MAAM8D,UACvGtD,MAAK,SAAAC,GACoB,UAAnBA,EAAKE,KAAKoD,MAKbJ,IAAMC,KAAKtD,OAAOC,QAAU,8BAA+BE,EAAKE,KAAKjC,IAChE8B,MACG,SAAAC,GAGIkD,IAAMC,KAAKtD,OAAOC,QAAU,mCAAoCE,EAAKE,MACpEH,MACG,SAAAC,GAEIuD,MAAM,yCAGZ,IAAIV,KACVW,IAAI,cAAe,CACvBC,SAAUzD,EAAKE,KAAKuD,SACpBC,MAAO1D,EAAKE,KAAKwD,MACjBJ,KAAMtD,EAAKE,KAAKoD,KAChBrF,GAAI+B,EAAKE,KAAKjC,IAEd,CACA0F,KAAM,IACNC,OAAQ,OAEV,EAAK3D,SAAS,CAAC4D,OAAO,IACtB,EAAK5D,SAAS,CAACgD,iBAAiB,KA3B9BM,MAAM,yDA6BbO,OACG,SAAAC,GACOA,GACHR,MAAMQ,EAAIC,QAAU,yDACpB,EAAK/D,SAAS,CAACgD,iBAAiB,QAhDxC,EAAK1D,MAAQ,CACT6D,KAAM,GACNC,SAAU,GACVQ,OAAO,EACPZ,iBAAiB,GAEzB,EAAKD,UAAY,EAAKA,UAAUiB,KAAf,gBARE,E,qEAuDmBrB,KADpB,IAAIC,KACPjD,IAAI,iBAAqD,IAArBS,KAAKd,MAAMsE,OACtDxD,KAAKJ,SAAS,CAAC4D,OAAO,M,+BAGrB,IAAD,OACJ,OACI,sBAAK7F,UAAU,iBAAiB8E,MAAO,CAACvB,MAAO,OAA/C,UACKlB,KAAKd,MAAMsE,MAAOxD,KAAKvB,MAAMoF,QAAQC,SAAS,GAC/C,sBAAKnG,UAAU,MAAf,UACI,qBAAKA,UAAU,sBACf,sBAAKA,UAAU,8BAAf,UAEI,qBAAKA,UAAU,yBAAf,SAEI,oBAAG8E,MAAO,CAACsB,UAAW,UAAtB,UACI,mBAAGpG,UAAU,YAAYqG,cAAY,SADzC,cAKJ,qBAAKrG,UAAU,uBAAf,SACI,qBAAKA,UAAU,uBAAf,SACI,uBAAMsG,UAAQ,EAAd,UACI,sBAAKtG,UAAU,aAAf,UACI,uBAAOA,UAAU,qBAAjB,sBACA,uBAAOqD,SAAU,SAAAP,GAAK,OAAG,EAAKb,SAAS,CAACmD,KAAMtC,EAAME,OAAOC,SAAS7C,KAAK,OAAOJ,UAAU,oBAE9F,sBAAKA,UAAU,aAAf,UACI,uBAAOA,UAAU,qBAAjB,sBACA,uBAAOqD,SAAU,SAAAP,GAAK,OAAG,EAAKb,SAAS,CAACoD,SAAUvC,EAAME,OAAOC,SAAS7C,KAAK,WAAWJ,UAAU,oBAEtG,qBAAKA,UAAU,sBAAf,SAEQqC,KAAKd,MAAM0D,gBAAkB,cAACsB,EAAA,EAAD,CAASC,UAAU,SAC9C,qBAAKxG,UAAU,kCAAf,SACE,wBAAQmB,QAASkB,KAAK2C,UAAWhF,UAAU,oCAAoC8E,MAAO,CAAC2B,aAAc,UAArG,8BAUxB,qBAAKzG,UAAU,mC,GApGnBY,aCsKL8F,E,kDAxKX,WAAY5F,GAAQ,IAAD,8BACf,cAAMA,IAQT6F,aAAa,SAAC7D,QACE8B,IAAV9B,EACHoC,IAAMtD,IAAIC,OAAOC,QAAU,aAAaC,MACpC,SAAAC,GACI,EAAKC,SAAS,CAAC2E,SAAU,KACzB,EAAK3E,SAAS,CAAC2E,SAAU5E,EAAKE,OAC9BF,EAAKE,KAAKC,KACN,SAAA0E,GACI3B,IAAMtD,IAAIC,OAAOC,QAAU,8CAAgD+E,EAAS5G,IACnF8B,MAAK,SAAA+E,GACF,IAAIC,EAAW,EAAKxF,MAAMyF,QAC1BD,EAASE,KAAK,CAACC,OAAQL,EAAS5G,GAAGkH,MAAOL,EAAQ5E,OAClD,EAAKD,SAAS,CAAC+E,QAASD,OAE3BjB,OAAM,SAAA9D,GAAI,OAAEA,EAAKE,KAAK8D,iBAIrCF,OACE,SAAAC,GACIR,MAAM,qBAAqBQ,MAGL,iBAAtBjD,EAAME,OAAOT,MAAkD,KAAvBO,EAAME,OAAOC,MACzDiC,IAAMtD,IAAIC,OAAOC,QAAU,8BAAgCgB,EAAME,OAAOC,OACxElB,MACI,SAAAC,GACI,EAAKC,SAAS,CAAC2E,SAAU5E,EAAKE,UAEpC4D,OACE,SAAAC,GACIR,MAAM,uBAAuBQ,MAIX,iBAAtBjD,EAAME,OAAOT,MAAkD,KAAvBO,EAAME,OAAOC,OACzDiC,IAAMtD,IAAIC,OAAOC,QAAU,8BAAgCgB,EAAME,OAAOC,OACxElB,MACI,SAAAC,GACI,EAAKC,SAAS,CAAC2E,SAAU5E,EAAKE,UAEpC4D,OACE,SAAAC,GACIR,MAAM,uBAAuBQ,MAIzCqB,QAAQC,IAAI,EAAK9F,MAAMyF,UAxDR,EA0DnBM,4BAA8B,SAACJ,GAExBrF,OAAO0F,QAAQ,2GAEdrC,IAAMC,KAAKtD,OAAOC,QAAU,gDAAkDoF,GACzEnF,MAAK,SAAAC,GACFoF,QAAQC,IAAIrF,GACZ,EAAK2E,kBAERb,OAAM,SAAA9D,GAAI,OAAGoF,QAAQC,IAAIrF,OAnEnB,EA6EnBwF,YAAY,SAAAN,GAET,IADC,IAAIO,EAAI,KACAC,EAAG,EAAEA,EAAE,EAAKnG,MAAMyF,QAAQ1E,OAAOoF,IACrC,GAAG,EAAKnG,MAAMyF,QAAQU,GAAGR,SAAWA,EACpC,CACIO,EAAG,EAAKlG,MAAMyF,QAAQU,GAAGP,MACzB,MAGT,OAAOM,GApFN,EAAKlG,MAAQ,CACXqF,SAAU,GACVI,QAAS,IAEf,EAAKL,aAAe,EAAKA,aAAaV,KAAlB,gBAND,E,gEAyEmB,IAA/B5D,KAAKd,MAAMqF,SAAStE,QACvBD,KAAKsE,iB,+BAcA,IAAD,OACJ,OACI,sBAAK3G,UAAU,0CAAf,UACG,sBAAKA,UAAU,WAAf,UACK,sBAAKG,MAAM,kBAAX,UACI,2DACA,uBAAQC,KAAK,OAAOD,MAAM,sBAAsBkD,SAAUhB,KAAKsE,aAAcpE,KAAK,oBAEtF,sBAAKpC,MAAM,kBAAX,UACI,oDACA,uBAAQC,KAAK,OAAOD,MAAM,sBAAsBkD,SAAUhB,KAAKsE,aAAcpE,KAAK,uBAG1F,uCACA,qBAAKvC,UAAU,+BAAf,SACA,wBAAOA,UAAU,yBAAjB,UACI,gCACI,+BACI,2CACA,sCACA,sCACA,kDACA,mDACA,2CACA,wCACA,2CACA,uCACA,8CACA,sCACA,sEACA,4EACA,mDAGR,gCAEQqC,KAAKd,MAAMqF,SAAStE,OAAS,EAC7BD,KAAKd,MAAMqF,SAASzE,KAAI,SAAAiD,GACpB,IAAI+B,EAAM,EAAKK,YAAYpC,EAAKnF,IAEhC,OAAO,+BACH,6BAAKmF,EAAKnF,KACV,6BAAKmF,EAAKE,OACV,6BAAKF,EAAK7C,OACV,6BACiB,UAAZ6C,EAAKE,KAAe,GAAG,cAAC,IAAD,CAAMpF,GAAI,uBAAwBkF,EAAKnF,GAAvC,oBAE5B,6BACiB,UAAZmF,EAAKE,KAAe,GAAG,cAAC,IAAD,CAAMpF,GAAI,SAAUkF,EAAKnF,GAAK,kBAA9B,mBAE5B,6BACmB,UAAdmF,EAAKE,KAAmB6B,EACzB,cAAC,IAAD,CAAMjH,GAAI,SAAUkF,EAAKnF,GAAG,QAA5B,gBACA,cAAC,IAAD,CAAMC,GAAI,SAAWkF,EAAKnF,GAAK,uBAA/B,oBACC,KAEL,6BAAKmF,EAAKuC,SACV,6BAAKvC,EAAKK,WACV,6BAAKL,EAAKM,QACV,6BAAKN,EAAKwC,cACV,6BAAKxC,EAAKyC,OACV,6BAAK,IAAI9E,KAAKqC,EAAK0C,WAAW5E,eAAiB,IAC5C,IAAIH,KAAKqC,EAAK0C,WAAWC,uBAC5B,6BAAK,IAAIhF,KAAKqC,EAAK4C,mBAAmB9E,iBACtC,oBAAI/B,QAAS,kBAAK,EAAKmG,4BAA4BlC,EAAKnF,KAAxD,SACKmF,EAAK6C,eACN,mBAAI9H,MAAM,aAAakG,cAAY,SACnC,mBAAGlG,MAAM,cAAckG,cAAY,aA3B3BjB,EAAKnF,OA8BrB,cAACsG,EAAA,EAAD,CAASC,UAAU,uB,GA/J5B5F,aCgBRsH,EAfQ,WAAK,IAAD,EACEzD,oBAAS,GADX,mBAClBC,EADkB,KACVC,EADU,KAOvB,YAJkCC,KADpB,IAAIC,KACPjD,IAAI,iBAA4C,IAAZ8C,GAC3CC,GAAS,GAIT,eAAC,EAAD,WACKD,EAAQ,GAAG,cAAC,IAAD,CAAUxE,GAAG,WACzB,cAAC,EAAD,QCPGiI,EATQ,SAAArH,GACnB,OACI,sBAAKX,MAAM,cAAX,UACI,wBAAOiI,IAAKtH,EAAMuH,SAAlB,UAA6BvH,EAAMwH,KAAnC,OACA,uBAAQlI,KAAMU,EAAMyH,SAAUpI,MAAM,eAAekD,SAAUvC,EAAM0H,iBAAkBjG,KAAMzB,EAAMuH,eC6C9FI,E,4MA1CXlH,MAAQ,CACJmH,OAAQ,EACRC,UAAU,G,EAEdC,UAAY,SAAA9F,GACLA,EAAME,OAAOC,MAAQ,GACpB,EAAKhB,SAAS,CAACyG,OAAQ5F,EAAME,OAAOC,S,EAE5C4F,YAAa,WACT,IAAIC,EAAU,IAAIjE,IAClBlD,IAAMwD,KACFtD,OAAOC,QAAU,iBACjB,CACI,GAAM,EACN,YAAe,EAAKP,MAAMmH,OAC1B,WAAc,2BACd,MAAS,EAAK5H,MAAMiI,MACpB,eAAkBD,EAAQlH,IAAI,eAAe3B,KAEnD8B,MACE,SAAAC,GACIoF,QAAQC,IAAIrF,GACZ,EAAKC,SAAS,CAAC0G,UAAU,Q,uDAKjC,OACQ,sBAAK3I,UAAU,iBAAf,UAEQqC,KAAKd,MAAMoH,SAAW,cAAC,IAAD,CAAUzI,GAAI,aAAamC,KAAKvB,MAAMiI,MAAM,aAAgB,GAEtF,6CACA,uBACA,oGACA,uBACA,cAAC,EAAD,CAAgBP,iBAAkBnG,KAAKuG,UAAWN,KAAM,UAAWC,SAAU,SAAUF,SAAU,gBACjG,wBAAQlH,QAASkB,KAAKwG,YAAa7I,UAAU,kBAA7C,gC,GAtCQY,aCuCboI,EAvCQ,SAAAlI,GAAQ,IAAD,EACqB2D,oBAAS,GAD9B,mBACrBwE,EADqB,KACHC,EADG,OAEDzE,oBAAS,GAFR,mBAErBC,EAFqB,KAEbC,EAFa,KAO1B,YAHkCC,KADpB,IAAIC,KACPjD,IAAI,iBAA4C,IAAZ8C,GAC3CC,GAAS,GAGT,sBAAK3E,UAAU,0CAAf,UACK0E,EAAQ,GAAG,cAAC,IAAD,CAAUxE,GAAG,WAEzB,wBAAOF,UAAU,8BAAjB,UACI,gCACI,+BACI,sCACA,8CAGR,gCAEQc,EAAMqI,eAAehH,KAAI,SAAAiH,GACrB,OAAO,+BACK,6BAAK,IAAIrG,KAAKqG,EAAQC,YAAYnG,iBAClC,6BAAKkG,EAAQE,yBAOzC,wBAAQnI,QAAS,kBAAyB+H,GAApBD,IAA6EjJ,UAAU,kBAA7G,6BAEoB,IAAhBc,EAAMyI,OAAeN,EACrB,cAAC,EAAD,CAAeF,MAASjI,EAAMyI,QAAW,O,iCClCvDnC,QAAQC,IAAImC,KACd,IA2BeC,EA3BI,SAAA3I,GAAS,IAAD,EACQ2D,oBAAS,GADjB,mBAClBiF,EADkB,KACRC,EADQ,KAEDC,YAAM9I,EAAM+I,cAAe,CACjBC,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUxF,IAE1C,OACI,sBAAKzE,MAAM,kBAAkB2E,MAAO,CAACvB,MAAO,SAA5C,UACKmG,EAAW,cAAC,IAAD,IAAmB,GAC/B,sBAAKvJ,MAAM,YAAX,UACI,oBAAIA,MAAM,aAAV,SAAwBW,EAAMuJ,aAC9B,mBAAGlK,MAAM,YAAT,SAAsBW,EAAMwJ,OAC3BxJ,EAAMyJ,YAAa,GAAG,wBAAQpJ,QAAS,kBAAIL,EAAM0J,sBAAsB1J,EAAMyI,QAAQpJ,MAAM,kBAArE,6BACvB,wBAAQgB,QAAS,WAAKL,EAAM2J,mBAAmB3J,EAAMyI,QAASvJ,UAAU,oBAAxE,0BACCc,EAAMyJ,YAAa,GAAI,wBAAQpJ,QAAS,WAAKL,EAAM4J,WAAW5J,EAAMyI,QAASvJ,UAAU,sBAAhE,6BACvBc,EAAMyJ,YAAY,wBAAQpJ,QAAS,kBAAIwI,GAAcD,IAAY1J,UAAU,uBAAzD,yBAAsG,MAE5Hc,EAAMyJ,YAAa,uBAAMpJ,QAASL,EAAMyJ,YAAY,kBAAIzJ,EAAM6J,UAAU7J,EAAMyI,QAAO,GAAIpJ,MAAO,sBAAwBqJ,IAAOoB,KAA5G,cAAoH,mBAAIzK,MAAM,aAAakG,cAAY,YAAmB,uBAAMlG,MAAQ,uBAAyBqJ,IAAOoB,KAA9C,cAAqD,mBAAIzK,MAAM,cAAckG,cAAY,gBCwHpRwE,E,kDAzIX,WAAY/J,GAAQ,IAAD,8BACf,cAAMA,IAWVgK,kCAAkC,SAACvB,GAC/B,EAAKtH,SAAS,CAAC8I,2BAA4B,CACvCxB,MAAOA,EACPyB,OAAO,MAfI,EAkBnBC,qBAAsB,SAAC1B,GAEnB,IAAI2B,EAAqBrJ,OAAOsJ,OAAO,0CACb,OAAvBD,GACArJ,OAAO0F,QAAQ,6FAEdrC,IAAMkG,IAAIvJ,OAAOC,QAAU,wCAA0CyH,EAAQ,uBAAyB2B,GACjGnJ,MAAK,SAAAC,GACFoF,QAAQC,IAAIrF,MAEf8D,OAAM,SAAA9D,GAAI,OAAGoF,QAAQC,IAAIrF,MAC9B,EAAKC,SAAS,CAACoJ,SAAU,SA7Bd,EAgCnBC,sBAAuB,SAAC/B,GAEpB,IAAI2B,EAAqBrJ,OAAOsJ,OAAO,2CACb,OAAvBD,GACArJ,OAAO0F,QAAQ,0FAEdrC,IAAMkG,IAAIvJ,OAAOC,QAAU,wCAA0CyH,EAAQ,uBAAyB2B,GACjGnJ,MAAK,SAAAC,GACFoF,QAAQC,IAAIrF,MAEf8D,OAAM,SAAA9D,GAAI,OAAGoF,QAAQC,IAAIrF,MAC1B,EAAKC,SAAS,CAACoJ,SAAU,SA3ClB,EAsFnBb,sBAAwB,SAACzB,GACrB,EAAKxH,MAAM8J,SAASlJ,KAChB,SAAAoJ,GACOA,EAAQtL,KAAO8I,IACd,EAAK9G,SAAS,CAACuJ,WAAYD,EAAQE,oBACnC,EAAKxJ,SAAS,CAACsH,MAAOR,SAzFlC,EAAKxH,MAAQ,CACT8J,SAAS,KACTK,QAAS,KACTF,WAAY,KACZjC,MAAO,EACPwB,2BAA4B,KAC5BrG,SAAS,GARE,E,gEA+CC,IAAD,OACY,OAAxBrC,KAAKd,MAAM8J,WACV1J,IAAMC,IAAIC,OAAOC,QAAU,mCAAqCO,KAAKvB,MAAM6K,MAAMC,OAAO3L,IACvF8B,MACG,SAAAC,GACI,EAAKC,SAAS,CAACoJ,SAAUrJ,EAAKE,UAGtCP,IAAMC,IAAIC,OAAOC,QAAU,kBAC1BC,MACG,SAAAC,GACI,EAAKC,SAAS,CAACyJ,QAAS1J,EAAKE,gBAMP0C,KADpB,IAAIC,KACPjD,IAAI,gBAEXS,KAAKJ,SAAS,CAACyC,SAAS,M,2CAGX,IAAD,OACW,OAAxBrC,KAAKd,MAAM8J,WACV1J,IAAMC,IAAIC,OAAOC,QAAU,mCAAqCO,KAAKvB,MAAM6K,MAAMC,OAAO3L,IACvF8B,MACG,SAAAC,GACI,EAAKC,SAAS,CAACoJ,SAAUrJ,EAAKE,UAGtCP,IAAMC,IAAIC,OAAOC,QAAU,kBAC1BC,MACG,SAAAC,GACI,EAAKC,SAAS,CAACyJ,QAAS1J,EAAKE,a,+BAgBpC,IAAD,OAEJ,OADAkF,QAAQC,IAAIhF,KAAKvB,MAAM6K,MAAMC,OAAO3L,IAEhC,eAAC,EAAD,WACKoC,KAAKd,MAAMmD,QAAQ,GAAG,cAAC,IAAD,CAAUxE,GAAG,WACM,OAAzCmC,KAAKd,MAAMwJ,2BAAoC,GAAG,cAAC,IAAD,CAAU7K,GAAI,aAAemC,KAAKd,MAAMwJ,2BAA2BxB,MAAQ,aAC9H,qBAAKvJ,UAAU,iBAAf,SACI,sBAAKA,UAAU,MAAf,UACI,sBAAKA,UAAU,WAAf,UACI,oBAAI8E,MAAO,CAACsB,UAAW,UAAvB,kCAE2B,OAAvB/D,KAAKd,MAAMmK,SAA4C,OAAxBrJ,KAAKd,MAAM8J,SAAmBhJ,KAAKd,MAAM8J,SAASlJ,KAC7E,SAAAoJ,GAAO,OAAI,EAAKhK,MAAMmK,QAAQvJ,KAC1B,SAAA0J,GAAM,OAAGA,EAAO5L,KAAOsL,EAAQO,YAAc,cAAC,EAAD,CACGzB,WAAYwB,EAAOtJ,KACnB+H,KAAMuB,EAAOE,QACbxC,MAAOgC,EAAQtL,GACfuK,sBAAwB,EAAKA,sBAC7BC,mBAAqB,EAAKK,kCAC1BP,YAAcgB,EAAQhB,YACtBG,WAAY,EAAKY,sBACjBzB,cAAe0B,EAAQS,mBACvBrB,UAAW,EAAKM,uBAAyB,SAE7F,qBAAKjL,UAAU,MAAf,SAAqB,cAACuG,EAAA,EAAD,CAASC,UAAU,cAGpD,sBAAKxG,UAAU,WAAf,UACI,oBAAI8E,MAAO,CAACsB,UAAW,UAAvB,qCAEI/D,KAAKd,MAAMiK,WACX,cAAC,EAAD,CAAgBrC,eAAgB9G,KAAKd,MAAMiK,WAAYjC,MAASlH,KAAKd,MAAMgI,QAC1E,wC,GAjIJ3I,aCFvBqL,E,kDAEF,WAAYnL,GAAQ,IAAD,8BACf,cAAMA,IAkDVoL,iBAAmB,WACf,EAAKjK,SAAS,CAACkK,aAAc,EAAK5K,MAAM4K,eApDzB,EAsDnBC,iBAAmB,SAACtJ,GACS,eAAtBA,EAAME,OAAOT,MACZ,EAAKN,SAAS,CAACoK,YAAa,CACxBC,UAAW,IAAIvJ,KAAKD,EAAME,OAAOC,OAAOsJ,qBACxCC,QAAS,EAAKjL,MAAM8K,YAAYG,WAGf,aAAtB1J,EAAME,OAAOT,MACZ,EAAKN,SAAS,CAACoK,YAAa,CACxBC,UAAW,EAAK/K,MAAM8K,YAAYC,UAClCE,QAAS,IAAIzJ,KAAKD,EAAME,OAAOC,OAAOsJ,yBA9D9C,EAAKhL,MAAS,CACVkL,YAAa,GACb/H,SAAS,EACTyH,aAAa,EACbE,YAAa,CACTC,UAAW,KACXE,QAAS,MAEbE,eAAe,GAEnB,EAAKC,gBAAkB,EAAKA,gBAAgB1G,KAArB,gBAZR,E,gEAcC,IAAD,OACsB,IAAlC5D,KAAKd,MAAMkL,YAAYnK,QAEtBX,IAAMC,IAAIC,OAAOC,QAAU,2CAA6CO,KAAKvB,MAAM6K,MAAMC,OAAO3L,IAC/F8B,MACG,SAAAC,GACQA,EAAKE,KAAKC,KACN,SAAAiH,GACIzH,IAAMC,IAAIC,OAAOC,QAAU,aAAesH,EAAQwD,gBAAgB7K,MAC9D,SAAAqD,GACI,IAAIyH,EAAe,IACnBA,EAAe,EAAKtL,MAAMkL,aACbxF,KACT,CACI6F,QAAS1D,EAAQC,WACjB0D,UAAW3D,EAAQnJ,GACnBqJ,YAAaF,EAAQE,YACrB0D,aAAc5H,EAAKlD,KAAKuD,WAEhC,EAAKxD,SAAS,CAACwK,YAAaI,aAMtD/G,OACE,SAAAC,GACIqB,QAAQC,IAAItB,WAKUnB,KADpB,IAAIC,KACPjD,IAAI,gBAEXS,KAAKJ,SAAS,CAACyC,SAAS,M,wCAoBd,IAAD,OAE+B,OAArCrC,KAAKd,MAAM8K,YAAYC,WACgB,OAAnCjK,KAAKd,MAAM8K,YAAYG,UAE1BnK,KAAKJ,SAAS,CAACwK,YAAa,KAC5B9K,IAAMwD,KAAKtD,OAAOC,QAAU,gDAC9BO,KAAKvB,MAAM6K,MAAMC,OAAO3L,GACxB,cAAgBoC,KAAKd,MAAM8K,YAAYC,UACvC,YAAcjK,KAAKd,MAAM8K,YAAYG,SAClCzK,MACG,SAAAC,GACQA,EAAKE,KAAKC,KACN,SAAAiH,GACIzH,IAAMC,IAAIC,OAAOC,QAAU,aAAesH,EAAQwD,gBAAgB7K,MAC9D,SAAAqD,GACI,IAAIyH,EAAe,IACnBA,EAAe,EAAKtL,MAAMkL,aACbxF,KACT,CACI6F,QAAS1D,EAAQC,WACjB0D,UAAW3D,EAAQnJ,GACnBqJ,YAAaF,EAAQE,YACrB0D,aAAc5H,EAAKlD,KAAKuD,WAEhC,EAAKxD,SAAS,CAACwK,YAAaI,aAMtD/G,OACE,SAAAC,GACIqB,QAAQC,IAAItB,S,+BAKvB,IAAD,OACJ,OACI,eAAC,EAAD,WACK1D,KAAKd,MAAMmD,QAAQ,GAAG,cAAC,IAAD,CAAUxE,GAAG,WAClCmC,KAAKd,MAAM4K,YAwBhB,cAAC,EAAD,CAAgBc,cAAe5K,KAAK6J,iBAAmBgB,aAAc,EAAOC,mBAAqB9K,KAAKd,MAAMkL,YAAaW,MAAO/K,KAAKvB,MAAM6K,MAAMC,OAAO3L,KAvBrJ,sBAAKD,UAAU,0CAAf,UACI,iDACA,uBAAOoI,IAAI,aAAX,0BACA,uBAAOpI,UAAU,4BAA4BI,KAAK,OAAOH,GAAG,aAAasC,KAAK,aAC9Ea,aAAe,UAAUC,SAAUhB,KAAK+J,mBACxC,uBAAOhE,IAAI,YAAX,wBACA,uBAAOpI,UAAU,2BAA2BI,KAAK,OAAOH,GAAG,QAAQsC,KAAK,WACtEc,SAAUhB,KAAK+J,mBACjB,qBAAKpM,UAAU,MAAf,SACA,wBAAQA,UAAU,qBAAsB8E,MAAO,CAACuI,WAAY,OAAQC,YAAa,OAC/EnM,QAASkB,KAAKsK,gBADhB,sBAI+B,OAA3BtK,KAAKd,MAAMkL,YACX,cAAC,EAAD,CACAU,mBAAqB9K,KAAKd,MAAMkL,YAChCW,MAAO/K,KAAKvB,MAAM6K,MAAMC,OAAO3L,GAC/BiN,aAAc,IAEZ,cAAC3G,EAAA,EAAD,CAASC,UAAU,SAEzB,wBAAQrF,QAAS,kBAAI,EAAKc,SAAS,CAACkK,aAAa,KAAQnM,UAAU,kBAAnE,6B,GAtISY,aA+IhB2M,EAAb,4MACIhM,MAAQ,CACJoH,UAAU,EACV6E,IAAK,GAHb,EAWIC,gBAAgB,WACZ,GAAG,EAAK3M,MAAMqM,mBAAmB7K,OAAS,MAA2B,IAAnB,EAAKf,MAAMiM,IAC7D,CACI,IAAIA,EAAI,EACR,EAAK1M,MAAMqM,mBAAmBhL,KAAI,SAAAiH,GAC9BoE,GAAQpE,EAAQE,eAEpB,EAAKrH,SAAS,CAACuL,IAAKA,MAlBhC,kEAMQnL,KAAKoL,oBANb,2CASQpL,KAAKoL,oBATb,kCAsBQ5L,OAAO6L,QACPrL,KAAKvB,MAAMmM,kBAvBnB,+BAyBc,IAAD,OACP,OACE,sBAAKjN,UAAU,MAAf,UAEGqC,KAAKvB,MAAMoM,YAAa,qCACvB,yDAA4B7K,KAAKd,MAAMiM,OACvC,6CAAgBnL,KAAKvB,MAAMsM,YACvB,GAER,wBAAOpN,UAAU,SAAjB,UACC,gCACG,+BACI,8CACA,yCACA,qDACCqC,KAAKvB,MAAMoM,YAAY,GAAG,0DAGjC,gCACC7K,KAAKvB,MAAMqM,mBACZ9K,KAAKvB,MAAMqM,mBAAmBhL,KAAI,SAAAiH,GAC5B,OAAO,+BACK,6BAAK,IAAIrG,KAAKqG,EAAQ0D,SAAS5J,eAAiB,OAAS,IAAIH,KAAKqG,EAAQ0D,SAAS/E,uBACnF,6BAAKqB,EAAQE,cACb,6BAAKF,EAAQ4D,eACZ,EAAKlM,MAAMoM,YAAY,GAAG,6BAAI,cAAC,IAAD,CAAMhN,GAAI,iCAAmCkJ,EAAQ2D,UAArD,4BAG1C,QAGR1K,KAAKvB,MAAMoM,YACZ,mBAAG/L,QAAS,kBAAI,EAAKwM,aAAa7I,MAAO,CAAC8I,OAAQ,UAAWC,MAAO,QAASC,gBAAiB,QAA9F,uBAAsH,UAzD9H,GAAoClN,aAgErBqL,ICvBA8B,E,kDAxLX,WAAYjN,GAAQ,IAAD,8BACf,cAAMA,IAsBV8H,UAAU,SAAC9F,GACkB,gBAAtBA,EAAME,OAAOT,KACZ,EAAKyL,YAAYlL,EAAME,QAEG,gBAAtBF,EAAME,OAAOT,KACjB,EAAK0L,YAAYnL,EAAME,QAEG,cAAtBF,EAAME,OAAOT,KACjB,EAAK2L,UAAUpL,EAAME,QAEK,aAAtBF,EAAME,OAAOT,KACjB,EAAK4L,SAASrL,EAAME,QAEM,gBAAtBF,EAAME,OAAOT,KACjB,EAAK6L,YAAYtL,EAAME,QAEG,YAAtBF,EAAME,OAAOT,KACjB,EAAK8L,QAAQvL,EAAME,QAEO,eAAtBF,EAAME,OAAOT,KACjB,EAAK+L,WAAWxL,EAAME,QAEI,aAAtBF,EAAME,OAAOT,MACjB,EAAKgM,eAAezL,EAAME,SA9Cf,EAiDnBgL,YAAa,SAAChL,GACV,EAAKf,SAAS,CAACuM,YAAa,CACxB,GAAM,EACN,KAAQxL,EAAOC,MACf,KAAQ,EAAK1B,MAAMiN,YAAY3G,KAC/B,YAAe,EAAKtG,MAAMiN,YAAY5G,YACtC,QAAW,EAAKrG,MAAMiN,YAAYC,QAClC,OAAU,EAAKlN,MAAMiN,YAAY7G,OACjC,kBAAqB,EAAKpG,MAAMiN,YAAYxG,qBAEhDZ,QAAQC,IAAI,EAAK9F,QA3DF,EA6DnB2M,UAAW,SAAClL,GACR,EAAKf,SAAS,CAACuM,YAAa,CACxB,GAAM,EACN,KAAQ,EAAKjN,MAAMiN,YAAYjM,KAC/B,KAAQ,EAAKhB,MAAMiN,YAAY3G,KAC/B,YAAe,EAAKtG,MAAMiN,YAAY5G,YACtC,QAAW,EAAKrG,MAAMiN,YAAYC,QAClC,OAAUzL,EAAOC,MACjB,kBAAqB,EAAK1B,MAAMiN,YAAYxG,sBArEjC,EAwEnBiG,YAAc,SAACjL,GACX,EAAKf,SAAS,CAACwD,SAAUzC,EAAOC,SAzEjB,EA2EnBkL,SAAW,SAACnL,GACR,EAAKf,SAAS,CAACyD,MAAO1C,EAAOC,QAC7BmE,QAAQC,IAAI,EAAK9F,QA7EF,EA+EnB6M,YAAc,SAACpL,GACX,EAAKf,SAAS,CAACoD,SAAUrC,EAAOC,QAChCmE,QAAQC,IAAI,EAAK9F,QAjFF,EAmFnB8M,QAAS,SAACrL,GACN,EAAKf,SAAS,CAACuM,YAAa,CACxB,GAAM,EACN,KAAQ,EAAKjN,MAAMiN,YAAYjM,KAC/B,KAAQS,EAAOC,MACf,YAAe,EAAK1B,MAAMiN,YAAY5G,YACtC,QAAW,EAAKrG,MAAMiN,YAAYC,QAClC,OAAU,EAAKlN,MAAMiN,YAAY7G,OACjC,kBAAqB,EAAKpG,MAAMiN,YAAYxG,qBAEhDZ,QAAQC,IAAI,EAAK9F,QA7FF,EA+FnB+M,WAAY,SAACtL,GACT,EAAKf,SAAS,CAACuM,YAAa,CACxB,GAAM,EACN,KAAQ,EAAKjN,MAAMiN,YAAYjM,KAC/B,KAAQ,EAAKhB,MAAMiN,YAAY3G,KAC/B,YAAe,EAAKtG,MAAMiN,YAAY5G,YACtC,QAAW5E,EAAOC,MAClB,OAAU,EAAK1B,MAAMiN,YAAY7G,OACjC,kBAAqB,EAAKpG,MAAMiN,YAAYxG,qBAEhDZ,QAAQC,IAAI,EAAK9F,QAzGF,EA2GnBgN,eAAgB,SAACvL,GACb,EAAKf,SAAS,CAACuM,YAAa,CACxB,GAAM,EACN,KAAQ,EAAKjN,MAAMiN,YAAYjM,KAC/B,KAAQ,EAAKhB,MAAMiN,YAAY3G,KAC/B,YAAe7E,EAAOC,MACtB,QAAW,EAAK1B,MAAMiN,YAAYC,QAClC,OAAU,EAAKlN,MAAMiN,YAAY7G,OACjC,kBAAqB,EAAKpG,MAAMiN,YAAYxG,qBAEhDZ,QAAQC,IAAI,EAAK9F,QArHF,EAwHnBmN,YAAa,SAAC5L,GAEV,EAAKb,SAAS,CAACqD,KAAMxC,EAAME,OAAOC,SA1HnB,EA6HnB0L,aAAe,WACXhN,IAAMwD,KACEtD,OAAOC,QAAU,YACjB,CACI,GAAM,EACN,MAAS,EAAKP,MAAMmE,MACpB,SAAY,EAAKnE,MAAMkE,SACvB,SAAY,EAAKlE,MAAM8D,SACvB,KAAQ,EAAK9D,MAAM+D,KACnB,WAAc,CACV,GAAM,EACN,KAAQ,EAAK/D,MAAMiN,YAAYjM,KAC/B,KAAQ,EAAKhB,MAAMiN,YAAY3G,KAC/B,YAAe,EAAKtG,MAAMiN,YAAY5G,YACtC,QAAW,EAAKrG,MAAMiN,YAAYC,QAClC,OAAU,EAAKlN,MAAMiN,YAAY7G,UAIhD5F,MAAK,SAAA6M,GAAQ,OAAI,EAAK3M,SAAS,CAAC0G,UAAU,OAC1C7C,OACG,SAAAC,GAEIR,MAAMQ,EAAI6I,SAAS1M,UAlJ3B,EAAKX,MAAQ,CACT,GAAM,EACN,MAAS,GACT,KAAQ,OACR,SAAY,GACZ,SAAY,GACZ,YAAe,CACb,GAAM,EACN,KAAQ,GACR,KAAQ,GACR,YAAe,GACf,QAAW,GACX,OAAU,GACV,kBAAqB,IAEvBsN,WAAW,GACXlG,UAAU,GAEd,EAAKmG,eAAiBC,IAAMC,YAC5B,EAAKpG,UAAY,EAAKA,UAAU3C,KAAf,gBArBF,E,qDA0Jf,OACI,cAAC,EAAD,UACA,sBAAKjG,UAAU,YAAf,UACKqC,KAAKd,MAAMoH,SAAS,cAAC,IAAD,CAAUzI,GAAG,gBAAgB,GAClD,iDACA,uBACA,yDACA,yBAAQC,MAAM,6BAA6BkD,SAAUhB,KAAKqM,YAAajO,aAAW,0BAAlF,UACA,wBAAQwO,UAAQ,EAAhB,kBACA,+CAEA,uBACA,kDACA,uBACI,cAAC,EAAD,CAAgBzG,iBAAkBnG,KAAKuG,UAAWN,KAAM,YAAaC,SAAU,OAAQF,SAAU,gBACjG,cAAC,EAAD,CAAgBG,iBAAkBnG,KAAKuG,UAAWN,KAAM,YAAaC,SAAU,OAAQF,SAAU,gBACjG,cAAC,EAAD,CAAgBG,iBAAkBnG,KAAKuG,UAAWN,KAAM,SAAUC,SAAU,QAASF,SAAU,aAC/F,cAAC,EAAD,CAAgBG,iBAAkBnG,KAAKuG,UAAWN,KAAM,WAAYC,SAAU,WAAYF,SAAU,gBACpG,cAAC,EAAD,CAAgBG,iBAAkBnG,KAAKuG,UAAWN,KAAM,eAAgBC,SAAU,OAAQF,SAAU,aACpG,cAAC,EAAD,CAAgBG,iBAAkBnG,KAAKuG,UAAWN,KAAM,OAAQC,SAAU,OAAQF,SAAU,YAC5F,cAAC,EAAD,CAAgBG,iBAAkBnG,KAAKuG,UAAWN,KAAM,mBAAoBC,SAAU,OAAQF,SAAU,eACxG,cAAC,EAAD,CAAgBG,iBAAkBnG,KAAKuG,UAAWN,KAAM,SAAUC,SAAU,OAAQF,SAAU,cAC9F,wBAAQlH,QAASkB,KAAKsM,aAAc3O,UAAU,oBAA9C,6B,GAjLQY,aC0KbsO,E,kDAxKX,WAAYpO,GAAQ,IAAD,8BACf,cAAMA,IAmBV8H,UAAU,SAAC9F,GACkB,qBAAtBA,EAAME,OAAOT,KAEZ,EAAK4M,mBAAmBrM,EAAME,QAEJ,0BAAtBF,EAAME,OAAOT,MACjB,EAAK6M,mBAAmBtM,EAAME,SA1BnB,EA8BnBmM,mBAAqB,SAAAnM,GACjB,EAAKf,SAAS,CAACoN,aACX,CACI,GAAM,EACN,cAAiBrM,EAAOC,MACxB,kBAAqB,EAAK1B,MAAM8N,aAAaC,kBAC7C,aAAe,EACf,OAAU,EAAK/N,MAAM8N,aAAaE,OAClC,YAAe,EAAKhO,MAAM8N,aAAavD,YACvC,kBAAqB,SAvCd,EA4CnBsD,mBAAqB,SAAApM,GACjB,EAAKf,SAAS,CAACoN,aACX,CACI,GAAM,EACN,cAAiB,EAAK9N,MAAM8N,aAAaG,cACzC,kBAAqBxM,EAAOC,MAC5B,aAAe,EACf,OAAU,EAAK1B,MAAM8N,aAAaE,OAClC,YAAc,EAAKhO,MAAM8N,aAAavD,YACtC,kBAAqB,SArDd,EA0DnB2D,SAAS,WACL9N,IAAMC,IAAIC,OAAOC,QAAU,mCAAqC,EAAKP,MAAM8N,aAAaE,QACvFxN,MACG,SAAAC,GACI,IAAI0N,GAAa,EACjB1N,EAAKE,KAAKC,KAAI,SAAAwN,GACPA,EAAI7D,cAAgB,EAAKvK,MAAM8N,aAAavD,cAE3C4D,GAAa,EACbnK,MAAM,oDAGVmK,GAEA/N,IAAMwD,KAAKtD,OAAOC,QAAU,eAAe,EAAKP,MAAM8N,cACjDtN,MAAK,SAAAC,GACF,EAAKC,SAAS,CAAC0G,UAAU,OACzB7C,OACA,SAAA9D,GAAI,OAAGuD,MAAMvD,EAAKE,KAAK8D,eAIxCF,OACC,SAAA9D,GAAI,OAAGuD,MAAMvD,EAAKE,KAAK8D,aAjFZ,EAqFnB4J,mBAAqB,SAAC9M,GACQ,iCAAvBA,EAAME,OAAOC,OACZ,EAAK1B,MAAMsN,WAAW1M,KAClB,SAAA0N,GACOA,EAAUtN,OAASO,EAAME,OAAOC,OAC/B,EAAKhB,SAAS,CAACoN,aACX,CACI,GAAM,EACN,cAAiB,EAAK9N,MAAM8N,aAAaG,cACzC,kBAAqB,EAAKjO,MAAM8N,aAAaC,kBAC7C,aAAe,EACf,OAAU,EAAK/N,MAAM8N,aAAaE,OAClC,YAAeM,EAAU5P,GACzB,kBAAqB,YAhG7C,EAAKsB,MAAQ,CACT8N,aAAa,CACT,GAAM,EACN,cAAiB,EACjB,kBAAqB,EACrB,aAAe,EACf,OAAU,EACV,YAAe,EACf,kBAAqB,MAEzBR,WAAY,KACZlG,UAAU,EACVjE,SAAS,GAEb,EAAKoK,eAAiBC,IAAMC,YAC5B,EAAKpG,UAAY,EAAKA,UAAU3C,KAAf,gBAjBF,E,gEA2GC,IAAD,OACuB,IAAnC5D,KAAKd,MAAM8N,aAAaE,QACvBlN,KAAKJ,SAAS,CAACoN,aAAc,CACzB,GAAM,EACN,cAAiBhN,KAAKd,MAAM8N,aAAaG,cACzC,kBAAqBnN,KAAKd,MAAM8N,aAAaC,kBAC7C,aAAe,EACf,OAAUjN,KAAKvB,MAAM6K,MAAMC,OAAO3L,GAClC,YAAeoC,KAAKd,MAAM8N,aAAavD,YACvC,kBAAqB,QAGA,OAA1BzJ,KAAKd,MAAMsN,YACVlN,IAAMC,IAAIC,OAAOC,QAAU,kBAC3BC,MAAK,SAAAC,GACD,EAAKC,SAAS,CAAC4M,WAAY7M,EAAKE,eAIN0C,KADpB,IAAIC,KACPjD,IAAI,gBAEXS,KAAKJ,SAAS,CAACyC,SAAS,M,+BAK5B,OACI,eAAC,EAAD,WACKrC,KAAKd,MAAMmD,QAAQ,GAAG,cAAC,IAAD,CAAUxE,GAAG,WACnCmC,KAAKd,MAAMoH,SAAU,cAAC,IAAD,CAAUzI,GAAG,gBAAiB,GACpD,sBAAKF,UAAU,YAAf,UACI,sBAAKA,UAAU,kBAAf,UACI,wDACA,uBACA,8DACA,uBACI,yBAAQG,MAAM,6BAA6BkD,SAAUhB,KAAKuN,mBAAoBnP,aAAW,0BAAzF,UACA,wBAAQwO,UAAQ,EAAhB,0CAEQ5M,KAAKd,MAAMsN,WACXxM,KAAKd,MAAMsN,WAAW1M,KAAI,SAAA2N,GACtB,OAAO,iCAA4BA,EAAUvN,MAAzBuN,EAAU7P,OAElC,wBAAQgP,UAAQ,EAAhB,sEAIhB,uBACA,sBAAK9O,MAAM,cAAX,UACI,uBAAOiI,IAAI,mBAAX,mCACA,uBAAO2H,IAAK1N,KAAKyM,eAAgB1O,KAAK,SAASD,MAAM,eAAekD,SAAUhB,KAAKuG,UAAWrG,KAAK,wBAEvG,cAAC,EAAD,CAAgBiG,iBAAkBnG,KAAKuG,UAAWN,KAAM,sBAAuBC,SAAU,SAAUF,SAAU,0BAC7G,wBAAQrI,UAAU,kBAAkBmB,QAASkB,KAAKoN,SAAlD,8C,GAjKc7O,aCiEnBoP,E,4MAjEXzO,MAAQ,CACJ0O,WAAY,KACZvL,SAAS,G,kEAIO,IAAD,OACY,OAAxBrC,KAAKd,MAAM0O,YACV/K,IAAMtD,IAAIC,OAAOC,QAAU,kBAAkBC,MACzC,SAAAC,GACI,EAAKC,SAAS,CAACgO,WAAYjO,EAAKE,UAEtC4D,OACE,SAAAC,GACIR,MAAM,wBAAyBQ,WAKTnB,KADpB,IAAIC,KACPjD,IAAI,gBAEXS,KAAKJ,SAAS,CAACyC,SAAS,M,+BAK5B,OACI,cAAC,EAAD,UAEI,sBAAK1E,UAAU,YAAf,UACI,yDACA,qBAAKA,UAAU,wBAAf,SACI,wBAAOA,UAAU,+BAAjB,UACI,gCACI,+BACI,oCACA,sCACA,8CACA,8CAGR,gCAEIqC,KAAKd,MAAM0O,WACX5N,KAAKd,MAAM0O,WAAW9N,KAAI,SAAA+N,GACtB,OAAQ,+BACI,6BAAKA,EAAQjQ,KACb,6BAAKiQ,EAAQ3N,OACb,6BAAK2N,EAAQxH,SACb,6BAAKwH,EAAQnE,gBAE1B,yCAKf,cAAC,IAAD,CAAM/L,UAAU,yBAAyBE,GAAG,cAA5C,uC,GAzDSU,aCEduP,EATC,SAAArP,GACZ,OACI,sBAAKX,MAAM,cAAX,UACI,wBAAOiI,IAAKtH,EAAMyB,KAAlB,UAAyBzB,EAAMwH,KAA/B,OACA,uBAAQlI,KAAMU,EAAMV,KAAMD,MAAM,eAAekD,SAAUvC,EAAM0H,iBAAkBjG,KAAMzB,EAAMwH,WCuE1F8H,E,4MAnEX7O,MAAQ,CACJ8O,WAAY,CACRpQ,GAAI,EACJsC,KAAK,GACLmG,OAAQ,EACRqD,QAAS,IAEbpD,UAAU,G,EAEd2H,aAAe,SAAAxN,GACc,wBAAtBA,EAAME,OAAOT,KACZ,EAAKgO,WAAWzN,EAAME,OAAOC,OACC,iBAAtBH,EAAME,OAAOT,KACjB,EAAKiO,aAAa1N,EAAME,OAAOC,OACD,gBAAtBH,EAAME,OAAOT,MAChB,EAAKkO,cAAc3N,EAAME,OAAOC,Q,EAGjDsN,WAAa,SAAAtN,GACT,EAAKhB,SAAS,CAACoO,WAAY,CACvBpQ,GAAI,EACJsC,KAAMU,EACNyF,OAAQ,EAAKnH,MAAM8O,WAAW3H,OAC9BqD,QAAS,EAAKxK,MAAM8O,WAAWtE,Y,EAIvCyE,aAAe,SAAAvN,GACX,EAAKhB,SAAS,CAACoO,WAAY,CACvBpQ,GAAI,EACJsC,KAAO,EAAKhB,MAAM8O,WAAW9N,KAC7BmG,OAAQzF,EACR8I,QAAS,EAAKxK,MAAM8O,WAAWtE,Y,EAIvC0E,cAAgB,SAAAxN,GACZ,EAAKhB,SAAS,CAACoO,WAAY,CACvBpQ,GAAI,EACJsC,KAAO,EAAKhB,MAAM8O,WAAW9N,KAC7BmG,OAAQ,EAAKnH,MAAM8O,WAAW3H,OAC9BqD,QAAU9I,M,EAIlByN,eAAiB,WACbxL,IAAMC,KAAKtD,OAAOC,QAAU,iBAAiB,EAAKP,MAAM8O,YAAYtO,MAAK,SAAAC,GACrE,EAAKC,SAAS,CAAC0G,UAAU,OAC1B7C,OAAM,SAAAC,GACLR,MAAMQ,O,uDAIV,OAAQ,eAAC,EAAD,WAEQ1D,KAAKd,MAAMoH,SAAU,cAAC,IAAD,CAAUzI,GAAG,cAAc,GAEpD,sBAAKF,UAAU,YAAf,UACI,iDACA,cAAC,EAAD,CAASwI,iBAAkBnG,KAAKiO,aAAchI,KAAK,sBAAsBlI,KAAK,SAC9E,cAAC,EAAD,CAASoI,iBAAkBnG,KAAKiO,aAAchI,KAAK,eAAelI,KAAK,WACvE,cAAC,EAAD,CAASoI,iBAAkBnG,KAAKiO,aAAchI,KAAK,cAAclI,KAAK,SACtE,cAAC,IAAD,CAAMJ,UAAU,kBAAkBmB,QAASkB,KAAKqO,eAAhD,mC,GAhEI9P,aC4Db+P,E,4MAzDXpP,MAAQ,CACJmH,OAAQ,EACRkI,cAAe,KACfjI,UAAU,EACVkI,aAAc,EACdnM,SAAS,G,EAEbkE,UAAY,SAAA9F,GACLA,EAAME,OAAOC,MAAQ,GACpB,EAAKhB,SAAS,CAACyG,OAAQ5F,EAAME,OAAOC,S,EAE5C4F,YAAa,WACTlH,IAAMC,IAAIC,OAAOC,QAAU,kBAAoB,EAAKhB,MAAM6K,MAAMC,OAAO3L,IACtE8B,MAAK,SAAAC,GACF,IAAIE,EAAOF,EAAKE,KAChBA,EAAKoH,YAAc,EAAK/H,MAAMmH,OAC9BxG,EAAKmH,WAAa,EAAK9H,MAAMqP,cAC7BjP,IAAMyJ,IAAIvJ,OAAOC,QAAU,kBAAoB,EAAKhB,MAAM6K,MAAMC,OAAO3L,GAAGiC,GACzEH,MAAK,SAAA+O,GAEF,EAAK7O,SAAS,CAAC4O,aAAc7O,EAAKE,KAAKS,QACvC,EAAKV,SAAS,CAAC0G,UAAU,UAGhC7C,OAAM,SAAAC,GACHR,MAAMQ,O,EAGdgL,qBAAuB,SAACjO,GACpB,EAAKb,SAAS,CAAC2O,cAAe9N,EAAME,OAAOC,S,uEAIT2B,KADpB,IAAIC,KACPjD,IAAI,gBAEXS,KAAKJ,SAAS,CAACyC,SAAS,M,+BAI5B,OACQ,eAAC,EAAD,WACKrC,KAAKd,MAAMmD,QAAQ,GAAG,cAAC,IAAD,CAAUxE,GAAG,WACpC,sBAAKF,UAAU,iBAAf,UAEIqC,KAAKd,MAAMoH,SAAW,cAAC,IAAD,CAAUzI,GAAI,aAAamC,KAAKd,MAAMsP,aAAa,aAAgB,GAE7F,gDACA,uBACI,uBAAOzI,IAAI,QAAX,gCACA,uBAAO/E,SAAUhB,KAAK0O,qBAAsB3Q,KAAK,iBAAiBH,GAAG,QAAQsC,KAAK,UAClF,cAAC,EAAD,CAAgBiG,iBAAkBnG,KAAKuG,UAAWN,KAAM,UAAWC,SAAU,SAAUF,SAAU,gBACjG,wBAAQlH,QAASkB,KAAKwG,YAAa7I,UAAU,kBAA7C,mC,GApDIY,a,QCcbb,E,uKAjBP,OACI,qBAAKC,UAAU,sDAAsDC,GAAG,UAAxE,SACI,sBAAKD,UAAU,YAAf,UACI,cAAC,IAAD,CAAME,GAAG,QAAQC,MAAM,iCAAvB,qCACA,wBAAQH,UAAU,sCAAsCI,KAAK,SAASC,cAAY,WAAWC,cAAY,oBAAoBC,gBAAc,mBAAmBC,gBAAc,QAAQC,aAAW,oBAA/L,SAAmN,sBAAMT,UAAU,0BACnO,qBAAKA,UAAU,2BAA2BC,GAAG,mBAA7C,SACI,oBAAID,UAAU,kCAAd,SACI,oBAAIA,UAAU,WAAd,SAAyB,cAAC,IAAD,CAAMA,UAAU,6BAA6BE,GAAG,cAAhD,uC,GAThCU,aCQNoQ,EATS,SAAAlQ,GACpB,OACI,qCACI,cAACmQ,EAAD,IACCnQ,EAAMC,aCSJmQ,EAfE,SAAApQ,GAAK,OAAE,qBAAKX,MAAM,yBAAX,SACZ,qBAAKA,MAAM,YAAX,SACI,sBAAKA,MAAM,oCAAX,UACI,sBAAKA,MAAM,WAAX,UACI,qBAAKA,MAAM,4DAAX,4BAEA,sBAAKA,MAAM,yCAAX,iBAAyDW,EAAMqQ,cAA/D,WAEJ,qBAAKhR,MAAM,WAAX,SACI,mBAAGA,MAAM,kDC2BlB8L,GAjCQ,SAACnL,GACpB,IAAI4G,EAAG,EACP,OACI,8BACI,wBAAO1H,UAAU,oBAAjB,UACI,gCACI,+BACI,oBAAIoR,MAAM,MAAV,iBACA,oBAAIA,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAV,sBACA,oBAAIA,MAAM,MAAV,kBACA,oBAAIA,MAAM,MAAMC,QAAQ,mBAAxB,mCACA,oBAAID,MAAM,MAAV,8BAGR,gCACKtQ,EAAMwQ,WAAWnP,KAAI,SAAAoP,GAElB,OADA7J,GAAG,EACI,+BACP,6BAAKA,IACL,oBAAI0J,MAAM,MAAV,SAAiBG,EAAWC,eAC5B,6BAAKD,EAAWE,gBAChB,6BAAKF,EAAWG,aAChB,6BAAKH,EAAWI,kBAChB,6BAAKJ,EAAWK,mCCmFzBC,G,kDApGX,WAAY/Q,GAAQ,IAAD,8BACf,cAAMA,IAgCVsL,iBAAmB,SAACtJ,GACS,eAAtBA,EAAME,OAAOT,MACZ,EAAKN,SAAS,CAACoK,YAAa,CACxBC,UAAW,IAAIvJ,KAAKD,EAAME,OAAOC,OAAOsJ,qBACxCC,QAAS,EAAKjL,MAAM8K,YAAYG,WAGf,aAAtB1J,EAAME,OAAOT,MACZ,EAAKN,SAAS,CAACoK,YAAa,CACxBC,UAAW,EAAK/K,MAAM8K,YAAYC,UAClCE,QAAS,IAAIzJ,KAAKD,EAAME,OAAOC,OAAOsJ,yBAzC9C,EAAKhL,MAAS,CACV+P,WAAY,GACZH,cAAe,EACfW,OAAQ,EACRzF,YAAa,CACTC,UAAW,KACXE,QAAS,MAEbuF,iBAAiB,GAErB,EAAKpF,gBAAkB,EAAKA,gBAAgB1G,KAArB,gBAZR,E,gEAeC,IAAD,OACqB,IAAjC5D,KAAKd,MAAM+P,WAAWhP,QACrBX,IAAMC,IAAIC,OAAOC,QAAU,wEAA0EO,KAAKvB,MAAM6K,MAAMC,OAAO3L,IAC5H8B,MAAK,SAAAC,GACF,EAAKC,SAAS,CAACqP,WAAYtP,EAAKE,UACjC4D,OAAM,SAAA9D,GACLuD,MAAMvD,MAGdL,IAAMC,IAAIC,OAAOC,QAAU,2CAA6CO,KAAKvB,MAAM6K,MAAMC,OAAO3L,IAC3F8B,MAAK,SAAAC,GACF,EAAKC,SAAS,CAACkP,cAAenP,EAAKE,KAAK8P,iBACxC,EAAK/P,SAAS,CAAC6P,OAAQ9P,EAAKE,KAAKjC,QAClC6F,OAAM,SAAA9D,GACLuD,MAAMvD,EAAKE,KAAK8D,c,wCAmBV,IAAD,OAC2B,OAArC3D,KAAKd,MAAM8K,YAAYC,WAAyD,OAAnCjK,KAAKd,MAAM8K,YAAYG,QAEnE7K,IAAMC,IAAIC,OAAOC,QAAU,2EAC7BO,KAAKvB,MAAM6K,MAAMC,OAAO3L,GACxB,cAAgBoC,KAAKd,MAAM8K,YAAYC,UACvC,YAAcjK,KAAKd,MAAM8K,YAAYG,SAClCzK,MACG,SAAAC,GACQ,EAAKC,SAAS,CAACqP,WAAYtP,EAAKE,UAE1C4D,OACE,SAAAC,GACIqB,QAAQC,IAAItB,MAInBR,MAAM,8B,+BAKX,OADA6B,QAAQC,IAAIhF,MACL,mCACC,cAAC,EAAD,UACI,eAAC4P,EAAA,EAAD,WACA,cAAC,EAAD,CAAWd,cAAgB9O,KAAKd,MAAM4P,gBAClC,sBAAKnR,UAAU,MAAf,UACI,sBAAKA,UAAU,WAAf,UACA,uBAAOoI,IAAI,aAAX,yBACA,uBAAOpI,UAAU,6BAA6BI,KAAK,OAAOH,GAAG,aAAasC,KAAK,aAC/Ea,aAAe,UAAUC,SAAUhB,KAAK+J,sBAExC,sBAAKpM,UAAU,WAAf,UACI,uBAAOoI,IAAI,YAAX,uBACA,uBAAOpI,UAAU,6BAA6BI,KAAK,OAAOH,GAAG,QAAQsC,KAAK,WACtEc,SAAUhB,KAAK+J,yBAG3B,sBAAKpM,UAAU,UAAf,UACI,cAAC,IAAD,CAAME,GAAI,SAAYmC,KAAKvB,MAAM6K,MAAMC,OAAO3L,GAAO,SAAWoC,KAAKd,MAAMuQ,OAAS,kBAAmB9R,UAAU,4BAAjH,6BACA,wBAAQmB,QAAS,WAAKU,OAAO6L,SAAU1N,UAAU,6BAAjD,mBACA,wBAAQA,UAAU,4BAA6B8E,MAAO,CAACuI,WAAY,OAAQC,YAAa,OACxFnM,QAASkB,KAAKsK,gBADd,uBAGJ,cAAC,GAAD,CAAgB2E,WAAYjP,KAAKd,MAAM+P,wB,GA9F5C1Q,aCSJsR,GAjBkB,SAACpR,GAC9B,OAAO,mCACC,iCACI,qBAAKX,MAAM,oBAAX,SACI,wBAAOA,MAAM,mBAAb,UACI,uBAAQC,KAAK,QAAQD,MAAM,mBAAmBoC,KAAK,SAAStC,GAAG,UAAUkB,QAASL,EAAMqR,UAD5F,yBAIJ,qBAAKhS,MAAM,oBAAX,SACI,wBAAOA,MAAM,mBAAb,UACI,uBAAOC,KAAK,QAASD,MAAM,mBAAmBoC,KAAK,SAAStC,GAAG,MAAMkB,QAASL,EAAMqR,UADxF,4BC2FLC,G,4MA1FX7Q,MAAO,CACC,GAAM,EACN,aAAgB,GAChB,cAAiB,EACjB,WAAc,EACd,mBAAsB,GACtB,gBAAmB,sBACnB,cAAiB,EAAKT,MAAM6K,MAAMC,OAAOkG,OACzC,OAAU,UACVO,gBAAgB,G,EAGxB/B,aAAa,SAACxN,GACV,IAAIuF,EAAWvF,EAAME,OAAOT,KACxBU,EAAQH,EAAME,OAAOC,MAET,sBAAboF,EAAkC,EAAKpG,SAAS,CAACuP,aAAcvO,IAC7C,qBAAboF,EAAgC,EAAKpG,SAAS,CAACwP,cAAexO,IACjD,gBAAboF,EAA2B,EAAKpG,SAAS,CAACyP,WAAYzO,IACzC,4BAAboF,EAAuC,EAAKpG,SAAS,CAAC2P,mBAAoB3O,IAC7D,0BAAboF,GAAsC,EAAKpG,SAAS,CAAC0P,gBAAiB1O,K,EAGlFqP,kBAAoB,WACS,QAAtB,EAAK/Q,MAAMgR,OACVrN,IAAMC,KACFtD,OAAOC,QAAU,kCACjB,CACI,GAAM,EACN,aAAgB,EAAKP,MAAMiQ,aAC3B,cAAiB,EACjB,WAAc,EAAKjQ,MAAMmQ,WACzB,mBAAsB,EAAKnQ,MAAMqQ,mBACjC,gBAAmB,EAAKrQ,MAAMoQ,gBAC9B,cAAiB,EAAKpQ,MAAMiR,gBAE9BzQ,MAAK,SAAAC,GACH,EAAKC,SAAS,CAACoQ,gBAAgB,OAElCvM,OACG,SAAAC,GAEIR,MAAMQ,EAAI6I,SAAS1M,SAGL,YAAtB,EAAKX,MAAMgR,QACfrN,IAAMC,KAAKtD,OAAOC,QAAU,kCACxB,CACI,GAAM,EACN,aAAgB,EAAKP,MAAMiQ,aAC3B,cAAiB,EAAKjQ,MAAMkQ,cAC5B,WAAc,EACd,mBAAsB,EAAKlQ,MAAMqQ,mBACjC,gBAAmB,EAAKrQ,MAAMoQ,gBAC9B,cAAiB,EAAK7Q,MAAM6K,MAAMC,OAAOkG,SACxC/P,MAAK,SAAAC,GACN,EAAKC,SAAS,CAACoQ,gBAAgB,OAElCvM,OACG,SAAAC,GAEIR,MAAMQ,EAAI6I,SAAS1M,U,EAIvCuQ,UAAY,SAAC3P,GACT,IAAIuF,EAAWvF,EAAME,OAAO/C,GACZ,QAAboI,EAAoB,EAAKpG,SAAS,CAACsQ,OAAQ,QACzB,YAAblK,GAAwB,EAAKpG,SAAS,CAACsQ,OAAQ,a,uDAInD,OAAO,eAAC,EAAD,WACFlQ,KAAKd,MAAM8Q,eAAgB,cAAC,IAAD,CAAUnS,GAAI,SAAUmC,KAAKvB,MAAM6K,MAAMC,OAAO3L,GAAI,UAAY,GAC5F,sBAAKD,UAAU,YAAf,UACA,oBAAI8E,MAAO,CAACsB,UAAW,UAAvB,iCACA,cAACsM,GAAD,CAA0BP,QAAS9P,KAAKoQ,YACxC,cAAC,EAAD,CAASjK,iBAAkBnG,KAAKiO,aAAchI,KAAK,oBAAoBlI,KAAK,SAC5E,cAAC,EAAD,CAASoI,iBAAkBnG,KAAKiO,aAAchI,KAAK,mBAAmBlI,KAAK,WAC3E,cAAC,EAAD,CAASoI,iBAAkBnG,KAAKiO,aAAchI,KAAK,cAAclI,KAAK,WACtE,sBAAKD,MAAM,aAAX,UACI,uBAAOiI,IAAI,UAAX,sCACA,0BAAU/E,SAAUhB,KAAKiO,aAAcnQ,MAAM,eAAewS,KAAK,IAAIpQ,KAAK,0BAA0BtC,GAAG,eAE3G,cAAC,EAAD,CAASuI,iBAAkBnG,KAAKiO,aAAchI,KAAK,wBAAwBlI,KAAK,mBAChF,cAAC,IAAD,CAAMJ,UAAU,kBAAkBmB,QAASkB,KAAKiQ,kBAAhD,8B,GAvFa1R,aCiGdgS,G,4MAhGXrR,MAAO,CACH,GAAM,EACN,SAAY,GACZ,UAAa,GACb,aAAe,EACf,eAAkB,EAClB,OAAU,EAAKT,MAAM6K,MAAMC,OAAO3L,GAClC0I,UAAU,EACVkK,SAAU,M,EAGdvC,aAAa,SAACxN,GACV,IAAIuF,EAAWvF,EAAME,OAAOT,KACxBU,EAAQH,EAAME,OAAOC,MAET,cAAboF,EAA0B,EAAKpG,SAAS,CAAC6Q,SAAU7P,IACjC,eAAboF,EAA0B,EAAKpG,SAAS,CAAC8Q,UAAW9P,IACvC,iBAAboF,GAA4B,EAAKpG,SAAS,CAAC+P,eAAgB/O,K,EAGvEqP,kBAAoB,WAChBpN,IAAMC,KACFtD,OAAOC,QAAU,mBACjB,CACI,GAAM,EACN,SAAY,EAAKP,MAAMuR,SACvB,UAAa,EAAKvR,MAAMwR,UACxB,YAAe,EAAKxR,MAAMyR,YAC1B,eAAkB,EAClB,OAAU,EAAKzR,MAAM2F,SAE5BnF,MAAK,SAAA6M,GACC,EAAKrN,MAAMyQ,eAAiB,EAC3B9M,IAAMC,KACFtD,OAAOC,QAAU,kCACjB,CACI,GAAM,EACN,aAAgB,qBAChB,cAAiB,EAAKP,MAAMyQ,eAC5B,WAAc,EACd,mBAAsB,4CACtB,gBAAmB,IAAIjP,KACvB,cAAiB6L,EAAS1M,KAAKjC,KAChC6F,OACC,SAAAC,GAEIR,MAAMQ,EAAI6I,SAAS1M,SAG3B,EAAKX,MAAMyQ,eAAiB,GAChC9M,IAAMC,KACFtD,OAAOC,QAAU,kCACjB,CACI,GAAM,EACN,aAAgB,qBAChB,cAAiB,EACjB,WAAc,EAAKP,MAAMyQ,eACzB,mBAAsB,4CACtB,gBAAmB,IAAIjP,KACvB,cAAiB6L,EAAS1M,KAAKjC,KAG1C6F,OACG,SAAAC,GAEIR,MAAMQ,EAAI6I,SAAS1M,SAG3B,EAAKD,SAAS,CAAC4Q,SAAUjE,EAAS1M,OAClC,EAAKD,SAAS,CAAC0G,UAAU,OAE5B7C,OACG,SAAAC,GAEIR,MAAMQ,O,uDAOV,OAAO,cAAC,EAAD,UACH,sBAAK/F,UAAU,YAAf,UACKqC,KAAKd,MAAMsR,UACRxQ,KAAKd,MAAMoH,SACP,cAAC,IAAD,CAAUzI,GAAI,SAAUmC,KAAKd,MAAMsR,SAAS5S,GAAK,UAC5C,GACjB,oBAAI6E,MAAO,CAACsB,UAAW,UAAvB,iCACA,cAAC,EAAD,CAASoC,iBAAkBnG,KAAKiO,aAAchI,KAAK,YAAYlI,KAAK,SACpE,cAAC,EAAD,CAASoI,iBAAkBnG,KAAKiO,aAAchI,KAAK,aAAalI,KAAK,SACrE,cAAC,EAAD,CAASoI,iBAAkBnG,KAAKiO,aAAchI,KAAK,eAAelI,KAAK,WACvE,cAAC,IAAD,CAAMJ,UAAU,kBAAkBmB,QAASkB,KAAKiQ,kBAAhD,6B,GA7FS1R,aCezBiB,OAAOC,QAAU,2BAgCFmR,OA7Bf,WACE,OACE,mCACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOtN,KAAK,IAAIuN,OAAK,EAACC,UAAWC,IAEjC,cAAC,IAAD,CAAOF,OAAK,EAACvN,KAAK,SAASwN,UAAWpO,IAEtC,cAAC,IAAD,CAAOY,KAAK,cAAcuN,OAAK,EAACC,UAAWjL,IAC3C,cAAC,IAAD,CAAOvC,KAAK,0BAA0BwN,UAAWtI,IACjD,cAAC,IAAD,CAAOlF,KAAK,wBAAwBwN,UAAWlH,IAC/C,cAAC,IAAD,CAAOiH,OAAK,EAACvN,KAAM,cAAewN,UAAWpF,IAE7C,cAAC,IAAD,CAAOmF,OAAK,EAACvN,KAAK,iBAAiBwN,UAAWtB,KAC9C,cAAC,IAAD,CAAOqB,OAAK,EAACvN,KAAK,wCAAwCwN,UAAWf,KACrE,cAAC,IAAD,CAAOc,OAAK,EAACvN,KAAK,gCAAgCwN,UAAWP,KAE7D,cAAC,IAAD,CAAOM,OAAK,EAACvN,KAAK,YAAawN,UAAWnD,IAC1C,cAAC,IAAD,CAAOkD,OAAK,EAACvN,KAAK,cAAewN,UAAW/C,IAG5C,cAAC,IAAD,CAAOzK,KAAK,2BAA2BuN,OAAK,EAACC,UAAWjE,IACxD,cAAC,IAAD,CAAOvJ,KAAM,oCAAqCwN,UAAWxC,UCnCtD0C,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBxR,MAAK,YAAkD,IAA/CyR,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,2BCPDO,GAAc,cACdC,GAAe,eCEtBC,GAAY,CACdC,aAAc,CACVtO,MAAO,GACPuO,YAAa,GACbC,WAAY,GACZC,gBAAgB,IAyCTC,GApCG,WAA6B,IAA5B7S,EAA2B,uDAAnBwS,GAAUM,EAAS,uCACpCvL,EAAU,IAAIwL,IACdC,EAAezL,EAAQlH,IAAI,QACjC,GAAG2S,GACIA,EAAaJ,eACZ,OAAO,6BACA5S,GADP,IAEIyS,aAAclL,EAAQlH,IAAI,UAGtC,OADAkH,EAAQtD,IAAI,OAAQjE,EAAMyS,aAAe,CAAErO,KAAM,MAC1C0O,EAAOjU,MACV,KAAKoU,GAGD,OAFApN,QAAQC,IAAIgN,GACZvL,EAAQtD,IAAI,OAAQ6O,EAAOI,QAAU,CAAE9O,KAAM,MAC7C,6BACOpE,GADP,IAEIyS,aAAcK,EAAOI,UAE7B,KAAKD,GACD,IAAME,EAAe,CACjBV,aAAc,CACVtO,MAAO,GACPuO,YAAa,GACbC,WAAY,GACZC,gBAAgB,IAIpB,OADJrL,EAAQtD,IAAI,OAAQkP,EAAaV,aAAgB,CAAErO,KAAM,MACrD,6BACOpE,GADP,IAEIyS,aAAcU,EAAaV,eAEvC,QAAS,OAAOzS,IC3BxB,IAEeoT,GAFAC,aAAYR,GAAYS,cAfvC,YACI,OAD0B,EAAZC,SACP,SAAAC,GAAI,OAAI,SAAAV,GACbjN,QAAQC,IAAI,gBAAiBgN,GAG7B,IAAMW,EAAcD,EAAKV,GAMzB,OAJAjN,QAAQC,IAAI,uBAAwBgN,GAI7BW,QCHbC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,KAAD,CAAUR,MAAOS,GAAjB,SACE,cAAC,GAAD,UAINC,SAASC,eAAe,SAM1BjC,O","file":"static/js/main.2cc9ed88.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"zoom\":\"CardStyling_zoom__BwXAY\"};","import { Component } from \"react\";\r\nimport {Link} from 'react-router-dom'\r\nclass NavBar extends Component{\r\n    render(){\r\n        return(\r\n            <nav className=\" navbar-expand-lg navbar navbar-light bg-dark  py-3\" id=\"mainNav\">\r\n                <div className=\"container\">\r\n                    <Link to=\"/\" class=\"navbar-brand js-scroll-trigger\" >Admin Control Panel</Link>\r\n                    <button className=\"navbar-toggler navbar-toggler-right\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarResponsive\" aria-controls=\"navbarResponsive\" aria-expanded=\"false\" aria-label=\"Toggle navigation\"><span className=\"navbar-toggler-icon\"></span></button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarResponsive\">\r\n                        <ul className=\"navbar-nav ml-auto my-2 my-lg-0\">\r\n                            <li className=\"nav-item\"><Link className=\"nav-link js-scroll-trigger\" to=\"/\">Home</Link></li>\r\n                            \r\n                            <li className=\"nav-item dropdown\">\r\n                                <Link className=\"nav-link dropdown-toggle\"  id=\"navbarDropdownMenuLink\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" >\r\n                                User\r\n                                </Link>\r\n                                <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdownMenuLink\">\r\n                                    <Link className=\"dropdown-item\"  to=\"/manageuser\" >Show User List</Link>\r\n                                    <Link className=\"dropdown-item\" to='/CreateUser' >Create New User</Link>\r\n                                    <Link className=\"dropdown-item disabled\" >Update Existing User</Link>\r\n                                </div>\r\n                            </li>\r\n                            <li className=\"nav-item\"><Link className=\"nav-link js-scroll-trigger\" to=\"/Products\">Products</Link></li>\r\n                            \r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        );   \r\n    } \r\n}\r\n\r\n\r\nexport default NavBar;","import React from 'react';\r\nimport NavBar from '../NavBar/NavBar';\r\nconst AdminLayout = props =>{\r\n    return(\r\n        <>\r\n            <NavBar/>\r\n            {props.children}\r\n        </>\r\n    );    \r\n}\r\n\r\nexport default AdminLayout;","\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst DashBoardNavigator = (props)=>{\r\n    var active = \"nav-link active\";\r\n    var inActive = \"nav-link\";\r\n    return(\r\n        <ul className=\"nav nav-tabs flex-column\">\r\n            <li className=\"nav-item\">\r\n                <Link onClick = {()=>props.menuSwitchingHandler(1)} className={props.currentMenu === 1 ? active : inActive }  >Today Recovery Details</Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n                <Link onClick = {()=>props.menuSwitchingHandler(2)}  className={props.currentMenu === 2 ? active : inActive }>Show Remain Recovery</Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n                <Link onClick = {()=>props.menuSwitchingHandler(3)} className={props.currentMenu === 3 ? active : inActive }>Show Report by Month</Link>\r\n            </li>\r\n        </ul>\r\n    );\r\n}\r\n\r\nexport default DashBoardNavigator;","import axios from 'axios';\r\nimport {Component} from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nclass TodayRecovery extends Component {\r\n\r\n    state= {\r\n        dataArray: [],\r\n        recoverySum: 0\r\n    }\r\n\r\n    loadData = ()=>{\r\n        axios.get(window.$domain + 'api/Analatics/GetTodayRecovery')\r\n        .then(resp=>{\r\n            this.setState({dataArray: resp.data});\r\n            this.state.dataArray.map(\r\n              data=>{\r\n                this.setState({recoverySum: this.state.recoverySum + data.payed_Amount});\r\n              }\r\n            )\r\n        });\r\n    }\r\n    componentDidMount(){\r\n        if(this.state.dataArray.length === 0)\r\n        this.loadData();\r\n        \r\n    }\r\n    render(){\r\n      var sum = 0;\r\n        return <>\r\n          <div class=\"card  shadow h-30 py-1\">\r\n            <div class=\"card-body\">\r\n                <div class=\"row no-gutters align-items-center\">\r\n                    <div class=\"col mr-2\">\r\n                        <div class=\"text-xs font-weight-bold text-primary text-uppercase mb-1\">\r\n                            Gain Recovery (Today)</div>\r\n                        <div class=\"h5 mb-0 font-weight-bold text-gray-800\">PKR{' '+this.state.recoverySum}</div>\r\n                    </div>\r\n                    <div class=\"col-auto\">\r\n                        <i class=\"fas fa-calendar fa-2x text-gray-300\"></i>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n          </div>\r\n          <table class=\"table shadow table-bordered\">\r\n            <thead>\r\n              <tr>\r\n                <th >Client Name</th>\r\n                <th >Phone</th>\r\n                <th >Payed Amount</th>\r\n                <th >Scheme Name</th>\r\n                <th >Payment Time</th>\r\n                <th >Show Account</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {\r\n                  this.state.dataArray.length !== 0 ? this.state.dataArray.map(\r\n                    data =>{\r\n                    return  <tr>\r\n                                  <th>{data.name}</th>\r\n                                  <td>{data.phone}</td>\r\n                                  <td>{data.payed_Amount}</td>\r\n                                  <td>{data.scheme}</td>\r\n                                  <td>{data.pay_Time}</td>\r\n                                  <td><Link to={'/Accounts/'+ data.accId +'/Payment'}>show</Link></td>\r\n                              </tr>}\r\n                ): ''\r\n              }\r\n            </tbody>\r\n          </table>\r\n        </>\r\n    }\r\n}\r\n\r\nexport default TodayRecovery;","import axios from 'axios';\r\nimport {Component} from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nclass MonthlyRemainRecovery extends Component {\r\n\r\n    state= {\r\n        dataArray: []\r\n    }\r\n\r\n    loadData = ()=>{\r\n        axios.get(window.$domain + 'api/Analatics/GetRemainingRecoveryCurrentMonth')\r\n        .then(resp=>{\r\n            this.setState({dataArray: resp.data});\r\n        });\r\n    }\r\n    componentDidMount(){\r\n        if(this.state.dataArray.length === 0)\r\n        this.loadData();\r\n    }\r\n    dataLoader= event=>{\r\n      \r\n      axios.get(window.$domain + 'api/Analatics/GetRemainingRecoveryGivenMonth/' + new Date(event.target.value).toDateString() )\r\n        .then(resp=>{\r\n            this.setState({dataArray: resp.data});\r\n        });\r\n    }\r\n    render(){\r\n        return <>\r\n                  <input className='shadow form-control ml-1' type=\"month\" id=\"start\" name=\"start\"\r\n                  min=\"2019-03\" defaultValue = '2021-10' onChange={this.dataLoader}></input>\r\n                  \r\n                  <table class=\"table shadow table-bordered\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th >Client Name</th>\r\n                        <th >Phone</th>\r\n                        <th >Scheme Name</th>\r\n                        <th >Show Account</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {\r\n                          this.state.dataArray.length !== 0 ? this.state.dataArray.map(\r\n                            data => <tr>\r\n                                        <th>{data.name}</th>\r\n                                        <td>{data.phone}</td>\r\n                                        <td>{data.scheme}</td>\r\n                                        <td><Link to={'/Accounts/'+ data.accId +'/Payment'}>show</Link></td>\r\n                                    </tr>\r\n                        ): ''\r\n                      }\r\n                    </tbody>\r\n                  </table>\r\n                </>\r\n    }\r\n}\r\n\r\nexport default MonthlyRemainRecovery;","\r\n\r\n\r\nimport Chart from \"react-google-charts\";\r\n\r\nconst MonthlyReportChart = props =>{\r\n    return(\r\n        <Chart\r\n            width={'650px'}\r\n            height={'450px'}\r\n            chartType=\"ComboChart\"\r\n            loader={<div>Loading Chart</div>}\r\n            data={[\r\n                [\r\n                'Month',\r\n                'unPaid',\r\n                'Paid',\r\n                ],\r\n                ['Sep', 60, 150],\r\n                ['Oct', 60, 120],\r\n                ['Nov', 50, 117],\r\n                ['Dec', 25, 110],\r\n            ]}\r\n            options={{\r\n                title: props.title,\r\n                vAxis: { title: 'Paid / unPaid' },\r\n                hAxis: { title: 'By Month' },\r\n                seriesType: 'bars',\r\n                series: { 6: { type: 'line' } },\r\n            }}\r\n            rootProps={{ 'data-testid': '1' }}\r\n        />\r\n    );\r\n\r\n}\r\n\r\nexport default MonthlyReportChart;","\r\nimport MonthlyReportChart from \"./MonthlyReportChart\";\r\n\r\n\r\n\r\nconst MonthlyReport = props =>{\r\n    return(\r\n        <>\r\n        <h4>Comming Soon</h4>\r\n            <MonthlyReportChart \r\n            title='Report Number of Paid and unPaid Customer'\r\n            />\r\n            <MonthlyReportChart \r\n            title='Report Total paid amount and total Remain amount by month'\r\n            />\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default MonthlyReport;","import { Component } from \"react\"\r\nimport DashBoardNavigator from \"./DashBoardNavigator/DashBoardNavigator\";\r\nimport TodayRecovery from \"./TodayRecovery/TodayRecovery\";\r\nimport MonthlyRemainRecovery from \"./MonthlyRecoveryReport/MonthlyRecoveryReport\";\r\nimport MonthlyReport from \"./MonthlyReport/MonthlyReport\";\r\n\r\nclass MainDashBoard extends Component{\r\n    state = {\r\n        menuSwitcher: 1,\r\n    }\r\n    menuSwitchHandler = menu =>{\r\n        this.setState({menuSwitcher: menu});\r\n    }\r\n    render(){\r\n        return(\r\n            <>\r\n                <div className='col-md-3'>\r\n                    <DashBoardNavigator currentMenu={this.state.menuSwitcher} menuSwitchingHandler={this.menuSwitchHandler}/>\r\n                </div>\r\n                <div className='col-md-9'> \r\n                    {\r\n                        this.state.menuSwitcher === 1? <TodayRecovery/>\r\n                        :this.state.menuSwitcher === 2? <MonthlyRemainRecovery/>\r\n                        :this.state.menuSwitcher === 3? <MonthlyReport/>\r\n                        : ''\r\n                    }                    \r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default  MainDashBoard;","\r\nimport { Redirect } from \"react-router\";\r\nimport AdminLayout from \"./Components/AdminLayout/AdminLayout\"\r\nimport { useState } from 'react'\r\nimport Cookie from 'universal-cookie/es6';\r\nimport MainDashBoard from \"./Components/DashBoard/MainDashBoard\";\r\n\r\nconst MTTraderApp = () =>{\r\n    var [isLogin,setLogin] = useState(false);\r\n    var cookies = new Cookie();\r\n    if(cookies.get('logedInUser') !== undefined && isLogin === false){\r\n        setLogin(true);\r\n    }\r\n    \r\n    return(\r\n        <>\r\n            <AdminLayout >\r\n                {isLogin?'':<Redirect to='/login'/>}\r\n                <div className=\"jumbotron floid-container row mt-2 overflow-auto\" style={{height: '600px'}}>\r\n                    <MainDashBoard/>\r\n                </div>\r\n            </AdminLayout>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MTTraderApp;","import React from 'react';\r\nimport { Component } from 'react';\r\nimport Cookie from 'universal-cookie/es6';\r\nimport Axios from \"axios\"\r\nimport { Redirect } from \"react-router\";\r\nimport { Spinner } from 'react-bootstrap';\r\n\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            user: '',\r\n            password: '',\r\n            login: false,\r\n            displayAnimator: false\r\n        };\r\n    this.loginUser = this.loginUser.bind(this);\r\n    }\r\n    \r\n    loginUser=()=>{\r\n        this.setState({displayAnimator: true})\r\n        Axios.post(window.$domain + 'api/Users/LoginUser?UserName='+ this.state.user + '&Password='+ this.state.password )\r\n        .then(resp=>{\r\n            if(resp.data.role !== 'admin' ) \r\n            {\r\n                alert('Your are not authorize for operating Admin Control');\r\n                return ;\r\n            }\r\n            Axios.post(window.$domain + 'api/Users/GetUserDatailsId/'+ resp.data.id )\r\n                .then(\r\n                    resp=>\r\n                    {\r\n                        \r\n                        Axios.post(window.$domain + 'api/UserDetails/UpdateLastLogin/'+ resp.data )\r\n                        .then(\r\n                            resp=>\r\n                            {\r\n                                alert('You are logged in successfully')\r\n                            });\r\n                    });\r\n            var cookies = new Cookie();\r\n            cookies.set('logedInUser', {\r\n                userName: resp.data.userName,\r\n                email: resp.data.email, \r\n                role: resp.data.role, \r\n                id: resp.data.id\r\n                }, \r\n                {\r\n                path: '/',\r\n                maxAge: 3600\r\n              });\r\n              this.setState({login: true});\r\n              this.setState({displayAnimator: false})\r\n        })\r\n        .catch(\r\n            err=>{\r\n                if(err)\r\n                alert(err.message + ': Check Internet Connection or Contact Database Admin');\r\n                this.setState({displayAnimator: false});\r\n            });\r\n    }\r\n    componentDidMount(){\r\n        var cookies = new Cookie();\r\n        if(cookies.get('logedInUser') !== undefined && this.state.login === false){\r\n            this.setState({login: true});\r\n        }\r\n    }\r\n    render(){\r\n        return (\r\n            <div className=\"container mt-4\" style={{width: \"80%\"}}>\r\n                {this.state.login? this.props.history.goBack():''}\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-3 col-md-2\"></div>\r\n                    <div className=\"col-lg-6 col-md-8 login-box\">\r\n                        \r\n                        <div className=\"col-lg-12 login-title \">\r\n                            \r\n                            <p style={{textAlign: 'center'}}>\r\n                                <i className=\"fa fa-key\" aria-hidden=\"true\"></i> \r\n                                -Login\r\n                            </p>\r\n                        </div>\r\n                        <div className=\"col-lg-12 login-form\">\r\n                            <div className=\"col-lg-12 login-form\">\r\n                                <form onSubmit>\r\n                                    <div className=\"form-group\">\r\n                                        <label className=\"form-control-label\">UserName</label>\r\n                                        <input onChange={event=> this.setState({user: event.target.value})} type=\"text\" className=\"form-control\" />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label className=\"form-control-label\">Password</label>\r\n                                        <input onChange={event=> this.setState({password: event.target.value})} type=\"password\" className=\"form-control\" ></input>\r\n                                    </div>\r\n                                    <div className=\"col-lg-12 loginbttm\">\r\n                                        {\r\n                                            this.state.displayAnimator ? <Spinner animation=\"grow\" />\r\n                                            : <div className=\"col-lg-6 login-btn login-button\">\r\n                                                <button onClick={this.loginUser} className=\"btn btn-outline-primary btn-light\" style={{alignContent: \"center\"}}>\r\n                                                    Login\r\n                                                </button>\r\n                                            </div>\r\n                                        }\r\n                                        \r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-lg-3 col-md-2\">\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nexport default Login;","import { Component } from \"react\";\r\nimport Axios from \"axios\"\r\nimport {Link} from 'react-router-dom'\r\n\r\nimport { Spinner } from 'react-bootstrap';\r\nclass UserList extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          userList: [],\r\n          shopAcc: []\r\n        };\r\n    this.LoadUserList = this.LoadUserList.bind(this);\r\n    }\r\n\r\n     LoadUserList=(event)=>{\r\n        if(event === undefined)\r\n        Axios.get(window.$domain + 'api/Users').then(\r\n            resp=>{\r\n                this.setState({userList: []});\r\n                this.setState({userList: resp.data});\r\n                resp.data.map(\r\n                    userResp=>{\r\n                        Axios.get(window.$domain + 'api/ShopAccounts/ShopAccountExistsByUserId/' + userResp.id)\r\n                        .then(accResp=>{  \r\n                            var newArray = this.state.shopAcc;\r\n                            newArray.push({userId: userResp.id,isAcc: accResp.data});\r\n                            this.setState({shopAcc: newArray});\r\n                        })\r\n                        .catch(resp=>resp.data.message); \r\n                    }\r\n                )\r\n            }\r\n        ).catch(\r\n            err=>{\r\n                alert('Page:manageuser =>'+err)\r\n            }\r\n        )\r\n        else if(event.target.name === 'SearchByCnic' && event.target.value !== '' ){\r\n            Axios.get(window.$domain + 'api/Users/SearchUserbyCNIC/' + event.target.value).\r\n            then(\r\n                resp=>{\r\n                    this.setState({userList: resp.data});\r\n                }\r\n            ).catch(\r\n                err=>{\r\n                    alert('Page: Manage User =>'+err)\r\n                }\r\n            )\r\n        }\r\n        else if(event.target.name === 'SearchByName' && event.target.value !== ''){\r\n            Axios.get(window.$domain + 'api/Users/SearchUserbyName/' + event.target.value).\r\n            then(\r\n                resp=>{\r\n                    this.setState({userList: resp.data});\r\n                }\r\n            ).catch(\r\n                err=>{\r\n                    alert('Page: Manage User =>'+err)\r\n                }\r\n            )\r\n        }\r\n        console.log(this.state.shopAcc);\r\n    }\r\n    UserEnableandDisableHandler = (userId)=>\r\n    {\r\n        if(window.confirm('Attention Please! ' + 'Opration Defination: If Your User is Enabled turn Disabled if Disabled turn Enabled.'))\r\n        {\r\n            Axios.post(window.$domain + 'api/Users/UserAccountEnableandDisableHandler/' + userId)\r\n                .then(resp=> {\r\n                    console.log(resp);\r\n                    this.LoadUserList();\r\n                })\r\n                .catch(resp=> console.log(resp));\r\n            \r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        if(this.state.userList.length === 0)\r\n        this.LoadUserList();\r\n        \r\n    }\r\n    getAccState=userId=>{\r\n        var is= null;\r\n       for(let  i= 0;i<this.state.shopAcc.length;i++){\r\n            if(this.state.shopAcc[i].userId === userId)\r\n            {\r\n                is=this.state.shopAcc[i].isAcc;\r\n                break;\r\n            }\r\n       } \r\n       return is;\r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"jumbotron container-fluid overflow-auto\">\r\n               <div className='row ml-2'>\r\n                    <div class=\"form-group ml-1\">\r\n                        <label>Search by CNIC Number:</label>\r\n                        <input  type='text' class=\"form-control shadow\" onChange={this.LoadUserList} name='SearchByCnic'/>\r\n                    </div>\r\n                    <div class=\"form-group ml-1\">\r\n                        <label>Search by Name:</label>\r\n                        <input  type='text' class=\"form-control shadow\" onChange={this.LoadUserList} name='SearchByName'/>\r\n                    </div>\r\n               </div>\r\n                <h3>Users</h3>\r\n                <div className='row shadow overflow-auto m-1'>\r\n                <table className=\"table  table-bordered \">\r\n                    <thead>\r\n                        <tr >\r\n                            <th>System Id</th>\r\n                            <th>Role</th>\r\n                            <th>Name</th>\r\n                            <th>Accounts Details</th>\r\n                            <th>Add to new Scheme</th>\r\n                            <th>Shop Acc.</th>\r\n                            <th>Gender</th>\r\n                            <th>User Name</th>\r\n                            <th>Email</th>\r\n                            <th>Phone Number</th>\r\n                            <th>CNIC</th>\r\n                            <th >Last Login (DayName/Month/Day/Year) </th>\r\n                            <th>Registration Date (DayName/Month/Day/Year)</th>\r\n                            <th>User Enabled</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            this.state.userList.length > 0 ?\r\n                            this.state.userList.map(user=>{\r\n                                var isAcc=this.getAccState(user.id);\r\n                                \r\n                                return <tr key={user.id}>\r\n                                    <td>{user.id}</td>\r\n                                    <td>{user.role}</td>\r\n                                    <td>{user.name}</td>\r\n                                    <td>\r\n                                        {user.role==='admin'?'':<Link to={'/ShowAccountDetails/'+ user.id} >Show</Link>}\r\n                                    </td>\r\n                                    <td>\r\n                                        {user.role==='admin'?'':<Link to={'/User/'+ user.id + '/AddtoNewScheme'} >Add</Link>}\r\n                                    </td>\r\n                                    <td>\r\n                                        {user.role !== 'admin' ? isAcc  ? \r\n                                        <Link to={'/user/'+ user.id+'/shop'} >Go</Link>:\r\n                                        <Link to={'/user/' + user.id + '/create-shop-account'}  >Create</Link>\r\n                                        :''}\r\n                                    </td>\r\n                                    <td>{user.gender}</td>\r\n                                    <td>{user.userName}</td>\r\n                                    <td>{user.email}</td>\r\n                                    <td>{user.phoneNumber}</td>\r\n                                    <td>{user.cnic}</td>\r\n                                    <td>{new Date(user.lastLogin).toDateString() + ' ' \r\n                                     + new Date(user.lastLogin).toLocaleTimeString() }</td>\r\n                                    <td>{new Date(user.registration_Date).toDateString()}</td>\r\n                                    <td onClick={()=> this.UserEnableandDisableHandler(user.id)}>\r\n                                        {user.isUserDisabled? \r\n                                        <i  class=\"fa fa-lock\" aria-hidden=\"true\"></i> :\r\n                                        <i class=\"fa fa-check\" aria-hidden=\"true\"></i>}\r\n                                    </td>\r\n                                </tr>\r\n                            }): <Spinner animation=\"grow\"  /> \r\n                        }\r\n                    </tbody>\r\n                </table>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UserList;","import UserList from \"./UserList/AllUserList\";\r\nimport AdminLayout from '../../AdminLayout/AdminLayout'\r\nimport { useState } from 'react'\r\nimport Cookie from 'universal-cookie/es6';\r\nimport { Redirect } from \"react-router\";\r\n\r\nconst UserManagement = ()=>{\r\n    var [isLogin,setLogin] = useState(false);\r\n    var cookies = new Cookie();\r\n    if(cookies.get('logedInUser') !== undefined && isLogin === false){\r\n        setLogin(true);\r\n    }\r\n\r\n    return(\r\n        <AdminLayout >\r\n            {isLogin?'':<Redirect to='/login'/>}\r\n            <UserList/>\r\n        </AdminLayout>\r\n    );\r\n}\r\n\r\nexport default UserManagement;","const TbInputControl = props=>{\r\n    return(\r\n        <div class=\"form-group \">\r\n            <label for={props.ctrlName}>{props.Name}:</label>\r\n            <input  type={props.inutType} class=\"form-control\" onChange={props.DataInputHandler} name={props.ctrlName}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TbInputControl;","import axios from \"axios\";\r\nimport { Component } from \"react\";\r\nimport { Redirect } from \"react-router\";\r\nimport AdminLayout from \"../../../AdminLayout/AdminLayout\";\r\nimport TbInputControl from \"../UI/TbInputControl\";\r\nimport Cookie from 'universal-cookie'\r\nclass AddNewPayment extends Component{\r\n    state = {\r\n        amount: 0,\r\n        redirect: false\r\n    }\r\n    ReadyUser = event =>{\r\n        if(event.target.value > 0)\r\n            this.setState({amount: event.target.value})\r\n    }\r\n    postPaymnet= ()=>{\r\n        var cookies = new Cookie();\r\n        axios.post(\r\n            window.$domain + 'api/AccDetails',\r\n            {\r\n                \"id\": 0,\r\n                \"payedAmount\": this.state.amount,\r\n                \"payingDate\": \"2021-09-27T22:15:41.611Z\",\r\n                \"accId\": this.props.Accid,\r\n                \"postedByUserId\": cookies.get('logedInUser').id\r\n            }\r\n        ).then(\r\n            resp=>{\r\n                console.log(resp)\r\n                this.setState({redirect: true});\r\n            }\r\n        )\r\n    }\r\n    render(){\r\n        return(\r\n                <div className=\"jumbotron mt-3\">\r\n                    {\r\n                        this.state.redirect ? <Redirect to={'/Accounts/'+this.props.Accid+'/Payment'} />: ''\r\n                    }\r\n                    <h3>Add Payment</h3>\r\n                    <hr/>\r\n                    <h5>Please fill this form carefully, This transection is ir-revercible</h5>\r\n                    <hr/>\r\n                    <TbInputControl DataInputHandler={this.ReadyUser} Name={'Payment'} inutType={'number'} ctrlName={'Add Payment'} />\r\n                    <button onClick={this.postPaymnet} className='btn btn-success'>Post Amount</button>\r\n                </div>\r\n        )\r\n    }\r\n}\r\nexport default AddNewPayment;","\r\nimport AddNewPayment from \"../../UserManagement/AddNewPayment/AddNewPayment\";\r\nimport { useState } from 'react'\r\nimport Cookie from 'universal-cookie/es6';\r\nimport { Redirect } from \"react-router\";\r\n\r\nconst PaymentDetails = props=>{\r\n    var [IsReadyforPayment,setIsReadyforPayment] = useState(false);\r\n    var [isLogin,setLogin] = useState(false);\r\n    var cookies = new Cookie();\r\n    if(cookies.get('logedInUser') !== undefined && isLogin === false){\r\n        setLogin(true);\r\n    }\r\n    return(\r\n        <div className=\"jumbotron container-fluid overflow-auto\">\r\n            {isLogin?'':<Redirect to='/login'/>}\r\n            \r\n            <table className=\"table shadow table-bordered\">\r\n                <thead>\r\n                    <tr >\r\n                        <th>Date</th>\r\n                        <th>Payment</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        props.peymentHistory.map(payment=>{\r\n                            return <tr>\r\n                                        <td>{new Date(payment.payingDate).toDateString()}</td>\r\n                                        <td>{payment.payedAmount}</td>\r\n                                    </tr>\r\n                        })\r\n                    }\r\n                    \r\n                </tbody>\r\n            </table>\r\n            <button onClick={()=> IsReadyforPayment ? setIsReadyforPayment(false): setIsReadyforPayment(true)} className='btn btn-primary'>Pay Installment</button>\r\n            {\r\n                props.AccId !== 0 && IsReadyforPayment ?\r\n                <AddNewPayment Accid = {props.AccId} />: ''\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PaymentDetails;","\r\nimport { useState } from 'react';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport styles from './CardStyling.module.css'; \r\n  console.log(styles)\r\nconst AccountCard= props =>{\r\n    var [showToast,setShowtoast] = useState(false);\r\n    var toastAccountClose=toast(props.closingReason, {\r\n                                    position: \"top-right\",\r\n                                    autoClose: 10000,\r\n                                    hideProgressBar: false,\r\n                                    closeOnClick: true,\r\n                                    pauseOnHover: true,\r\n                                    draggable: true,\r\n                                    progress: undefined,\r\n                                    });\r\n    return(\r\n        <div class=\"card shadow m-2\" style={{width: '12rem'}}>\r\n            {showToast? <ToastContainer/>: ''}\r\n            <div class=\"card-body\">\r\n                <h5 class=\"card-title\">{props.schemeName}</h5>\r\n                <p class=\"card-text\">{props.desc}</p>\r\n                {props.isAccClosed? '':<button onClick={()=>props.paymentDisplayHandler(props.AccId)} class=\"btn btn-success\">Pay Installment</button>}\r\n                <button onClick={()=>{props.gotoPaymentHistory(props.AccId)}} className='btn btn-info mt-1'>Edit History</button>\r\n                {props.isAccClosed? '' :<button onClick={()=>{props.disableAcc(props.AccId)}} className='btn btn-danger mt-1'>Disable Account</button>}\r\n                {props.isAccClosed?<button onClick={()=>setShowtoast(!showToast)} className='btn btn-primary mt-1'>Show Reason</button> :''}\r\n            </div>\r\n            {props.isAccClosed? <span onClick={props.isAccClosed?()=>props.enableAcc(props.AccId):''} class={\"badge badge-danger \" + styles.zoom} > <i  class=\"fa fa-lock\" aria-hidden=\"true\"></i></span>:<span class= {\"badge badge-success \" + styles.zoom}> <i  class=\"fa fa-check\" aria-hidden=\"true\"></i></span>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AccountCard;","import axios from \"axios\";\r\nimport { Component } from \"react\";\r\nimport { Redirect } from \"react-router\";\r\nimport AdminLayout from \"../../AdminLayout/AdminLayout\";\r\nimport PaymentDetails from \"./DisplayPaymentDetails/PaymentDetails\";\r\nimport AccountCard from \"./UI/AccountCard\";\r\nimport Axios from \"axios\"\r\nimport Cookie from 'universal-cookie/es6';\r\nimport { Spinner } from 'react-bootstrap';\r\n\r\nclass AccountDetails extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            Accounts:null,\r\n            Schemes: null,\r\n            DisplayAcc: null,\r\n            AccId: 0,\r\n            gotoHistoryPaymentRedirect: null,\r\n            isLogin: true\r\n        }\r\n    }\r\n\r\n    gotoHistoryPaymentRedirectHandler=(AccId)=>{\r\n        this.setState({gotoHistoryPaymentRedirect: {\r\n            AccId: AccId,\r\n            redir: true \r\n        }})\r\n    }\r\n    AccountEnableHandler =(AccId)=>{\r\n        \r\n        var ClosingDescription = window.prompt(\"what is the reason of Enabling Account\");\r\n        if(ClosingDescription !== null)\r\n        if(window.confirm('Attention Please! ' + 'Opration Defination: Are you sure you want to --Enable-- this account'))\r\n        {\r\n            Axios.put(window.$domain + 'api/Accounts/DisableAndEnableHandler/' + AccId + '?ClosingDescription=' + ClosingDescription)\r\n                .then(resp=> {\r\n                    console.log(resp);\r\n                })\r\n                .catch(resp=> console.log(resp));\r\n            this.setState({Accounts: null});\r\n        }\r\n    }\r\n    AccountDisableHandler =(AccId)=>{\r\n        \r\n        var ClosingDescription = window.prompt(\"what is the reason of Disabling Account\");\r\n        if(ClosingDescription !== null)\r\n        if(window.confirm('Attention Please! ' + 'Opration Defination: Are you sure you want to disable this account'))\r\n        {\r\n            Axios.put(window.$domain + 'api/Accounts/DisableAndEnableHandler/' + AccId + '?ClosingDescription=' + ClosingDescription)\r\n                .then(resp=> {\r\n                    console.log(resp);\r\n                })\r\n                .catch(resp=> console.log(resp));\r\n                this.setState({Accounts: null});\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        if(this.state.Accounts === null){\r\n            axios.get(window.$domain + 'api/Accounts/GetAccountbyUserId/' + this.props.match.params.id)\r\n            .then(\r\n                resp=>{\r\n                    this.setState({Accounts: resp.data});\r\n                }\r\n            )\r\n            axios.get(window.$domain + 'api/MTServices')\r\n            .then(\r\n                resp=>{\r\n                    this.setState({Schemes: resp.data});\r\n                }\r\n            )\r\n            \r\n        }\r\n        var cookies = new Cookie();\r\n        if(cookies.get('logedInUser') === undefined)\r\n        {\r\n            this.setState({isLogin: false});\r\n        }\r\n    }\r\n    componentDidUpdate(){\r\n        if(this.state.Accounts === null){\r\n            axios.get(window.$domain + 'api/Accounts/GetAccountbyUserId/' + this.props.match.params.id)\r\n            .then(\r\n                resp=>{\r\n                    this.setState({Accounts: resp.data});\r\n                }\r\n            )\r\n            axios.get(window.$domain + 'api/MTServices')\r\n            .then(\r\n                resp=>{\r\n                    this.setState({Schemes: resp.data});\r\n                }\r\n            )\r\n        }\r\n    }\r\n\r\n    paymentDisplayHandler = (Accid)=>{\r\n        this.state.Accounts.map(\r\n            Account => {\r\n                if(Account.id === Accid ){\r\n                    this.setState({DisplayAcc: Account.accPaymentDetails});\r\n                    this.setState({AccId: Accid})\r\n                }\r\n            }\r\n        )\r\n    }\r\n    render(){\r\n        console.log(this.props.match.params.id)\r\n        return(\r\n            <AdminLayout>\r\n                {this.state.isLogin?'':<Redirect to='/login'/>}\r\n                {this.state.gotoHistoryPaymentRedirect=== null? '':<Redirect to={'/Accounts/' + this.state.gotoHistoryPaymentRedirect.AccId + '/Payment'} /> }\r\n                <div className='jumbotron mt-3'>\r\n                    <div className='row'>\r\n                        <div className='col-md-3'>\r\n                            <h5 style={{textAlign: 'center'}}>Participated Schemes</h5>\r\n                            {\r\n                                this.state.Schemes !== null && this.state.Accounts !== null ?this.state.Accounts.map(\r\n                                    Account => this.state.Schemes.map(\r\n                                        Scheme=> Scheme.id === Account.mtServiceId ? <AccountCard \r\n                                                                                        schemeName={Scheme.name} \r\n                                                                                        desc={Scheme.details} \r\n                                                                                        AccId={Account.id} \r\n                                                                                        paymentDisplayHandler ={this.paymentDisplayHandler}\r\n                                                                                        gotoPaymentHistory= {this.gotoHistoryPaymentRedirectHandler}\r\n                                                                                        isAccClosed= {Account.isAccClosed}\r\n                                                                                        disableAcc={this.AccountDisableHandler}\r\n                                                                                        closingReason={Account.closingDescription}\r\n                                                                                        enableAcc={this.AccountEnableHandler}/>: ''\r\n                                    ) \r\n                                ):  <div className='m-5'><Spinner animation=\"grow\" /></div>\r\n                            }\r\n                        </div>\r\n                        <div className='col-md-9'>\r\n                            <h5 style={{textAlign: 'center'}}>Account Payment Details</h5>\r\n                            {\r\n                                this.state.DisplayAcc? \r\n                                <PaymentDetails peymentHistory={this.state.DisplayAcc} AccId = {this.state.AccId}/>\r\n                                :'Please select a Scheme'\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </AdminLayout>\r\n        );\r\n    }\r\n}\r\nexport default AccountDetails;\r\n\r\n","import React,{ Component } from \"react\";\r\nimport AdminLayout from \"../../../AdminLayout/AdminLayout\";\r\nimport axios from 'axios';\r\nimport Cookie from 'universal-cookie';\r\nimport { Redirect } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Spinner } from \"react-bootstrap\";\r\n\r\nclass PaymentHistory extends Component{\r\n   \r\n    constructor(props) {\r\n        super(props);\r\n        this.state =  {\r\n            historyList: [],\r\n            isLogin: true,\r\n            goneToPrint: false,\r\n            searchQuery: {\r\n                startDate: null,\r\n                endDate: null\r\n            },\r\n            queryExecuted: false\r\n        };\r\n        this.queryDataLoader = this.queryDataLoader.bind(this);\r\n    }\r\n    componentDidMount(){\r\n        if(this.state.historyList.length === 0)\r\n        {\r\n            axios.get(window.$domain + 'api/AccDetails/GetAccDetailsbyAccountId/' + this.props.match.params.id)\r\n            .then(\r\n                resp=>{\r\n                        resp.data.map(\r\n                            payment => {\r\n                                axios.get(window.$domain + 'api/Users/' + payment.postedByUserId).then(\r\n                                    user=>{\r\n                                        var arrayHistory = [];\r\n                                        arrayHistory = this.state.historyList;\r\n                                        arrayHistory.push(\r\n                                            {\r\n                                                payDate: payment.payingDate, \r\n                                                paymentId: payment.id,\r\n                                                payedAmount: payment.payedAmount,\r\n                                                PostedByUser: user.data.userName\r\n                                            });\r\n                                        this.setState({historyList: arrayHistory});\r\n                                    }\r\n                                )\r\n                            }\r\n                    );\r\n                }\r\n            ).catch(\r\n                err=> {\r\n                    console.log(err);\r\n                }\r\n            )\r\n        }\r\n        var cookies = new Cookie();\r\n        if(cookies.get('logedInUser') === undefined)\r\n        {\r\n            this.setState({isLogin: false});\r\n        }\r\n    }\r\n    printModeHandler = ()=>{\r\n        this.setState({goneToPrint: !this.state.goneToPrint});\r\n    }\r\n    searchByDateTime = (event)=>{\r\n        if(event.target.name === 'Start-Date'){\r\n            this.setState({searchQuery: {\r\n                startDate: new Date(event.target.value).toLocaleDateString(),\r\n                endDate: this.state.searchQuery.endDate\r\n            }});\r\n        }\r\n        if(event.target.name === 'End-Date'){\r\n            this.setState({searchQuery: {\r\n                startDate: this.state.searchQuery.startDate,\r\n                endDate: new Date(event.target.value).toLocaleDateString()\r\n            }});\r\n        }\r\n    }\r\n    queryDataLoader(){\r\n        \r\n            if(this.state.searchQuery.startDate !== null \r\n                && this.state.searchQuery.endDate !== null)\r\n            {\r\n                this.setState({historyList: []});\r\n                axios.post(window.$domain + 'api/AccDetails/GetAccountDetailsByGivenMonth/' \r\n            + this.props.match.params.id \r\n            + '?StartDate=' + this.state.searchQuery.startDate \r\n            + '&EndDate=' + this.state.searchQuery.endDate)\r\n                .then(\r\n                    resp=>{\r\n                            resp.data.map(\r\n                                payment => {\r\n                                    axios.get(window.$domain + 'api/Users/' + payment.postedByUserId).then(\r\n                                        user=>{\r\n                                            var arrayHistory = [];\r\n                                            arrayHistory = this.state.historyList;\r\n                                            arrayHistory.push(\r\n                                                {\r\n                                                    payDate: payment.payingDate, \r\n                                                    paymentId: payment.id,\r\n                                                    payedAmount: payment.payedAmount,\r\n                                                    PostedByUser: user.data.userName\r\n                                                });\r\n                                            this.setState({historyList: arrayHistory});\r\n                                        }\r\n                                    )\r\n                                }\r\n                        );\r\n                    }\r\n                ).catch(\r\n                    err=> {\r\n                        console.log(err);\r\n                    }\r\n                )\r\n            }\r\n    }\r\n    render(){\r\n        return(\r\n            <AdminLayout>\r\n                {this.state.isLogin?'':<Redirect to='/login'/>}\r\n                {!this.state.goneToPrint?\r\n                <div className=\"jumbotron container-fluid overflow-auto\" >\r\n                    <h2>Payment History</h2>\r\n                    <label for=\"StartMonth\">Start Month:</label>\r\n                    <input className='shadow form-control  ml-1' type=\"date\" id=\"StartMonth\" name=\"Start-Date\"\r\n                    defaultValue = '2021-10' onChange={this.searchByDateTime}></input>\r\n                    <label for=\"End-Month\">End Month:</label>\r\n                    <input className='shadow form-control ml-1' type=\"date\" id=\"start\" name=\"End-Date\"\r\n                      onChange={this.searchByDateTime}></input>\r\n                    <div className='row'>\r\n                    <button className='btn btn-light mt-2'  style={{marginLeft: 'auto', marginRight: '5px'}}\r\n                      onClick={this.queryDataLoader}>Search</button>\r\n                    </div>\r\n                    {\r\n                        this.state.historyList !== null ?\r\n                        <DisplayHistory  \r\n                        paymentHistoryList= {this.state.historyList} \r\n                        AccID={this.props.match.params.id}\r\n                        isPrintable= {false}\r\n                         />\r\n                        : <Spinner animation=\"grow\" />\r\n                    }\r\n                    <button onClick={()=>this.setState({goneToPrint: true})} className='btn btn-primary'>Print</button>\r\n            </div>\r\n            :<DisplayHistory backToAppMode={this.printModeHandler}  isPrintable= {true}  paymentHistoryList= {this.state.historyList} AccID={this.props.match.params.id} />}\r\n            </AdminLayout>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nexport class DisplayHistory extends Component {\r\n    state = {\r\n        redirect: false,\r\n        sum: 0\r\n    }\r\n    componentDidMount(){\r\n        this.updateComponent();\r\n    }\r\n    componentDidUpdate(){\r\n        this.updateComponent();\r\n    }\r\n    updateComponent=()=>{\r\n        if(this.props.paymentHistoryList.length > null && this.state.sum === 0)\r\n        {\r\n            var sum=0;\r\n            this.props.paymentHistoryList.map(payment=>{\r\n                sum=sum+payment.payedAmount;\r\n            })\r\n            this.setState({sum: sum});\r\n        }\r\n    }\r\n    printPage(){\r\n        window.print();\r\n        this.props.backToAppMode();\r\n    }\r\n    render() {\r\n      return (\r\n        <div className='m-2'>\r\n        {\r\n           this.props.isPrintable? <>\r\n            <h4>Total Paid Amount: PKR {this.state.sum}</h4>\r\n            <h5>Scheme ID: {this.props.AccID}</h5>\r\n            </>:''\r\n        }\r\n        <table className='table '>\r\n         <thead>\r\n            <tr >\r\n                <th>Date -- Time</th>\r\n                <th>Payment</th>\r\n                <th>Payment Received By</th>\r\n                {this.props.isPrintable?'':<th>Amount Modification</th>}\r\n            </tr>\r\n        </thead>\r\n          <tbody>\r\n          {this.props.paymentHistoryList?\r\n          this.props.paymentHistoryList.map(payment=>{\r\n                return <tr>\r\n                            <td>{new Date(payment.payDate).toDateString() + ' -- ' + new Date(payment.payDate).toLocaleTimeString() }</td>\r\n                            <td>{payment.payedAmount}</td>\r\n                            <td>{payment.PostedByUser}</td>\r\n                            {this.props.isPrintable?'':<td><Link to={'/account/payment/modification/' + payment.paymentId}>modify</Link></td>}\r\n                    </tr>\r\n                })\r\n                :''}\r\n          </tbody>\r\n        </table>\r\n        {this.props.isPrintable?\r\n        <a onClick={()=>this.printPage()} style={{cursor: 'pointer', color: \"white\", backgroundColor: 'gray'}} >Print Out</a>:''}\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n\r\nexport default PaymentHistory;\r\n","import axios from \"axios\";\r\nimport React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router\";\r\nimport AdminLayout from \"../../../AdminLayout/AdminLayout\";\r\nimport TbInputControl from \"../UI/TbInputControl\";\r\n\r\n\r\nclass CreateNewUser extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            \"id\": 0,\r\n            \"email\": \"\",\r\n            \"role\": \"user\",\r\n            \"userName\": \"\",\r\n            \"password\": \"\",\r\n            \"userDetails\": {\r\n              \"id\": 0,\r\n              \"name\": \"\",\r\n              \"cnic\": \"\",\r\n              \"phoneNumber\": \"\",\r\n              \"address\": \"\",\r\n              \"gender\": \"\",\r\n              \"registration_Date\": \"\"\r\n            },\r\n            MTServices:[],\r\n            redirect: false\r\n        };\r\n        this.amountInputRef = React.createRef();\r\n        this.ReadyUser = this.ReadyUser.bind(this);\r\n    }\r\n    ReadyUser=(event)=>{\r\n        if(event.target.name === 'GetFullName'){\r\n            this.setFullName(event.target)\r\n        }\r\n        else if(event.target.name === 'GetUserName'){\r\n            this.setUserName(event.target)\r\n        }\r\n        else if(event.target.name === 'GetGender'){\r\n            this.setGender(event.target)\r\n        }\r\n        else if(event.target.name === 'GetEmail'){\r\n            this.setEmail(event.target)\r\n        }\r\n        else if(event.target.name === 'GetPassword'){\r\n            this.setPassword(event.target)\r\n        }\r\n        else if(event.target.name === 'GetCNIC'){\r\n            this.setCNIC(event.target)\r\n        }\r\n        else if(event.target.name === 'GetAddress'){\r\n            this.setAddress(event.target)\r\n        }\r\n        else if(event.target.name === 'GetPhone'){\r\n            this.setPhoneNumber(event.target)\r\n        }\r\n    }\r\n    setFullName =(target)=>{\r\n        this.setState({userDetails: {\r\n            \"id\": 0,\r\n            \"name\": target.value,\r\n            \"cnic\": this.state.userDetails.cnic,\r\n            \"phoneNumber\": this.state.userDetails.phoneNumber,\r\n            \"address\": this.state.userDetails.address,\r\n            \"gender\": this.state.userDetails.gender,\r\n            \"registration_Date\": this.state.userDetails.registration_Date\r\n          }});\r\n        console.log(this.state)\r\n    }\r\n    setGender =(target)=>{\r\n        this.setState({userDetails: {\r\n            \"id\": 0,\r\n            \"name\": this.state.userDetails.name,\r\n            \"cnic\": this.state.userDetails.cnic,\r\n            \"phoneNumber\": this.state.userDetails.phoneNumber,\r\n            \"address\": this.state.userDetails.address,\r\n            \"gender\": target.value,\r\n            \"registration_Date\": this.state.userDetails.registration_Date\r\n          }});\r\n    }\r\n    setUserName = (target)=>{\r\n        this.setState({userName: target.value});\r\n    }\r\n    setEmail = (target)=>{\r\n        this.setState({email: target.value});\r\n        console.log(this.state)\r\n    }\r\n    setPassword = (target)=>{\r\n        this.setState({password: target.value});\r\n        console.log(this.state)\r\n    }\r\n    setCNIC =(target)=>{\r\n        this.setState({userDetails: {\r\n            \"id\": 0,\r\n            \"name\": this.state.userDetails.name,\r\n            \"cnic\": target.value,\r\n            \"phoneNumber\": this.state.userDetails.phoneNumber,\r\n            \"address\": this.state.userDetails.address,\r\n            \"gender\": this.state.userDetails.gender,\r\n            \"registration_Date\": this.state.userDetails.registration_Date\r\n          }});\r\n        console.log(this.state)\r\n    }\r\n    setAddress =(target)=>{\r\n        this.setState({userDetails: {\r\n            \"id\": 0,\r\n            \"name\": this.state.userDetails.name,\r\n            \"cnic\": this.state.userDetails.cnic,\r\n            \"phoneNumber\": this.state.userDetails.phoneNumber,\r\n            \"address\": target.value,\r\n            \"gender\": this.state.userDetails.gender,\r\n            \"registration_Date\": this.state.userDetails.registration_Date\r\n          }});\r\n        console.log(this.state)\r\n    }\r\n    setPhoneNumber =(target)=>{\r\n        this.setState({userDetails: {\r\n            \"id\": 0,\r\n            \"name\": this.state.userDetails.name,\r\n            \"cnic\": this.state.userDetails.cnic,\r\n            \"phoneNumber\": target.value,\r\n            \"address\": this.state.userDetails.address,\r\n            \"gender\": this.state.userDetails.gender,\r\n            \"registration_Date\": this.state.userDetails.registration_Date\r\n          }});\r\n        console.log(this.state)\r\n    }\r\n\r\n    setUserType= (event)=>\r\n    {\r\n        this.setState({role: event.target.value});\r\n    }\r\n    \r\n    CreatNewUser = ()=>{\r\n        axios.post(\r\n                window.$domain + 'api/Users',\r\n                {\r\n                    \"id\": 0,\r\n                    \"email\": this.state.email,\r\n                    \"userName\": this.state.userName,\r\n                    \"password\": this.state.password,\r\n                    \"role\": this.state.role,\r\n                    \"userDetail\": {\r\n                        \"id\": 0,\r\n                        \"name\": this.state.userDetails.name,\r\n                        \"cnic\": this.state.userDetails.cnic,\r\n                        \"phoneNumber\": this.state.userDetails.phoneNumber,\r\n                        \"address\": this.state.userDetails.address,\r\n                        \"gender\": this.state.userDetails.gender,\r\n                    }\r\n                }    \r\n            )\r\n        .then(response => this.setState({redirect: true}))\r\n        .catch(\r\n            err=>\r\n            {\r\n                alert(err.response.data);\r\n            }\r\n            );\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <AdminLayout>\r\n            <div className=\"jumbotron\">\r\n                {this.state.redirect?<Redirect to='/manageuser'/>:''}\r\n                <h3>Create New User</h3>\r\n                <hr/>\r\n                <h5>Please Select User Type</h5>\r\n                <select class=\"form-select form-select-lg\" onChange={this.setUserType} aria-label=\".form-select-sm example\">\r\n                <option selected>user</option>\r\n                <option>worker</option>\r\n                </select>\r\n                <hr/>\r\n                <h5>User Information</h5>\r\n                <hr/>\r\n                    <TbInputControl DataInputHandler={this.ReadyUser} Name={'Full Name'} inutType={'text'} ctrlName={'GetFullName'} />\r\n                    <TbInputControl DataInputHandler={this.ReadyUser} Name={'User Name'} inutType={'text'} ctrlName={'GetUserName'} />\r\n                    <TbInputControl DataInputHandler={this.ReadyUser} Name={'E-mail'} inutType={'email'} ctrlName={'GetEmail'} />\r\n                    <TbInputControl DataInputHandler={this.ReadyUser} Name={'Password'} inutType={'password'} ctrlName={'GetPassword'} />\r\n                    <TbInputControl DataInputHandler={this.ReadyUser} Name={'Phone Number'} inutType={'text'} ctrlName={'GetPhone'} />\r\n                    <TbInputControl DataInputHandler={this.ReadyUser} Name={'CNIC'} inutType={'text'} ctrlName={'GetCNIC'} />\r\n                    <TbInputControl DataInputHandler={this.ReadyUser} Name={'Complete Address'} inutType={'text'} ctrlName={'GetAddress'} />\r\n                    <TbInputControl DataInputHandler={this.ReadyUser} Name={'Gender'} inutType={'text'} ctrlName={'GetGender'} />\r\n                    <button onClick={this.CreatNewUser} className='btn btn-secondary'>Create</button>\r\n                </div>\r\n                \r\n            </AdminLayout>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CreateNewUser;","import { Component } from \"react\";\r\nimport React from 'react'\r\nimport AdminLayout from '../../../AdminLayout/AdminLayout'\r\nimport TbInputControl from '../UI/TbInputControl'\r\nimport axios from \"axios\";\r\nimport { Redirect } from \"react-router\";\r\nimport Cookie from 'universal-cookie';\r\n\r\nclass AttachWithNewScheme extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            AccProtoType:{\r\n                \"id\": 0,\r\n                \"amountPayable\": 0,\r\n                \"monthlyInstalment\": 0,\r\n                \"isAccClosed\": false,\r\n                \"userid\": 0,\r\n                \"mtServiceId\": 0,\r\n                \"accPaymentDetails\": null\r\n            },\r\n            MTServices: null,\r\n            redirect: false,\r\n            isLogin: true\r\n        };\r\n        this.amountInputRef = React.createRef();\r\n        this.ReadyUser = this.ReadyUser.bind(this);\r\n    }\r\n\r\n    ReadyUser=(event)=>{\r\n        if(event.target.name === 'GetAmountPayable')\r\n        {\r\n            this.TotalAmountPayable(event.target)\r\n        }\r\n        else if(event.target.name === 'GetMonthlyInstallment'){\r\n            this.MonthlyInstallment(event.target)\r\n        }\r\n    }\r\n\r\n    TotalAmountPayable = target =>{\r\n        this.setState({AccProtoType: \r\n            {\r\n                \"id\": 0,\r\n                \"amountPayable\": target.value,\r\n                \"monthlyInstalment\": this.state.AccProtoType.monthlyInstalment,\r\n                \"isAccClosed\": false,\r\n                \"userid\": this.state.AccProtoType.userid,\r\n                \"mtServiceId\": this.state.AccProtoType.mtServiceId,\r\n                \"accPaymentDetails\": null\r\n            }\r\n        })\r\n    }\r\n\r\n    MonthlyInstallment = target=>{\r\n        this.setState({AccProtoType: \r\n            {\r\n                \"id\": 0,\r\n                \"amountPayable\": this.state.AccProtoType.amountPayable,\r\n                \"monthlyInstalment\": target.value,\r\n                \"isAccClosed\": false,\r\n                \"userid\": this.state.AccProtoType.userid,\r\n                \"mtServiceId\":this.state.AccProtoType.mtServiceId,\r\n                \"accPaymentDetails\": null\r\n            }\r\n        })\r\n    }\r\n\r\n    PostData=()=>{\r\n        axios.get(window.$domain + 'api/Accounts/GetAccountbyUserId/' + this.state.AccProtoType.userid)\r\n        .then(\r\n            resp=> {\r\n                var duplicated = false;\r\n                resp.data.map(acc=>{\r\n                    if(acc.mtServiceId === this.state.AccProtoType.mtServiceId)\r\n                    {\r\n                        duplicated = true;\r\n                        alert('Sorry! You are not allow to make duplication')\r\n                    }\r\n                });\r\n                if(!duplicated)\r\n                {\r\n                    axios.post(window.$domain + 'api/Accounts',this.state.AccProtoType)\r\n                        .then(resp=> {\r\n                            this.setState({redirect: true});\r\n                        }). catch(\r\n                            resp=> alert(resp.data.message)\r\n                        );\r\n                }\r\n            }\r\n        ). catch(\r\n            resp=> alert(resp.data.message)\r\n        );\r\n    }\r\n\r\n    MTServiceSelection = (event) => {\r\n        if(event.target.value !== 'Please Select Scheme/Product'){\r\n            this.state.MTServices.map(\r\n                mtService=>{\r\n                    if(mtService.name === event.target.value){\r\n                        this.setState({AccProtoType: \r\n                            {\r\n                                \"id\": 0,\r\n                                \"amountPayable\": this.state.AccProtoType.amountPayable,\r\n                                \"monthlyInstalment\": this.state.AccProtoType.monthlyInstalment,\r\n                                \"isAccClosed\": false,\r\n                                \"userid\": this.state.AccProtoType.userid,\r\n                                \"mtServiceId\": mtService.id,\r\n                                \"accPaymentDetails\": null\r\n                            }\r\n                        })\r\n                    }\r\n                }\r\n            )\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        if(this.state.AccProtoType.userid === 0){\r\n            this.setState({AccProtoType: {\r\n                \"id\": 0,\r\n                \"amountPayable\": this.state.AccProtoType.amountPayable,\r\n                \"monthlyInstalment\": this.state.AccProtoType.monthlyInstalment,\r\n                \"isAccClosed\": false,\r\n                \"userid\": this.props.match.params.id,\r\n                \"mtServiceId\": this.state.AccProtoType.mtServiceId,\r\n                \"accPaymentDetails\": null\r\n            }})\r\n        }\r\n        if(this.state.MTServices === null){\r\n            axios.get(window.$domain + 'api/MTServices').\r\n            then(resp=>{\r\n                this.setState({MTServices: resp.data});\r\n            });\r\n        }\r\n        var cookies = new Cookie();\r\n        if(cookies.get('logedInUser') === undefined)\r\n        {\r\n            this.setState({isLogin: false});\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <AdminLayout>\r\n                {this.state.isLogin?'':<Redirect to='/login'/>}\r\n                {this.state.redirect? <Redirect to='/manageuser'/>: ''}\r\n                <div className='jumbotron'>\r\n                    <div className='container-fluid'>\r\n                        <h5>Add User to New Scheme</h5>\r\n                        <hr/> \r\n                        <h6>Please Select Scheme/Product</h6>\r\n                        <hr/>\r\n                            <select class=\"form-select form-select-lg\" onChange={this.MTServiceSelection} aria-label=\".form-select-sm example\">\r\n                            <option selected>Please Select Scheme/Product</option>\r\n                                {\r\n                                    this.state.MTServices?\r\n                                    this.state.MTServices.map(MTService=>{\r\n                                        return <option key={MTService.id}>{MTService.name}</option>\r\n                                    }):\r\n                                    <option selected>Wait We are trying to Load Your Providing Services</option>\r\n                                }\r\n                            </select>\r\n                    </div>\r\n                    <hr/>\r\n                    <div class=\"form-group \">\r\n                        <label for='GetAmountPayable'>Total Amount Payable:</label>\r\n                        <input ref={this.amountInputRef} type='number' class=\"form-control\" onChange={this.ReadyUser} name='GetAmountPayable'/>\r\n                    </div>\r\n                    <TbInputControl DataInputHandler={this.ReadyUser} Name={'Monthly Installment'} inutType={'number'} ctrlName={'GetMonthlyInstallment'} />\r\n                    <button className=\"btn btn-success\" onClick={this.PostData}>Add User to this Sceme</button>\r\n                </div>\r\n            </AdminLayout>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default AttachWithNewScheme;","import { Component } from \"react\";\r\nimport AdminLayout from \"../../AdminLayout/AdminLayout\";\r\nimport Axios from \"axios\";\r\nimport {Link} from 'react-router-dom';\r\nimport Cookie from 'universal-cookie';\r\nimport { Redirect } from \"react-router\";\r\n\r\nclass ProductManager extends Component{\r\n    state = {\r\n        mtServices: null,\r\n        isLogin: true\r\n    }\r\n    \r\n\r\n    componentDidMount(){\r\n        if(this.state.mtServices===null){\r\n            Axios.get(window.$domain + 'api/MTServices').then(\r\n                resp=>{\r\n                    this.setState({mtServices: resp.data});\r\n                }\r\n            ).catch(\r\n                err=>{\r\n                    alert('Page: Product Load =>'+ err)\r\n                }\r\n            )\r\n        }\r\n        var cookies = new Cookie();\r\n        if(cookies.get('logedInUser') === undefined)\r\n        {\r\n            this.setState({isLogin: false});\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <AdminLayout>\r\n                {/* {this.state.isLogin?'':<Redirect to='/login'/>} */}\r\n                <div className='jumbotron'>\r\n                    <h3>Manage Products/Schemes</h3>\r\n                    <div className='row m-1 overflow-auto'>\r\n                        <table className=\"table shadow table-bordered \">\r\n                            <thead>\r\n                                <tr >\r\n                                    <th>Id</th>\r\n                                    <th>Name</th>\r\n                                    <th>Total Amount</th>\r\n                                    <th>Details</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                            {\r\n                                this.state.mtServices?\r\n                                this.state.mtServices.map(service=>{\r\n                                    return  <tr>\r\n                                                <td>{service.id}</td>\r\n                                                <td>{service.name}</td>\r\n                                                <td>{service.amount}</td>\r\n                                                <td>{service.details}</td>\r\n                                            </tr>\r\n                                }):'we are loading data from server'\r\n                            }\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                    <Link className='btn btn-success shadow' to='/AddProduct' >Add More Product</Link>\r\n                </div>\r\n            </AdminLayout>\r\n\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default ProductManager;","const TbInput = props=>{\r\n    return(\r\n        <div class=\"form-group \">\r\n            <label for={props.name}>{props.Name}:</label>\r\n            <input  type={props.type} class=\"form-control\" onChange={props.DataInputHandler} name={props.Name}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TbInput;","import { Component } from \"react\";\r\nimport AdminLayout from \"../../../AdminLayout/AdminLayout\";\r\nimport Axios from \"axios\"\r\nimport TbInput from '../UI/TbInput'\r\nimport { Link } from \"react-router-dom\";\r\nimport { Redirect } from \"react-router\";\r\nclass AddNewProduct extends Component\r\n{\r\n    state = {\r\n        newProduct: {\r\n            id: 0,\r\n            name:'',\r\n            amount: 0,\r\n            details: ''            \r\n        },\r\n        redirect: false\r\n    }\r\n    inputHandler = event=>{\r\n        if(event.target.name === 'Scheme/Product Name')\r\n            this.handleName(event.target.value)\r\n            else if(event.target.name === 'Total Amount')\r\n                this.handleAmount(event.target.value)\r\n                else if(event.target.name === 'Add Details')\r\n                     this.handleDetails(event.target.value)\r\n    }\r\n\r\n    handleName = value =>{\r\n        this.setState({newProduct: {\r\n            id: 0,\r\n            name: value,\r\n            amount: this.state.newProduct.amount,\r\n            details: this.state.newProduct.details            \r\n        }})\r\n    }\r\n    \r\n    handleAmount = value =>{\r\n        this.setState({newProduct: {\r\n            id: 0,\r\n            name:  this.state.newProduct.name,\r\n            amount: value,\r\n            details: this.state.newProduct.details            \r\n        }})\r\n    }\r\n    \r\n    handleDetails = value =>{\r\n        this.setState({newProduct: {\r\n            id: 0,\r\n            name:  this.state.newProduct.name,\r\n            amount: this.state.newProduct.amount,\r\n            details:  value           \r\n        }})\r\n    }\r\n\r\n    postNewProduct = ()=>{\r\n        Axios.post(window.$domain + 'api/MTServices',this.state.newProduct).then(resp=>{\r\n            this.setState({redirect: true})\r\n        }).catch(err=>{\r\n            alert(err)\r\n        })\r\n    }\r\n    render(){\r\n        return  <AdminLayout>\r\n                    {\r\n                        this.state.redirect? <Redirect to='/products'/>:''\r\n                    }\r\n                    <div className='jumbotron'>\r\n                        <h3>Add New Product</h3>\r\n                        <TbInput DataInputHandler={this.inputHandler} Name='Scheme/Product Name' type='text'   />\r\n                        <TbInput DataInputHandler={this.inputHandler} Name='Total Amount' type='Number'   />\r\n                        <TbInput DataInputHandler={this.inputHandler} Name='Add Details' type='text'   />\r\n                        <Link className='btn btn-success' onClick={this.postNewProduct}>Add Product</Link>\r\n                    </div>\r\n                </AdminLayout>\r\n    }\r\n}\r\nexport default AddNewProduct;","import axios from \"axios\";\r\nimport { Component } from \"react\";\r\nimport { Redirect } from \"react-router\";\r\nimport AdminLayout from \"../../../AdminLayout/AdminLayout\";\r\nimport TbInputControl from '../../UserManagement/UI/TbInputControl';\r\nimport Cookie from 'universal-cookie';\r\n\r\n\r\nclass ModifyPayment extends Component{\r\n    state = {\r\n        amount: 0,\r\n        EntryDateTime: null,\r\n        redirect: false,\r\n        accDetailsId: 0,\r\n        isLogin: true\r\n    }\r\n    ReadyUser = event =>{\r\n        if(event.target.value > 0)\r\n            this.setState({amount: event.target.value})\r\n    }\r\n    postPaymnet= ()=>{\r\n        axios.get(window.$domain + 'api/AccDetails/' + this.props.match.params.id)\r\n        .then(resp=>{\r\n            var data = resp.data;\r\n            data.payedAmount = this.state.amount;\r\n            data.payingDate = this.state.EntryDateTime;\r\n            axios.put(window.$domain + 'api/AccDetails/' + this.props.match.params.id,data)\r\n            .then(modifiedResp=>{\r\n                \r\n                this.setState({accDetailsId: resp.data.accId});\r\n                this.setState({redirect: true});\r\n            });\r\n        })\r\n        .catch(err=>{\r\n            alert(err);\r\n        });\r\n    }\r\n    EntryDateTimeHandler = (event)=>{\r\n        this.setState({EntryDateTime: event.target.value});\r\n    }\r\n    componentDidMount(){\r\n        var cookies = new Cookie();\r\n        if(cookies.get('logedInUser') === undefined)\r\n        {\r\n            this.setState({isLogin: false});\r\n        }\r\n    }\r\n    render(){\r\n        return(\r\n                <AdminLayout>\r\n                    {this.state.isLogin?'':<Redirect to='/login'/>}\r\n                    <div className=\"jumbotron mt-3\">\r\n                    {\r\n                        this.state.redirect ? <Redirect to={'/Accounts/'+this.state.accDetailsId+'/Payment'} />: ''\r\n                    }\r\n                    <h3>Modify Payment</h3>\r\n                    <hr/>\r\n                        <label for=\"Entry\">Entry Date Time:--</label>\r\n                        <input onChange={this.EntryDateTimeHandler} type=\"datetime-local\" id=\"Entry\" name=\"Entry\"/>\r\n                        <TbInputControl DataInputHandler={this.ReadyUser} Name={'Payment'} inutType={'number'} ctrlName={'Add Payment'} />\r\n                        <button onClick={this.postPaymnet} className='btn btn-success'>Post Amount</button>\r\n                    </div>\r\n                </AdminLayout>\r\n        )\r\n    }\r\n}\r\nexport default ModifyPayment;","import { Component } from \"react\";\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass NavBar extends Component{\r\n    render(){\r\n        return(\r\n            <nav className=\" navbar-expand-lg navbar navbar-light bg-dark  py-3\" id=\"mainNav\">\r\n                <div className=\"container\">\r\n                    <Link to=\"/shop\" class=\"navbar-brand js-scroll-trigger\" >Shop Account Management</Link>\r\n                    <button className=\"navbar-toggler navbar-toggler-right\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarResponsive\" aria-controls=\"navbarResponsive\" aria-expanded=\"false\" aria-label=\"Toggle navigation\"><span className=\"navbar-toggler-icon\"></span></button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarResponsive\">\r\n                        <ul className=\"navbar-nav ml-auto my-2 my-lg-0\">\r\n                            <li className=\"nav-item\"><Link className=\"nav-link js-scroll-trigger\" to=\"/manageuser\">Admin Home</Link></li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        );   \r\n    } \r\n}\r\n\r\n\r\nexport default NavBar;","import React from 'react';\r\nimport ShopNavBar from '../NavBar/ShopNav';\r\nconst ShopAdminLayout = props =>{\r\n    return(\r\n        <>\r\n            <ShopNavBar/>\r\n            {props.children}\r\n        </>\r\n    );    \r\n}\r\n\r\nexport default ShopAdminLayout;","const HeaderBox= props=><div class=\"card  shadow h-30 py-1\">\r\n            <div class=\"card-body\">\r\n                <div class=\"row no-gutters align-items-center\">\r\n                    <div class=\"col mr-2\">\r\n                        <div class=\"text-xs font-weight-bold text-primary text-uppercase mb-1\">\r\n                            Current Amount</div>\r\n                        <div class=\"h5 mb-0 font-weight-bold text-gray-800\">PKR {props.currentAmount}/-</div>\r\n                    </div>\r\n                    <div class=\"col-auto\">\r\n                        <i class=\"fas fa-calendar fa-2x text-gray-300\"></i>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n          </div>\r\n\r\nexport default HeaderBox;","\r\n\r\n\r\nconst PaymentHistory = (props) => {\r\n    var i= 0;\r\n    return (\r\n        <div>\r\n            <table className=\"table mt-2 shadow\">\r\n                <thead>\r\n                    <tr>\r\n                        <th scope=\"col\">No#</th>\r\n                        <th scope=\"col\">Title</th>\r\n                        <th scope=\"col\">Received</th>\r\n                        <th scope=\"col\">Paid</th>\r\n                        <th scope=\"col\" tooltip='Transection Date'>Transection Date Time</th>\r\n                        <th scope=\"col\">Description</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {props.accHistory.map(AccPayment=>{\r\n                        i+=1;\r\n                        return <tr>\r\n                        <td>{i}</td>\r\n                        <th scope=\"row\">{AccPayment.paymentTitle}</th>\r\n                        <td>{AccPayment.amountRecived}</td>\r\n                        <td>{AccPayment.amountPaid}</td>\r\n                        <td>{AccPayment.transectionDate}</td>\r\n                        <td>{AccPayment.paymentDescription}</td>\r\n                    </tr>\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PaymentHistory;","import { Component } from \"react\"\r\nimport { Jumbotron } from \"react-bootstrap\";\r\nimport ShopAdminLayout from \"../../AdminLayout/ShopAdminLayout\";\r\nimport HeaderBox from \"./HeaderBox/HeaderBox\";\r\nimport PaymentHistory from \"./PaymentHistory/PaymentHistory\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Shop extends Component\r\n{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state =  {\r\n            accHistory: [],\r\n            currentAmount: 0,\r\n            shopId: 0,\r\n            searchQuery: {\r\n                startDate: null,\r\n                endDate: null\r\n            }, \r\n            redirectToLogin: false\r\n        };\r\n        this.queryDataLoader = this.queryDataLoader.bind(this);\r\n    }\r\n    \r\n    componentDidMount(){\r\n        if(this.state.accHistory.length === 0){\r\n            axios.get(window.$domain + 'api/ShopAccountPaymentHistories/GetShopAccountPaymentHistorybuUserId/' + this.props.match.params.id)\r\n            .then(resp=>{\r\n                this.setState({accHistory: resp.data});\r\n            }).catch(resp=>{\r\n                alert(resp);\r\n            });\r\n        }\r\n        axios.get(window.$domain + 'api/ShopAccounts/GetShopAccountByUserId/' + this.props.match.params.id)\r\n            .then(resp=>{\r\n                this.setState({currentAmount: resp.data.currentPayment});\r\n                this.setState({shopId: resp.data.id});\r\n            }).catch(resp=>{\r\n                alert(resp.data.message);\r\n            });\r\n    }\r\n    \r\n    searchByDateTime = (event)=>{\r\n        if(event.target.name === 'Start-Date'){\r\n            this.setState({searchQuery: {\r\n                startDate: new Date(event.target.value).toLocaleDateString(),\r\n                endDate: this.state.searchQuery.endDate\r\n            }});\r\n        }\r\n        if(event.target.name === 'End-Date'){\r\n            this.setState({searchQuery: {\r\n                startDate: this.state.searchQuery.startDate,\r\n                endDate: new Date(event.target.value).toLocaleDateString()\r\n            }});\r\n        }\r\n    }\r\n\r\n    queryDataLoader(){\r\n        if(this.state.searchQuery.startDate !== null && this.state.searchQuery.endDate !== null)\r\n        {\r\n            axios.get(window.$domain + 'api/ShopAccountPaymentHistories/SearchShopAccountPaymentHistorybuUserId/' \r\n        + this.props.match.params.id \r\n        + '?StartDate=' + this.state.searchQuery.startDate \r\n        + '&EndDate=' + this.state.searchQuery.endDate)\r\n            .then(\r\n                resp=>{\r\n                        this.setState({accHistory: resp.data});\r\n                }\r\n            ).catch(\r\n                err=> {\r\n                    console.log(err);\r\n                }\r\n            )\r\n        }\r\n        else alert('Check Start and End Date');\r\n}\r\n\r\n    render(){\r\n        console.log(this)\r\n        return(<>\r\n                <ShopAdminLayout>\r\n                    <Jumbotron>\r\n                    <HeaderBox currentAmount= {this.state.currentAmount}/>\r\n                        <div className='row'>\r\n                            <div className='col-md-6'>\r\n                            <label for=\"StartMonth\">Start Date:</label>\r\n                            <input className='shadow form-control shadow' type=\"date\" id=\"StartMonth\" name=\"Start-Date\"\r\n                            defaultValue = '2021-10' onChange={this.searchByDateTime}></input>\r\n                            </div>\r\n                            <div className='col-md-6'>\r\n                                <label for=\"End-Month\">End Date:</label>\r\n                                <input className='shadow form-control shadow' type=\"date\" id=\"start\" name=\"End-Date\"\r\n                                    onChange={this.searchByDateTime}></input>\r\n                            </div>\r\n                        </div>\r\n                        <div className='row m-1'>\r\n                            <Link to={'/user/' +  this.props.match.params.id  +  '/shop/' + this.state.shopId + '/NewTransection'} className='shadow btn btn-danger m-1'>New Transaction</Link>\r\n                            <button onClick={()=>{window.print()}} className='shadow btn btn-success m-1'>Print</button>\r\n                            <button className='btn btn-light mt-1 shadow'  style={{marginLeft: 'auto', marginRight: '5px'}}\r\n                            onClick={this.queryDataLoader}>Search</button>\r\n                        </div>\r\n                        <PaymentHistory accHistory={this.state.accHistory} />\r\n                    </Jumbotron> \r\n                </ShopAdminLayout>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Shop;","const TrensectionTypeCheckBoxs = (props)=>{\r\n    return <>\r\n            <form >\r\n                <div class=\"form-check-inline\">\r\n                    <label class=\"form-check-label\">\r\n                        <input  type=\"radio\" class=\"form-check-input\" name='T-Type' id=\"receive\" onClick={props.t_State} />On Amount Receive\r\n                    </label>\r\n                </div>\r\n                <div class=\"form-check-inline\">\r\n                    <label class=\"form-check-label\">\r\n                        <input type=\"radio\"  class=\"form-check-input\" name='T-Type' id=\"pay\" onClick={props.t_State} />On Amount Paid\r\n                    </label>\r\n                </div>\r\n            </form>\r\n        </>\r\n}\r\n\r\nexport default TrensectionTypeCheckBoxs","import { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport TbInput from '../../ProductManager/UI/TbInput';\r\nimport TransectionTypeCheckBoxs from './TransectionTypeCheckBoxs';\r\nimport Axios from 'axios';\r\nimport ShopAdminLayout from \"../../../AdminLayout/ShopAdminLayout\";\r\nimport { Redirect } from 'react-router'\r\n \r\nclass NewTransection extends Component\r\n{\r\n    state= {\r\n            \"id\": 0,\r\n            \"paymentTitle\": \"\",\r\n            \"amountRecived\": 0,\r\n            \"amountPaid\": 0,\r\n            \"paymentDescription\": \"\",\r\n            \"transectionDate\": \"2021-09-15T15:12:00\",\r\n            \"shopAccountId\": this.props.match.params.shopId,\r\n            't_Type': 'receive',\r\n            redirectToBack: false\r\n        }\r\n    \r\n    inputHandler=(event)=>{\r\n        var ctrlName = event.target.name;\r\n        var value = event.target.value;\r\n        \r\n        if(ctrlName === 'Transection Title') this.setState({paymentTitle: value})\r\n        else if(ctrlName === 'Receiving Amount')this.setState({amountRecived: value})\r\n        else if(ctrlName === 'Paid Amount')this.setState({amountPaid: value})\r\n        else if(ctrlName === 'Transection Description')this.setState({paymentDescription: value})\r\n        else if(ctrlName === 'Transection Date Time' )this.setState({transectionDate: value})\r\n    }\r\n    \r\n    submitTransection = ()=>{\r\n        if(this.state.t_Type === 'pay'){\r\n            Axios.post(\r\n                window.$domain + 'api/ShopAccountPaymentHistories',\r\n                {\r\n                    \"id\": 0,\r\n                    \"paymentTitle\": this.state.paymentTitle,\r\n                    \"amountRecived\": 0,\r\n                    \"amountPaid\": this.state.amountPaid,\r\n                    \"paymentDescription\": this.state.paymentDescription,\r\n                    \"transectionDate\": this.state.transectionDate,\r\n                    \"shopAccountId\": this.state.shopAccountId\r\n                  }\r\n                ).then(resp=>{\r\n                    this.setState({redirectToBack: true});\r\n                })\r\n                .catch(\r\n                    err=>\r\n                    {\r\n                        alert(err.response.data);\r\n                    });\r\n        }\r\n        else if(this.state.t_Type === 'receive'){\r\n            Axios.post(window.$domain + 'api/ShopAccountPaymentHistories',\r\n                {\r\n                    \"id\": 0,\r\n                    \"paymentTitle\": this.state.paymentTitle,\r\n                    \"amountRecived\": this.state.amountRecived,\r\n                    \"amountPaid\": 0,\r\n                    \"paymentDescription\": this.state.paymentDescription,\r\n                    \"transectionDate\": this.state.transectionDate,\r\n                    \"shopAccountId\": this.props.match.params.shopId\r\n                  }).then(resp=>{\r\n                    this.setState({redirectToBack: true});\r\n                })\r\n                .catch(\r\n                    err=>\r\n                    {\r\n                        alert(err.response.data);\r\n                    });\r\n                }\r\n    }\r\n    setT_Type = (event)=>{\r\n        var ctrlName = event.target.id;\r\n        if(ctrlName === 'pay') this.setState({t_Type: 'pay'})\r\n        else if(ctrlName === 'receive') this.setState({t_Type: 'receive'})\r\n    }\r\n\r\n    render(){\r\n            return <ShopAdminLayout>\r\n                {this.state.redirectToBack? <Redirect to={'/user/'+ this.props.match.params.id +'/shop'} />:''}\r\n                <div className='jumbotron'>\r\n                <h3 style={{textAlign: 'center'}}>Create Transactions</h3>\r\n                <TransectionTypeCheckBoxs t_State={this.setT_Type} />\r\n                <TbInput DataInputHandler={this.inputHandler} Name='Transection Title' type='text' />\r\n                <TbInput DataInputHandler={this.inputHandler} Name='Receiving Amount' type='Number' />\r\n                <TbInput DataInputHandler={this.inputHandler} Name='Paid Amount' type='Number' />\r\n                <div class=\"form-group\">\r\n                    <label for=\"comment\">Transection Description:</label>\r\n                    <textarea onChange={this.inputHandler} class=\"form-control\" rows=\"2\" name='Transection Description' id=\"comment\"></textarea>\r\n                </div>\r\n                <TbInput DataInputHandler={this.inputHandler} Name='Transection Date Time' type='datetime-local'   />\r\n                <Link className='btn btn-success' onClick={this.submitTransection}>Submit</Link>\r\n            </div>\r\n            </ShopAdminLayout>\r\n    }\r\n}\r\nexport default NewTransection;","import { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport TbInput from '../../ProductManager/UI/TbInput';\r\nimport Axios from 'axios';\r\nimport ShopAdminLayout from \"../../../AdminLayout/ShopAdminLayout\";\r\nimport {Redirect} from 'react-router'\r\n\r\nclass CreateShop extends Component\r\n{\r\n    state= {\r\n        \"id\": 1,\r\n        \"bankName\": \"\",\r\n        \"accountNo\": \"\",\r\n        \"isDefaulter\": false,\r\n        \"currentPayment\": 0,\r\n        \"userId\": this.props.match.params.id,\r\n        redirect: false,\r\n        responce: null\r\n    }\r\n    \r\n    inputHandler=(event)=>{\r\n        var ctrlName = event.target.name;\r\n        var value = event.target.value;\r\n        \r\n        if(ctrlName === 'Bank Name') this.setState({bankName: value})\r\n        else if(ctrlName === 'Account No')this.setState({accountNo: value})\r\n        else if(ctrlName === 'Start Amount')this.setState({currentPayment: value})\r\n    }\r\n    \r\n    submitTransection = ()=>{\r\n        Axios.post(\r\n            window.$domain + 'api/ShopAccounts',\r\n            {\r\n                \"id\": 0,\r\n                \"bankName\": this.state.bankName,\r\n                \"accountNo\": this.state.accountNo ,\r\n                \"isDefaulter\": this.state.isDefaulter,\r\n                \"currentPayment\": 0,\r\n                \"userId\": this.state.userId\r\n            })\r\n        .then(response=>{\r\n            if(this.state.currentPayment > 0){\r\n                Axios.post(\r\n                    window.$domain + 'api/ShopAccountPaymentHistories',\r\n                    {\r\n                        \"id\": 0,\r\n                        \"paymentTitle\": 'Add Stating Amount',\r\n                        \"amountRecived\": this.state.currentPayment,\r\n                        \"amountPaid\": 0,\r\n                        \"paymentDescription\": 'This is shop Account Starting Transaction',\r\n                        \"transectionDate\": new Date(),\r\n                        \"shopAccountId\": response.data.id\r\n                    }).catch(\r\n                        err=>\r\n                        {\r\n                            alert(err.response.data);\r\n                        });\r\n            }\r\n            else if(this.state.currentPayment < 0){\r\n                Axios.post(\r\n                    window.$domain + 'api/ShopAccountPaymentHistories',\r\n                    {\r\n                        \"id\": 0,\r\n                        \"paymentTitle\": 'Add Stating Amount',\r\n                        \"amountRecived\": 0,\r\n                        \"amountPaid\": this.state.currentPayment,\r\n                        \"paymentDescription\": 'This is shop Account Starting Transaction',\r\n                        \"transectionDate\": new Date(),\r\n                        \"shopAccountId\": response.data.id\r\n                    }\r\n                    )\r\n            .catch(\r\n                err=>\r\n                {\r\n                    alert(err.response.data);\r\n                });\r\n            }\r\n            this.setState({responce: response.data});\r\n            this.setState({redirect: true});\r\n        })    \r\n        .catch(\r\n            err=>\r\n            {\r\n                alert(err);\r\n            });\r\n    }\r\n    \r\n\r\n    render(){\r\n\r\n            return <ShopAdminLayout>\r\n                <div className='jumbotron'>\r\n                    {this.state.responce? \r\n                        this.state.redirect? \r\n                            <Redirect to={'/user/'+ this.state.responce.id + '/shop'} /> \r\n                            :'' :'' }\r\n                <h3 style={{textAlign: 'center'}}>Create Shop Account</h3>\r\n                <TbInput DataInputHandler={this.inputHandler} Name='Bank Name' type='text' />\r\n                <TbInput DataInputHandler={this.inputHandler} Name='Account No' type='text' />\r\n                <TbInput DataInputHandler={this.inputHandler} Name='Start Amount' type='Number' />\r\n                <Link className='btn btn-success' onClick={this.submitTransection}>Submit</Link>\r\n            </div>\r\n            </ShopAdminLayout>\r\n    }\r\n}\r\nexport default CreateShop;","//Library Imports\nimport { Route, Switch } from 'react-router';\n\n//All Css Imports\nimport './App.css';\n\n//Component Imports\nimport MTHome from './MalikTraders/MalikTraderApp';\nimport Login from './MalikTraders/Components/Pages/Login/Login'\nimport UserManagement from './MalikTraders/Components/Pages/UserManagement/UserManagement';\nimport AccountDetails from './MalikTraders/Components/Pages/AccountManagement/ShowAccountDetails';\nimport PaymentHistory from './MalikTraders/Components/Pages/AccountManagement/PaymentHistory/PaymentHistory';\nimport CreateNewUser from './MalikTraders/Components/Pages/UserManagement/CreateUser/CreateUser';\nimport AttachWithNewScheme from './MalikTraders/Components/Pages/UserManagement/AttachWithNewScheme/AttachtoNewScheme';\nimport ProductManager from './MalikTraders/Components/Pages/ProductManager/ProductManager'\nimport AddNewProduct from './MalikTraders/Components/Pages/ProductManager/AddNewProduct/AddNewProduct';\nimport ModifyPayment from './MalikTraders/Components/Pages/AccountManagement/ModifyPayment/ModifyPayment';\nimport Shop from './MalikTraders/Components/Pages/Shop/Shop';\nimport NewTransection from './MalikTraders/Components/Pages/Shop/NewTransection/NewTransection';\nimport CreateShop from './MalikTraders/Components/Pages/Shop/CreateShop/CreateShop';\n\n//window.$domain = 'https://maliktraders20211011002845.azurewebsites.net/' //global variable\nwindow.$domain = 'https://localhost:44302/' //global variable\n\n//Start \nfunction App() {\n  return (\n    <>\n      <Switch>\n        <Route path=\"/\" exact component={MTHome} />\n\n        <Route exact path='/login' component={Login} />\n\n        <Route path=\"/ManageUser\" exact component={UserManagement} />\n        <Route path=\"/ShowAccountDetails/:id\" component={AccountDetails} />\n        <Route path='/Accounts/:id/Payment' component={PaymentHistory} />\n        <Route exact path={'/CreateUser'} component={CreateNewUser}/>\n\n        <Route exact path='/User/:id/shop' component={Shop}/>\n        <Route exact path='/User/:id/Shop/:shopId/NewTransection' component={NewTransection} />\n        <Route exact path='/User/:id/Create-Shop-Account' component={CreateShop} />\n\n        <Route exact path='/Products'  component={ProductManager} />\n        <Route exact path='/AddProduct'  component={AddNewProduct} />\n        \n        \n        <Route path='/User/:id/AddtoNewScheme' exact component={AttachWithNewScheme} />\n        <Route path={'/Account/Payment/Modification/:id'} component={ModifyPayment}/>\n      </Switch>\n    </>\n  );\n}\n\n//Exports \nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const SIGNIN_USER = \"SIGNIN_USER\";\r\nexport const SIGNOUT_USER = \"SIGNOUT_USER\";","import Cookies from 'universal-cookie';\r\nimport * as ActionTypes from \"./ActionTypes\"\r\n\r\nconst initState = {\r\n    loggedinUser: {\r\n        email: \"\",\r\n        displayName: \"\",\r\n        pictureURL: \"\",\r\n        loggedinStatus: false\r\n    },\r\n};\r\n\r\n\r\nconst userReducer=(state = initState,action)=>{\r\n    const cookies = new Cookies();\r\n    const storedCookie = cookies.get('user');\r\n    if(storedCookie)\r\n        if(storedCookie.loggedinStatus)\r\n            return {\r\n                ...state,\r\n                loggedinUser: cookies.get('user')\r\n            };\r\n    cookies.set('user', state.loggedinUser , { path: '/' });\r\n    switch(action.type){\r\n        case ActionTypes.SIGNIN_USER:\r\n            console.log(action)\r\n            cookies.set('user', action.payload , { path: '/' });\r\n            return{\r\n                ...state,\r\n                loggedinUser: action.payload\r\n            }\r\n        case ActionTypes.SIGNOUT_USER:\r\n            const SetEmptyUser = {\r\n                loggedinUser: {\r\n                    email: \"\",\r\n                    displayName: \"\",\r\n                    pictureURL: \"\",\r\n                    loggedinStatus: false\r\n                }\r\n            }\r\n            cookies.set('user', SetEmptyUser.loggedinUser  , { path: '/' });\r\n                return{\r\n                    ...state,\r\n                    loggedinUser: SetEmptyUser.loggedinUser\r\n                }\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport default userReducer;","import { applyMiddleware, createStore } from 'redux'\r\nimport userReducer from './User/Reducer'\r\n\r\nfunction logger({ getState }) {\r\n    return next => action => {\r\n      console.log('will dispatch', action)\r\n  \r\n      // Call the next dispatch method in the middleware chain.\r\n      const returnValue = next(action)\r\n  \r\n      console.log('state after dispatch', action)\r\n  \r\n      // This will likely be the action itself, unless\r\n      // a middleware further in chain changed it.\r\n      return returnValue\r\n    }\r\n  }\r\n\r\nconst store =  createStore(userReducer,applyMiddleware(logger));\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport Store from './Store/Store'\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={Store}>\n        <App />\n      </Provider>\n      </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}