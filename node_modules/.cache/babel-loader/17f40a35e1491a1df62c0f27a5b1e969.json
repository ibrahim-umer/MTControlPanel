{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"G:\\\\Projects\\\\Malik Traders\\\\Admin Controll\\\\MT Admin Control App\\\\src\\\\MalikTraders\\\\Components\\\\Pages\\\\AccountManagement\\\\DisplayPaymentDetails\\\\PaymentDetails.jsx\",\n    _s = $RefreshSig$();\n\nimport AddNewPayment from \"../../UserManagement/AddNewPayment/AddNewPayment\";\nimport { useState } from 'react';\nimport Cookie from 'universal-cookie/es6';\nimport { Redirect } from \"react-router\";\n\nconst PaymentDetails = props => {\n  _s();\n\n  var [IsReadyforPayment, setIsReadyforPayment] = useState(false);\n  var [isLogin, setLogin] = useState(false);\n  var cookies = new Cookie();\n\n  if (cookies.get('logedInUser') !== undefined && isLogin === false) {\n    setLogin(true);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"jumbotron container-fluid overflow-auto\",\n    children: [isLogin ? '' : /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-bordered\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Payment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: props.peymentHistory.map(payment => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: new Date(payment.payingDate).toDateString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: payment.payedAmount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 36\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => IsReadyforPayment ? setIsReadyforPayment(false) : setIsReadyforPayment(true),\n      className: \"btn btn-primary\",\n      children: \"Pay Installment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), props.AccId !== 0 && IsReadyforPayment ? /*#__PURE__*/_jsxDEV(AddNewPayment, {\n      Accid: props.AccId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }, this) : '']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PaymentDetails, \"kBs9u+Ac1PPwJ8+/sI+k1fLOcsk=\");\n\n_c = PaymentDetails;\nexport default PaymentDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaymentDetails\");","map":{"version":3,"sources":["G:/Projects/Malik Traders/Admin Controll/MT Admin Control App/src/MalikTraders/Components/Pages/AccountManagement/DisplayPaymentDetails/PaymentDetails.jsx"],"names":["AddNewPayment","useState","Cookie","Redirect","PaymentDetails","props","IsReadyforPayment","setIsReadyforPayment","isLogin","setLogin","cookies","get","undefined","peymentHistory","map","payment","Date","payingDate","toDateString","payedAmount","AccId"],"mappings":";;;;;AACA,OAAOA,aAAP,MAA0B,kDAA1B;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,QAAT,QAAyB,cAAzB;;AAEA,MAAMC,cAAc,GAAGC,KAAK,IAAE;AAAA;;AAC1B,MAAI,CAACC,iBAAD,EAAmBC,oBAAnB,IAA2CN,QAAQ,CAAC,KAAD,CAAvD;AACA,MAAI,CAACO,OAAD,EAASC,QAAT,IAAqBR,QAAQ,CAAC,KAAD,CAAjC;AACA,MAAIS,OAAO,GAAG,IAAIR,MAAJ,EAAd;;AACA,MAAGQ,OAAO,CAACC,GAAR,CAAY,aAAZ,MAA+BC,SAA/B,IAA4CJ,OAAO,KAAK,KAA3D,EAAiE;AAC7DC,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACH;;AACD,sBACI;AAAK,IAAA,SAAS,EAAC,yCAAf;AAAA,eACKD,OAAO,GAAC,EAAD,gBAAI,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YADhB,eAEI;AAAO,MAAA,SAAS,EAAC,sBAAjB;AAAA,8BACI;AAAA,+BACI;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAOI;AAAA,kBAEQH,KAAK,CAACQ,cAAN,CAAqBC,GAArB,CAAyBC,OAAO,IAAE;AAC9B,8BAAO;AAAA,oCACK;AAAA,wBAAK,IAAIC,IAAJ,CAASD,OAAO,CAACE,UAAjB,EAA6BC,YAA7B;AAAL;AAAA;AAAA;AAAA;AAAA,oBADL,eAEK;AAAA,wBAAKH,OAAO,CAACI;AAAb;AAAA;AAAA;AAAA;AAAA,oBAFL;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AAIH,SALD;AAFR;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAqBI;AAAQ,MAAA,OAAO,EAAE,MAAKb,iBAAiB,GAAGC,oBAAoB,CAAC,KAAD,CAAvB,GAAgCA,oBAAoB,CAAC,IAAD,CAA3F;AAAmG,MAAA,SAAS,EAAC,iBAA7G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YArBJ,EAuBQF,KAAK,CAACe,KAAN,KAAgB,CAAhB,IAAqBd,iBAArB,gBACA,QAAC,aAAD;AAAe,MAAA,KAAK,EAAID,KAAK,CAACe;AAA9B;AAAA;AAAA;AAAA;AAAA,YADA,GACyC,EAxBjD;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA6BH,CApCD;;GAAMhB,c;;KAAAA,c;AAsCN,eAAeA,cAAf","sourcesContent":["\r\nimport AddNewPayment from \"../../UserManagement/AddNewPayment/AddNewPayment\";\r\nimport { useState } from 'react'\r\nimport Cookie from 'universal-cookie/es6';\r\nimport { Redirect } from \"react-router\";\r\n\r\nconst PaymentDetails = props=>{\r\n    var [IsReadyforPayment,setIsReadyforPayment] = useState(false);\r\n    var [isLogin,setLogin] = useState(false);\r\n    var cookies = new Cookie();\r\n    if(cookies.get('logedInUser') !== undefined && isLogin === false){\r\n        setLogin(true);\r\n    }\r\n    return(\r\n        <div className=\"jumbotron container-fluid overflow-auto\">\r\n            {isLogin?'':<Redirect to='/login'/>}\r\n            <table className=\"table table-bordered\">\r\n                <thead>\r\n                    <tr >\r\n                        <th>Date</th>\r\n                        <th>Payment</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        props.peymentHistory.map(payment=>{\r\n                            return <tr>\r\n                                        <td>{new Date(payment.payingDate).toDateString()}</td>\r\n                                        <td>{payment.payedAmount}</td>\r\n                                    </tr>\r\n                        })\r\n                    }\r\n                    \r\n                </tbody>\r\n            </table>\r\n            <button onClick={()=> IsReadyforPayment ? setIsReadyforPayment(false): setIsReadyforPayment(true)} className='btn btn-primary'>Pay Installment</button>\r\n            {\r\n                props.AccId !== 0 && IsReadyforPayment ?\r\n                <AddNewPayment Accid = {props.AccId} />: ''\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PaymentDetails;"]},"metadata":{},"sourceType":"module"}