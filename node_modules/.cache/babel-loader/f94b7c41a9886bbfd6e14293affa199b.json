{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"G:\\\\Projects\\\\Malik Traders\\\\Admin Controll\\\\MT Admin Control App\\\\src\\\\MalikTraders\\\\Components\\\\DashBoard\\\\TodayRecovery\\\\TodayRecovery.jsx\";\nimport axios from 'axios';\nimport { Component } from 'react';\n\nclass TodayRecovery extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      dataArray: []\n    };\n\n    this.loadData = () => {\n      axios.get(window.$domain + '/api/Analatics/GetTodayRecovery').then(resp => {\n        this.setState({\n          dataArray: resp.data\n        });\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: this.loadData,\n      children: \"click\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nexport default TodayRecovery;","map":{"version":3,"sources":["G:/Projects/Malik Traders/Admin Controll/MT Admin Control App/src/MalikTraders/Components/DashBoard/TodayRecovery/TodayRecovery.jsx"],"names":["axios","Component","TodayRecovery","state","dataArray","loadData","get","window","$domain","then","resp","setState","data","render"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,SAAR,QAAwB,OAAxB;;AAGA,MAAMC,aAAN,SAA4BD,SAA5B,CAAsC;AAAA;AAAA;AAAA,SAElCE,KAFkC,GAE3B;AACHC,MAAAA,SAAS,EAAE;AADR,KAF2B;;AAAA,SAMlCC,QANkC,GAMvB,MAAI;AACXL,MAAAA,KAAK,CAACM,GAAN,CAAUC,MAAM,CAACC,OAAP,GAAiB,iCAA3B,EACCC,IADD,CACMC,IAAI,IAAE;AACR,aAAKC,QAAL,CAAc;AAACP,UAAAA,SAAS,EAAEM,IAAI,CAACE;AAAjB,SAAd;AACH,OAHD;AAIH,KAXiC;AAAA;;AAYlCC,EAAAA,MAAM,GAAE;AACJ,wBAAO;AAAQ,MAAA,OAAO,EAAE,KAAKR,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAdiC;;AAiBtC,eAAeH,aAAf","sourcesContent":["import axios from 'axios';\r\nimport {Component} from 'react'\r\n\r\n\r\nclass TodayRecovery extends Component {\r\n\r\n    state= {\r\n        dataArray: []\r\n    }\r\n\r\n    loadData = ()=>{\r\n        axios.get(window.$domain + '/api/Analatics/GetTodayRecovery')\r\n        .then(resp=>{\r\n            this.setState({dataArray: resp.data});\r\n        });\r\n    }\r\n    render(){\r\n        return <button onClick={this.loadData}>click</button>\r\n    }\r\n}\r\n\r\nexport default TodayRecovery;"]},"metadata":{},"sourceType":"module"}