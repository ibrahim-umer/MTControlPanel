{"ast":null,"code":"// Ion.RangeSlider\n// version 2.3.1 Build: 382\n// © Denis Ineshin, 2019\n// https://github.com/IonDen\n//\n// Project page:    http://ionden.com/a/plugins/ion.rangeSlider/en.html\n// GitHub page:     https://github.com/IonDen/ion.rangeSlider\n//\n// Released under MIT licence:\n// http://ionden.com/a/plugins/licence-en.html\n// =====================================================================================================================\n;\n\n(function (factory) {\n  if ((typeof jQuery === 'undefined' || !jQuery) && typeof define === \"function\" && define.amd) {\n    define([\"jquery\"], function (jQuery) {\n      return factory(jQuery, document, window, navigator);\n    });\n  } else if ((typeof jQuery === 'undefined' || !jQuery) && typeof exports === \"object\") {\n    factory(require(\"jquery\"), document, window, navigator);\n  } else {\n    factory(jQuery, document, window, navigator);\n  }\n})(function ($, document, window, navigator, undefined) {\n  \"use strict\"; // =================================================================================================================\n  // Service\n\n  var plugin_count = 0; // IE8 fix\n\n  var is_old_ie = function () {\n    var n = navigator.userAgent,\n        r = /msie\\s\\d+/i,\n        v;\n\n    if (n.search(r) > 0) {\n      v = r.exec(n).toString();\n      v = v.split(\" \")[1];\n\n      if (v < 9) {\n        $(\"html\").addClass(\"lt-ie9\");\n        return true;\n      }\n    }\n\n    return false;\n  }();\n\n  if (!Function.prototype.bind) {\n    Function.prototype.bind = function bind(that) {\n      var target = this;\n      var slice = [].slice;\n\n      if (typeof target != \"function\") {\n        throw new TypeError();\n      }\n\n      var args = slice.call(arguments, 1),\n          bound = function () {\n        if (this instanceof bound) {\n          var F = function () {};\n\n          F.prototype = target.prototype;\n          var self = new F();\n          var result = target.apply(self, args.concat(slice.call(arguments)));\n\n          if (Object(result) === result) {\n            return result;\n          }\n\n          return self;\n        } else {\n          return target.apply(that, args.concat(slice.call(arguments)));\n        }\n      };\n\n      return bound;\n    };\n  }\n\n  if (!Array.prototype.indexOf) {\n    Array.prototype.indexOf = function (searchElement, fromIndex) {\n      var k;\n\n      if (this == null) {\n        throw new TypeError('\"this\" is null or not defined');\n      }\n\n      var O = Object(this);\n      var len = O.length >>> 0;\n\n      if (len === 0) {\n        return -1;\n      }\n\n      var n = +fromIndex || 0;\n\n      if (Math.abs(n) === Infinity) {\n        n = 0;\n      }\n\n      if (n >= len) {\n        return -1;\n      }\n\n      k = Math.max(n >= 0 ? n : len - Math.abs(n), 0);\n\n      while (k < len) {\n        if (k in O && O[k] === searchElement) {\n          return k;\n        }\n\n        k++;\n      }\n\n      return -1;\n    };\n  } // =================================================================================================================\n  // Template\n\n\n  var base_html = '<span class=\"irs\">' + '<span class=\"irs-line\" tabindex=\"0\"></span>' + '<span class=\"irs-min\">0</span><span class=\"irs-max\">1</span>' + '<span class=\"irs-from\">0</span><span class=\"irs-to\">0</span><span class=\"irs-single\">0</span>' + '</span>' + '<span class=\"irs-grid\"></span>';\n  var single_html = '<span class=\"irs-bar irs-bar--single\"></span>' + '<span class=\"irs-shadow shadow-single\"></span>' + '<span class=\"irs-handle single\"><i></i><i></i><i></i></span>';\n  var double_html = '<span class=\"irs-bar\"></span>' + '<span class=\"irs-shadow shadow-from\"></span>' + '<span class=\"irs-shadow shadow-to\"></span>' + '<span class=\"irs-handle from\"><i></i><i></i><i></i></span>' + '<span class=\"irs-handle to\"><i></i><i></i><i></i></span>';\n  var disable_html = '<span class=\"irs-disable-mask\"></span>'; // =================================================================================================================\n  // Core\n\n  /**\n   * Main plugin constructor\n   *\n   * @param input {Object} link to base input element\n   * @param options {Object} slider config\n   * @param plugin_count {Number}\n   * @constructor\n   */\n\n  var IonRangeSlider = function (input, options, plugin_count) {\n    this.VERSION = \"2.3.1\";\n    this.input = input;\n    this.plugin_count = plugin_count;\n    this.current_plugin = 0;\n    this.calc_count = 0;\n    this.update_tm = 0;\n    this.old_from = 0;\n    this.old_to = 0;\n    this.old_min_interval = null;\n    this.raf_id = null;\n    this.dragging = false;\n    this.force_redraw = false;\n    this.no_diapason = false;\n    this.has_tab_index = true;\n    this.is_key = false;\n    this.is_update = false;\n    this.is_start = true;\n    this.is_finish = false;\n    this.is_active = false;\n    this.is_resize = false;\n    this.is_click = false;\n    options = options || {}; // cache for links to all DOM elements\n\n    this.$cache = {\n      win: $(window),\n      body: $(document.body),\n      input: $(input),\n      cont: null,\n      rs: null,\n      min: null,\n      max: null,\n      from: null,\n      to: null,\n      single: null,\n      bar: null,\n      line: null,\n      s_single: null,\n      s_from: null,\n      s_to: null,\n      shad_single: null,\n      shad_from: null,\n      shad_to: null,\n      edge: null,\n      grid: null,\n      grid_labels: []\n    }; // storage for measure variables\n\n    this.coords = {\n      // left\n      x_gap: 0,\n      x_pointer: 0,\n      // width\n      w_rs: 0,\n      w_rs_old: 0,\n      w_handle: 0,\n      // percents\n      p_gap: 0,\n      p_gap_left: 0,\n      p_gap_right: 0,\n      p_step: 0,\n      p_pointer: 0,\n      p_handle: 0,\n      p_single_fake: 0,\n      p_single_real: 0,\n      p_from_fake: 0,\n      p_from_real: 0,\n      p_to_fake: 0,\n      p_to_real: 0,\n      p_bar_x: 0,\n      p_bar_w: 0,\n      // grid\n      grid_gap: 0,\n      big_num: 0,\n      big: [],\n      big_w: [],\n      big_p: [],\n      big_x: []\n    }; // storage for labels measure variables\n\n    this.labels = {\n      // width\n      w_min: 0,\n      w_max: 0,\n      w_from: 0,\n      w_to: 0,\n      w_single: 0,\n      // percents\n      p_min: 0,\n      p_max: 0,\n      p_from_fake: 0,\n      p_from_left: 0,\n      p_to_fake: 0,\n      p_to_left: 0,\n      p_single_fake: 0,\n      p_single_left: 0\n    };\n    /**\n     * get and validate config\n     */\n\n    var $inp = this.$cache.input,\n        val = $inp.prop(\"value\"),\n        config,\n        config_from_data,\n        prop; // default config\n\n    config = {\n      skin: \"flat\",\n      type: \"single\",\n      min: 10,\n      max: 100,\n      from: null,\n      to: null,\n      step: 1,\n      min_interval: 0,\n      max_interval: 0,\n      drag_interval: false,\n      values: [],\n      p_values: [],\n      from_fixed: false,\n      from_min: null,\n      from_max: null,\n      from_shadow: false,\n      to_fixed: false,\n      to_min: null,\n      to_max: null,\n      to_shadow: false,\n      prettify_enabled: true,\n      prettify_separator: \" \",\n      prettify: null,\n      force_edges: false,\n      keyboard: true,\n      grid: false,\n      grid_margin: true,\n      grid_num: 4,\n      grid_snap: false,\n      hide_min_max: false,\n      hide_from_to: false,\n      prefix: \"\",\n      postfix: \"\",\n      max_postfix: \"\",\n      decorate_both: true,\n      values_separator: \" — \",\n      input_values_separator: \";\",\n      disable: false,\n      block: false,\n      extra_classes: \"\",\n      scope: null,\n      onStart: null,\n      onChange: null,\n      onFinish: null,\n      onUpdate: null\n    }; // check if base element is input\n\n    if ($inp[0].nodeName !== \"INPUT\") {\n      console && console.warn && console.warn(\"Base element should be <input>!\", $inp[0]);\n    } // config from data-attributes extends js config\n\n\n    config_from_data = {\n      skin: $inp.data(\"skin\"),\n      type: $inp.data(\"type\"),\n      min: $inp.data(\"min\"),\n      max: $inp.data(\"max\"),\n      from: $inp.data(\"from\"),\n      to: $inp.data(\"to\"),\n      step: $inp.data(\"step\"),\n      min_interval: $inp.data(\"minInterval\"),\n      max_interval: $inp.data(\"maxInterval\"),\n      drag_interval: $inp.data(\"dragInterval\"),\n      values: $inp.data(\"values\"),\n      from_fixed: $inp.data(\"fromFixed\"),\n      from_min: $inp.data(\"fromMin\"),\n      from_max: $inp.data(\"fromMax\"),\n      from_shadow: $inp.data(\"fromShadow\"),\n      to_fixed: $inp.data(\"toFixed\"),\n      to_min: $inp.data(\"toMin\"),\n      to_max: $inp.data(\"toMax\"),\n      to_shadow: $inp.data(\"toShadow\"),\n      prettify_enabled: $inp.data(\"prettifyEnabled\"),\n      prettify_separator: $inp.data(\"prettifySeparator\"),\n      force_edges: $inp.data(\"forceEdges\"),\n      keyboard: $inp.data(\"keyboard\"),\n      grid: $inp.data(\"grid\"),\n      grid_margin: $inp.data(\"gridMargin\"),\n      grid_num: $inp.data(\"gridNum\"),\n      grid_snap: $inp.data(\"gridSnap\"),\n      hide_min_max: $inp.data(\"hideMinMax\"),\n      hide_from_to: $inp.data(\"hideFromTo\"),\n      prefix: $inp.data(\"prefix\"),\n      postfix: $inp.data(\"postfix\"),\n      max_postfix: $inp.data(\"maxPostfix\"),\n      decorate_both: $inp.data(\"decorateBoth\"),\n      values_separator: $inp.data(\"valuesSeparator\"),\n      input_values_separator: $inp.data(\"inputValuesSeparator\"),\n      disable: $inp.data(\"disable\"),\n      block: $inp.data(\"block\"),\n      extra_classes: $inp.data(\"extraClasses\")\n    };\n    config_from_data.values = config_from_data.values && config_from_data.values.split(\",\");\n\n    for (prop in config_from_data) {\n      if (config_from_data.hasOwnProperty(prop)) {\n        if (config_from_data[prop] === undefined || config_from_data[prop] === \"\") {\n          delete config_from_data[prop];\n        }\n      }\n    } // input value extends default config\n\n\n    if (val !== undefined && val !== \"\") {\n      val = val.split(config_from_data.input_values_separator || options.input_values_separator || \";\");\n\n      if (val[0] && val[0] == +val[0]) {\n        val[0] = +val[0];\n      }\n\n      if (val[1] && val[1] == +val[1]) {\n        val[1] = +val[1];\n      }\n\n      if (options && options.values && options.values.length) {\n        config.from = val[0] && options.values.indexOf(val[0]);\n        config.to = val[1] && options.values.indexOf(val[1]);\n      } else {\n        config.from = val[0] && +val[0];\n        config.to = val[1] && +val[1];\n      }\n    } // js config extends default config\n\n\n    $.extend(config, options); // data config extends config\n\n    $.extend(config, config_from_data);\n    this.options = config; // validate config, to be sure that all data types are correct\n\n    this.update_check = {};\n    this.validate(); // default result object, returned to callbacks\n\n    this.result = {\n      input: this.$cache.input,\n      slider: null,\n      min: this.options.min,\n      max: this.options.max,\n      from: this.options.from,\n      from_percent: 0,\n      from_value: null,\n      to: this.options.to,\n      to_percent: 0,\n      to_value: null\n    };\n    this.init();\n  };\n\n  IonRangeSlider.prototype = {\n    /**\n     * Starts or updates the plugin instance\n     *\n     * @param [is_update] {boolean}\n     */\n    init: function (is_update) {\n      this.no_diapason = false;\n      this.coords.p_step = this.convertToPercent(this.options.step, true);\n      this.target = \"base\";\n      this.toggleInput();\n      this.append();\n      this.setMinMax();\n\n      if (is_update) {\n        this.force_redraw = true;\n        this.calc(true); // callbacks called\n\n        this.callOnUpdate();\n      } else {\n        this.force_redraw = true;\n        this.calc(true); // callbacks called\n\n        this.callOnStart();\n      }\n\n      this.updateScene();\n    },\n\n    /**\n     * Appends slider template to a DOM\n     */\n    append: function () {\n      var container_html = '<span class=\"irs irs--' + this.options.skin + ' js-irs-' + this.plugin_count + ' ' + this.options.extra_classes + '\"></span>';\n      this.$cache.input.before(container_html);\n      this.$cache.input.prop(\"readonly\", true);\n      this.$cache.cont = this.$cache.input.prev();\n      this.result.slider = this.$cache.cont;\n      this.$cache.cont.html(base_html);\n      this.$cache.rs = this.$cache.cont.find(\".irs\");\n      this.$cache.min = this.$cache.cont.find(\".irs-min\");\n      this.$cache.max = this.$cache.cont.find(\".irs-max\");\n      this.$cache.from = this.$cache.cont.find(\".irs-from\");\n      this.$cache.to = this.$cache.cont.find(\".irs-to\");\n      this.$cache.single = this.$cache.cont.find(\".irs-single\");\n      this.$cache.line = this.$cache.cont.find(\".irs-line\");\n      this.$cache.grid = this.$cache.cont.find(\".irs-grid\");\n\n      if (this.options.type === \"single\") {\n        this.$cache.cont.append(single_html);\n        this.$cache.bar = this.$cache.cont.find(\".irs-bar\");\n        this.$cache.edge = this.$cache.cont.find(\".irs-bar-edge\");\n        this.$cache.s_single = this.$cache.cont.find(\".single\");\n        this.$cache.from[0].style.visibility = \"hidden\";\n        this.$cache.to[0].style.visibility = \"hidden\";\n        this.$cache.shad_single = this.$cache.cont.find(\".shadow-single\");\n      } else {\n        this.$cache.cont.append(double_html);\n        this.$cache.bar = this.$cache.cont.find(\".irs-bar\");\n        this.$cache.s_from = this.$cache.cont.find(\".from\");\n        this.$cache.s_to = this.$cache.cont.find(\".to\");\n        this.$cache.shad_from = this.$cache.cont.find(\".shadow-from\");\n        this.$cache.shad_to = this.$cache.cont.find(\".shadow-to\");\n        this.setTopHandler();\n      }\n\n      if (this.options.hide_from_to) {\n        this.$cache.from[0].style.display = \"none\";\n        this.$cache.to[0].style.display = \"none\";\n        this.$cache.single[0].style.display = \"none\";\n      }\n\n      this.appendGrid();\n\n      if (this.options.disable) {\n        this.appendDisableMask();\n        this.$cache.input[0].disabled = true;\n      } else {\n        this.$cache.input[0].disabled = false;\n        this.removeDisableMask();\n        this.bindEvents();\n      } // block only if not disabled\n\n\n      if (!this.options.disable) {\n        if (this.options.block) {\n          this.appendDisableMask();\n        } else {\n          this.removeDisableMask();\n        }\n      }\n\n      if (this.options.drag_interval) {\n        this.$cache.bar[0].style.cursor = \"ew-resize\";\n      }\n    },\n\n    /**\n     * Determine which handler has a priority\n     * works only for double slider type\n     */\n    setTopHandler: function () {\n      var min = this.options.min,\n          max = this.options.max,\n          from = this.options.from,\n          to = this.options.to;\n\n      if (from > min && to === max) {\n        this.$cache.s_from.addClass(\"type_last\");\n      } else if (to < max) {\n        this.$cache.s_to.addClass(\"type_last\");\n      }\n    },\n\n    /**\n     * Determine which handles was clicked last\n     * and which handler should have hover effect\n     *\n     * @param target {String}\n     */\n    changeLevel: function (target) {\n      switch (target) {\n        case \"single\":\n          this.coords.p_gap = this.toFixed(this.coords.p_pointer - this.coords.p_single_fake);\n          this.$cache.s_single.addClass(\"state_hover\");\n          break;\n\n        case \"from\":\n          this.coords.p_gap = this.toFixed(this.coords.p_pointer - this.coords.p_from_fake);\n          this.$cache.s_from.addClass(\"state_hover\");\n          this.$cache.s_from.addClass(\"type_last\");\n          this.$cache.s_to.removeClass(\"type_last\");\n          break;\n\n        case \"to\":\n          this.coords.p_gap = this.toFixed(this.coords.p_pointer - this.coords.p_to_fake);\n          this.$cache.s_to.addClass(\"state_hover\");\n          this.$cache.s_to.addClass(\"type_last\");\n          this.$cache.s_from.removeClass(\"type_last\");\n          break;\n\n        case \"both\":\n          this.coords.p_gap_left = this.toFixed(this.coords.p_pointer - this.coords.p_from_fake);\n          this.coords.p_gap_right = this.toFixed(this.coords.p_to_fake - this.coords.p_pointer);\n          this.$cache.s_to.removeClass(\"type_last\");\n          this.$cache.s_from.removeClass(\"type_last\");\n          break;\n      }\n    },\n\n    /**\n     * Then slider is disabled\n     * appends extra layer with opacity\n     */\n    appendDisableMask: function () {\n      this.$cache.cont.append(disable_html);\n      this.$cache.cont.addClass(\"irs-disabled\");\n    },\n\n    /**\n     * Then slider is not disabled\n     * remove disable mask\n     */\n    removeDisableMask: function () {\n      this.$cache.cont.remove(\".irs-disable-mask\");\n      this.$cache.cont.removeClass(\"irs-disabled\");\n    },\n\n    /**\n     * Remove slider instance\n     * and unbind all events\n     */\n    remove: function () {\n      this.$cache.cont.remove();\n      this.$cache.cont = null;\n      this.$cache.line.off(\"keydown.irs_\" + this.plugin_count);\n      this.$cache.body.off(\"touchmove.irs_\" + this.plugin_count);\n      this.$cache.body.off(\"mousemove.irs_\" + this.plugin_count);\n      this.$cache.win.off(\"touchend.irs_\" + this.plugin_count);\n      this.$cache.win.off(\"mouseup.irs_\" + this.plugin_count);\n\n      if (is_old_ie) {\n        this.$cache.body.off(\"mouseup.irs_\" + this.plugin_count);\n        this.$cache.body.off(\"mouseleave.irs_\" + this.plugin_count);\n      }\n\n      this.$cache.grid_labels = [];\n      this.coords.big = [];\n      this.coords.big_w = [];\n      this.coords.big_p = [];\n      this.coords.big_x = [];\n      cancelAnimationFrame(this.raf_id);\n    },\n\n    /**\n     * bind all slider events\n     */\n    bindEvents: function () {\n      if (this.no_diapason) {\n        return;\n      }\n\n      this.$cache.body.on(\"touchmove.irs_\" + this.plugin_count, this.pointerMove.bind(this));\n      this.$cache.body.on(\"mousemove.irs_\" + this.plugin_count, this.pointerMove.bind(this));\n      this.$cache.win.on(\"touchend.irs_\" + this.plugin_count, this.pointerUp.bind(this));\n      this.$cache.win.on(\"mouseup.irs_\" + this.plugin_count, this.pointerUp.bind(this));\n      this.$cache.line.on(\"touchstart.irs_\" + this.plugin_count, this.pointerClick.bind(this, \"click\"));\n      this.$cache.line.on(\"mousedown.irs_\" + this.plugin_count, this.pointerClick.bind(this, \"click\"));\n      this.$cache.line.on(\"focus.irs_\" + this.plugin_count, this.pointerFocus.bind(this));\n\n      if (this.options.drag_interval && this.options.type === \"double\") {\n        this.$cache.bar.on(\"touchstart.irs_\" + this.plugin_count, this.pointerDown.bind(this, \"both\"));\n        this.$cache.bar.on(\"mousedown.irs_\" + this.plugin_count, this.pointerDown.bind(this, \"both\"));\n      } else {\n        this.$cache.bar.on(\"touchstart.irs_\" + this.plugin_count, this.pointerClick.bind(this, \"click\"));\n        this.$cache.bar.on(\"mousedown.irs_\" + this.plugin_count, this.pointerClick.bind(this, \"click\"));\n      }\n\n      if (this.options.type === \"single\") {\n        this.$cache.single.on(\"touchstart.irs_\" + this.plugin_count, this.pointerDown.bind(this, \"single\"));\n        this.$cache.s_single.on(\"touchstart.irs_\" + this.plugin_count, this.pointerDown.bind(this, \"single\"));\n        this.$cache.shad_single.on(\"touchstart.irs_\" + this.plugin_count, this.pointerClick.bind(this, \"click\"));\n        this.$cache.single.on(\"mousedown.irs_\" + this.plugin_count, this.pointerDown.bind(this, \"single\"));\n        this.$cache.s_single.on(\"mousedown.irs_\" + this.plugin_count, this.pointerDown.bind(this, \"single\"));\n        this.$cache.edge.on(\"mousedown.irs_\" + this.plugin_count, this.pointerClick.bind(this, \"click\"));\n        this.$cache.shad_single.on(\"mousedown.irs_\" + this.plugin_count, this.pointerClick.bind(this, \"click\"));\n      } else {\n        this.$cache.single.on(\"touchstart.irs_\" + this.plugin_count, this.pointerDown.bind(this, null));\n        this.$cache.single.on(\"mousedown.irs_\" + this.plugin_count, this.pointerDown.bind(this, null));\n        this.$cache.from.on(\"touchstart.irs_\" + this.plugin_count, this.pointerDown.bind(this, \"from\"));\n        this.$cache.s_from.on(\"touchstart.irs_\" + this.plugin_count, this.pointerDown.bind(this, \"from\"));\n        this.$cache.to.on(\"touchstart.irs_\" + this.plugin_count, this.pointerDown.bind(this, \"to\"));\n        this.$cache.s_to.on(\"touchstart.irs_\" + this.plugin_count, this.pointerDown.bind(this, \"to\"));\n        this.$cache.shad_from.on(\"touchstart.irs_\" + this.plugin_count, this.pointerClick.bind(this, \"click\"));\n        this.$cache.shad_to.on(\"touchstart.irs_\" + this.plugin_count, this.pointerClick.bind(this, \"click\"));\n        this.$cache.from.on(\"mousedown.irs_\" + this.plugin_count, this.pointerDown.bind(this, \"from\"));\n        this.$cache.s_from.on(\"mousedown.irs_\" + this.plugin_count, this.pointerDown.bind(this, \"from\"));\n        this.$cache.to.on(\"mousedown.irs_\" + this.plugin_count, this.pointerDown.bind(this, \"to\"));\n        this.$cache.s_to.on(\"mousedown.irs_\" + this.plugin_count, this.pointerDown.bind(this, \"to\"));\n        this.$cache.shad_from.on(\"mousedown.irs_\" + this.plugin_count, this.pointerClick.bind(this, \"click\"));\n        this.$cache.shad_to.on(\"mousedown.irs_\" + this.plugin_count, this.pointerClick.bind(this, \"click\"));\n      }\n\n      if (this.options.keyboard) {\n        this.$cache.line.on(\"keydown.irs_\" + this.plugin_count, this.key.bind(this, \"keyboard\"));\n      }\n\n      if (is_old_ie) {\n        this.$cache.body.on(\"mouseup.irs_\" + this.plugin_count, this.pointerUp.bind(this));\n        this.$cache.body.on(\"mouseleave.irs_\" + this.plugin_count, this.pointerUp.bind(this));\n      }\n    },\n\n    /**\n     * Focus with tabIndex\n     *\n     * @param e {Object} event object\n     */\n    pointerFocus: function (e) {\n      if (!this.target) {\n        var x;\n        var $handle;\n\n        if (this.options.type === \"single\") {\n          $handle = this.$cache.single;\n        } else {\n          $handle = this.$cache.from;\n        }\n\n        x = $handle.offset().left;\n        x += $handle.width() / 2 - 1;\n        this.pointerClick(\"single\", {\n          preventDefault: function () {},\n          pageX: x\n        });\n      }\n    },\n\n    /**\n     * Mousemove or touchmove\n     * only for handlers\n     *\n     * @param e {Object} event object\n     */\n    pointerMove: function (e) {\n      if (!this.dragging) {\n        return;\n      }\n\n      var x = e.pageX || e.originalEvent.touches && e.originalEvent.touches[0].pageX;\n      this.coords.x_pointer = x - this.coords.x_gap;\n      this.calc();\n    },\n\n    /**\n     * Mouseup or touchend\n     * only for handlers\n     *\n     * @param e {Object} event object\n     */\n    pointerUp: function (e) {\n      if (this.current_plugin !== this.plugin_count) {\n        return;\n      }\n\n      if (this.is_active) {\n        this.is_active = false;\n      } else {\n        return;\n      }\n\n      this.$cache.cont.find(\".state_hover\").removeClass(\"state_hover\");\n      this.force_redraw = true;\n\n      if (is_old_ie) {\n        $(\"*\").prop(\"unselectable\", false);\n      }\n\n      this.updateScene();\n      this.restoreOriginalMinInterval(); // callbacks call\n\n      if ($.contains(this.$cache.cont[0], e.target) || this.dragging) {\n        this.callOnFinish();\n      }\n\n      this.dragging = false;\n    },\n\n    /**\n     * Mousedown or touchstart\n     * only for handlers\n     *\n     * @param target {String|null}\n     * @param e {Object} event object\n     */\n    pointerDown: function (target, e) {\n      e.preventDefault();\n      var x = e.pageX || e.originalEvent.touches && e.originalEvent.touches[0].pageX;\n\n      if (e.button === 2) {\n        return;\n      }\n\n      if (target === \"both\") {\n        this.setTempMinInterval();\n      }\n\n      if (!target) {\n        target = this.target || \"from\";\n      }\n\n      this.current_plugin = this.plugin_count;\n      this.target = target;\n      this.is_active = true;\n      this.dragging = true;\n      this.coords.x_gap = this.$cache.rs.offset().left;\n      this.coords.x_pointer = x - this.coords.x_gap;\n      this.calcPointerPercent();\n      this.changeLevel(target);\n\n      if (is_old_ie) {\n        $(\"*\").prop(\"unselectable\", true);\n      }\n\n      this.$cache.line.trigger(\"focus\");\n      this.updateScene();\n    },\n\n    /**\n     * Mousedown or touchstart\n     * for other slider elements, like diapason line\n     *\n     * @param target {String}\n     * @param e {Object} event object\n     */\n    pointerClick: function (target, e) {\n      e.preventDefault();\n      var x = e.pageX || e.originalEvent.touches && e.originalEvent.touches[0].pageX;\n\n      if (e.button === 2) {\n        return;\n      }\n\n      this.current_plugin = this.plugin_count;\n      this.target = target;\n      this.is_click = true;\n      this.coords.x_gap = this.$cache.rs.offset().left;\n      this.coords.x_pointer = +(x - this.coords.x_gap).toFixed();\n      this.force_redraw = true;\n      this.calc();\n      this.$cache.line.trigger(\"focus\");\n    },\n\n    /**\n     * Keyborard controls for focused slider\n     *\n     * @param target {String}\n     * @param e {Object} event object\n     * @returns {boolean|undefined}\n     */\n    key: function (target, e) {\n      if (this.current_plugin !== this.plugin_count || e.altKey || e.ctrlKey || e.shiftKey || e.metaKey) {\n        return;\n      }\n\n      switch (e.which) {\n        case 83: // W\n\n        case 65: // A\n\n        case 40: // DOWN\n\n        case 37:\n          // LEFT\n          e.preventDefault();\n          this.moveByKey(false);\n          break;\n\n        case 87: // S\n\n        case 68: // D\n\n        case 38: // UP\n\n        case 39:\n          // RIGHT\n          e.preventDefault();\n          this.moveByKey(true);\n          break;\n      }\n\n      return true;\n    },\n\n    /**\n     * Move by key\n     *\n     * @param right {boolean} direction to move\n     */\n    moveByKey: function (right) {\n      var p = this.coords.p_pointer;\n      var p_step = (this.options.max - this.options.min) / 100;\n      p_step = this.options.step / p_step;\n\n      if (right) {\n        p += p_step;\n      } else {\n        p -= p_step;\n      }\n\n      this.coords.x_pointer = this.toFixed(this.coords.w_rs / 100 * p);\n      this.is_key = true;\n      this.calc();\n    },\n\n    /**\n     * Set visibility and content\n     * of Min and Max labels\n     */\n    setMinMax: function () {\n      if (!this.options) {\n        return;\n      }\n\n      if (this.options.hide_min_max) {\n        this.$cache.min[0].style.display = \"none\";\n        this.$cache.max[0].style.display = \"none\";\n        return;\n      }\n\n      if (this.options.values.length) {\n        this.$cache.min.html(this.decorate(this.options.p_values[this.options.min]));\n        this.$cache.max.html(this.decorate(this.options.p_values[this.options.max]));\n      } else {\n        var min_pretty = this._prettify(this.options.min);\n\n        var max_pretty = this._prettify(this.options.max);\n\n        this.result.min_pretty = min_pretty;\n        this.result.max_pretty = max_pretty;\n        this.$cache.min.html(this.decorate(min_pretty, this.options.min));\n        this.$cache.max.html(this.decorate(max_pretty, this.options.max));\n      }\n\n      this.labels.w_min = this.$cache.min.outerWidth(false);\n      this.labels.w_max = this.$cache.max.outerWidth(false);\n    },\n\n    /**\n     * Then dragging interval, prevent interval collapsing\n     * using min_interval option\n     */\n    setTempMinInterval: function () {\n      var interval = this.result.to - this.result.from;\n\n      if (this.old_min_interval === null) {\n        this.old_min_interval = this.options.min_interval;\n      }\n\n      this.options.min_interval = interval;\n    },\n\n    /**\n     * Restore min_interval option to original\n     */\n    restoreOriginalMinInterval: function () {\n      if (this.old_min_interval !== null) {\n        this.options.min_interval = this.old_min_interval;\n        this.old_min_interval = null;\n      }\n    },\n    // =============================================================================================================\n    // Calculations\n\n    /**\n     * All calculations and measures start here\n     *\n     * @param update {boolean=}\n     */\n    calc: function (update) {\n      if (!this.options) {\n        return;\n      }\n\n      this.calc_count++;\n\n      if (this.calc_count === 10 || update) {\n        this.calc_count = 0;\n        this.coords.w_rs = this.$cache.rs.outerWidth(false);\n        this.calcHandlePercent();\n      }\n\n      if (!this.coords.w_rs) {\n        return;\n      }\n\n      this.calcPointerPercent();\n      var handle_x = this.getHandleX();\n\n      if (this.target === \"both\") {\n        this.coords.p_gap = 0;\n        handle_x = this.getHandleX();\n      }\n\n      if (this.target === \"click\") {\n        this.coords.p_gap = this.coords.p_handle / 2;\n        handle_x = this.getHandleX();\n\n        if (this.options.drag_interval) {\n          this.target = \"both_one\";\n        } else {\n          this.target = this.chooseHandle(handle_x);\n        }\n      }\n\n      switch (this.target) {\n        case \"base\":\n          var w = (this.options.max - this.options.min) / 100,\n              f = (this.result.from - this.options.min) / w,\n              t = (this.result.to - this.options.min) / w;\n          this.coords.p_single_real = this.toFixed(f);\n          this.coords.p_from_real = this.toFixed(f);\n          this.coords.p_to_real = this.toFixed(t);\n          this.coords.p_single_real = this.checkDiapason(this.coords.p_single_real, this.options.from_min, this.options.from_max);\n          this.coords.p_from_real = this.checkDiapason(this.coords.p_from_real, this.options.from_min, this.options.from_max);\n          this.coords.p_to_real = this.checkDiapason(this.coords.p_to_real, this.options.to_min, this.options.to_max);\n          this.coords.p_single_fake = this.convertToFakePercent(this.coords.p_single_real);\n          this.coords.p_from_fake = this.convertToFakePercent(this.coords.p_from_real);\n          this.coords.p_to_fake = this.convertToFakePercent(this.coords.p_to_real);\n          this.target = null;\n          break;\n\n        case \"single\":\n          if (this.options.from_fixed) {\n            break;\n          }\n\n          this.coords.p_single_real = this.convertToRealPercent(handle_x);\n          this.coords.p_single_real = this.calcWithStep(this.coords.p_single_real);\n          this.coords.p_single_real = this.checkDiapason(this.coords.p_single_real, this.options.from_min, this.options.from_max);\n          this.coords.p_single_fake = this.convertToFakePercent(this.coords.p_single_real);\n          break;\n\n        case \"from\":\n          if (this.options.from_fixed) {\n            break;\n          }\n\n          this.coords.p_from_real = this.convertToRealPercent(handle_x);\n          this.coords.p_from_real = this.calcWithStep(this.coords.p_from_real);\n\n          if (this.coords.p_from_real > this.coords.p_to_real) {\n            this.coords.p_from_real = this.coords.p_to_real;\n          }\n\n          this.coords.p_from_real = this.checkDiapason(this.coords.p_from_real, this.options.from_min, this.options.from_max);\n          this.coords.p_from_real = this.checkMinInterval(this.coords.p_from_real, this.coords.p_to_real, \"from\");\n          this.coords.p_from_real = this.checkMaxInterval(this.coords.p_from_real, this.coords.p_to_real, \"from\");\n          this.coords.p_from_fake = this.convertToFakePercent(this.coords.p_from_real);\n          break;\n\n        case \"to\":\n          if (this.options.to_fixed) {\n            break;\n          }\n\n          this.coords.p_to_real = this.convertToRealPercent(handle_x);\n          this.coords.p_to_real = this.calcWithStep(this.coords.p_to_real);\n\n          if (this.coords.p_to_real < this.coords.p_from_real) {\n            this.coords.p_to_real = this.coords.p_from_real;\n          }\n\n          this.coords.p_to_real = this.checkDiapason(this.coords.p_to_real, this.options.to_min, this.options.to_max);\n          this.coords.p_to_real = this.checkMinInterval(this.coords.p_to_real, this.coords.p_from_real, \"to\");\n          this.coords.p_to_real = this.checkMaxInterval(this.coords.p_to_real, this.coords.p_from_real, \"to\");\n          this.coords.p_to_fake = this.convertToFakePercent(this.coords.p_to_real);\n          break;\n\n        case \"both\":\n          if (this.options.from_fixed || this.options.to_fixed) {\n            break;\n          }\n\n          handle_x = this.toFixed(handle_x + this.coords.p_handle * 0.001);\n          this.coords.p_from_real = this.convertToRealPercent(handle_x) - this.coords.p_gap_left;\n          this.coords.p_from_real = this.calcWithStep(this.coords.p_from_real);\n          this.coords.p_from_real = this.checkDiapason(this.coords.p_from_real, this.options.from_min, this.options.from_max);\n          this.coords.p_from_real = this.checkMinInterval(this.coords.p_from_real, this.coords.p_to_real, \"from\");\n          this.coords.p_from_fake = this.convertToFakePercent(this.coords.p_from_real);\n          this.coords.p_to_real = this.convertToRealPercent(handle_x) + this.coords.p_gap_right;\n          this.coords.p_to_real = this.calcWithStep(this.coords.p_to_real);\n          this.coords.p_to_real = this.checkDiapason(this.coords.p_to_real, this.options.to_min, this.options.to_max);\n          this.coords.p_to_real = this.checkMinInterval(this.coords.p_to_real, this.coords.p_from_real, \"to\");\n          this.coords.p_to_fake = this.convertToFakePercent(this.coords.p_to_real);\n          break;\n\n        case \"both_one\":\n          if (this.options.from_fixed || this.options.to_fixed) {\n            break;\n          }\n\n          var real_x = this.convertToRealPercent(handle_x),\n              from = this.result.from_percent,\n              to = this.result.to_percent,\n              full = to - from,\n              half = full / 2,\n              new_from = real_x - half,\n              new_to = real_x + half;\n\n          if (new_from < 0) {\n            new_from = 0;\n            new_to = new_from + full;\n          }\n\n          if (new_to > 100) {\n            new_to = 100;\n            new_from = new_to - full;\n          }\n\n          this.coords.p_from_real = this.calcWithStep(new_from);\n          this.coords.p_from_real = this.checkDiapason(this.coords.p_from_real, this.options.from_min, this.options.from_max);\n          this.coords.p_from_fake = this.convertToFakePercent(this.coords.p_from_real);\n          this.coords.p_to_real = this.calcWithStep(new_to);\n          this.coords.p_to_real = this.checkDiapason(this.coords.p_to_real, this.options.to_min, this.options.to_max);\n          this.coords.p_to_fake = this.convertToFakePercent(this.coords.p_to_real);\n          break;\n      }\n\n      if (this.options.type === \"single\") {\n        this.coords.p_bar_x = this.coords.p_handle / 2;\n        this.coords.p_bar_w = this.coords.p_single_fake;\n        this.result.from_percent = this.coords.p_single_real;\n        this.result.from = this.convertToValue(this.coords.p_single_real);\n        this.result.from_pretty = this._prettify(this.result.from);\n\n        if (this.options.values.length) {\n          this.result.from_value = this.options.values[this.result.from];\n        }\n      } else {\n        this.coords.p_bar_x = this.toFixed(this.coords.p_from_fake + this.coords.p_handle / 2);\n        this.coords.p_bar_w = this.toFixed(this.coords.p_to_fake - this.coords.p_from_fake);\n        this.result.from_percent = this.coords.p_from_real;\n        this.result.from = this.convertToValue(this.coords.p_from_real);\n        this.result.from_pretty = this._prettify(this.result.from);\n        this.result.to_percent = this.coords.p_to_real;\n        this.result.to = this.convertToValue(this.coords.p_to_real);\n        this.result.to_pretty = this._prettify(this.result.to);\n\n        if (this.options.values.length) {\n          this.result.from_value = this.options.values[this.result.from];\n          this.result.to_value = this.options.values[this.result.to];\n        }\n      }\n\n      this.calcMinMax();\n      this.calcLabels();\n    },\n\n    /**\n     * calculates pointer X in percent\n     */\n    calcPointerPercent: function () {\n      if (!this.coords.w_rs) {\n        this.coords.p_pointer = 0;\n        return;\n      }\n\n      if (this.coords.x_pointer < 0 || isNaN(this.coords.x_pointer)) {\n        this.coords.x_pointer = 0;\n      } else if (this.coords.x_pointer > this.coords.w_rs) {\n        this.coords.x_pointer = this.coords.w_rs;\n      }\n\n      this.coords.p_pointer = this.toFixed(this.coords.x_pointer / this.coords.w_rs * 100);\n    },\n    convertToRealPercent: function (fake) {\n      var full = 100 - this.coords.p_handle;\n      return fake / full * 100;\n    },\n    convertToFakePercent: function (real) {\n      var full = 100 - this.coords.p_handle;\n      return real / 100 * full;\n    },\n    getHandleX: function () {\n      var max = 100 - this.coords.p_handle,\n          x = this.toFixed(this.coords.p_pointer - this.coords.p_gap);\n\n      if (x < 0) {\n        x = 0;\n      } else if (x > max) {\n        x = max;\n      }\n\n      return x;\n    },\n    calcHandlePercent: function () {\n      if (this.options.type === \"single\") {\n        this.coords.w_handle = this.$cache.s_single.outerWidth(false);\n      } else {\n        this.coords.w_handle = this.$cache.s_from.outerWidth(false);\n      }\n\n      this.coords.p_handle = this.toFixed(this.coords.w_handle / this.coords.w_rs * 100);\n    },\n\n    /**\n     * Find closest handle to pointer click\n     *\n     * @param real_x {Number}\n     * @returns {String}\n     */\n    chooseHandle: function (real_x) {\n      if (this.options.type === \"single\") {\n        return \"single\";\n      } else {\n        var m_point = this.coords.p_from_real + (this.coords.p_to_real - this.coords.p_from_real) / 2;\n\n        if (real_x >= m_point) {\n          return this.options.to_fixed ? \"from\" : \"to\";\n        } else {\n          return this.options.from_fixed ? \"to\" : \"from\";\n        }\n      }\n    },\n\n    /**\n     * Measure Min and Max labels width in percent\n     */\n    calcMinMax: function () {\n      if (!this.coords.w_rs) {\n        return;\n      }\n\n      this.labels.p_min = this.labels.w_min / this.coords.w_rs * 100;\n      this.labels.p_max = this.labels.w_max / this.coords.w_rs * 100;\n    },\n\n    /**\n     * Measure labels width and X in percent\n     */\n    calcLabels: function () {\n      if (!this.coords.w_rs || this.options.hide_from_to) {\n        return;\n      }\n\n      if (this.options.type === \"single\") {\n        this.labels.w_single = this.$cache.single.outerWidth(false);\n        this.labels.p_single_fake = this.labels.w_single / this.coords.w_rs * 100;\n        this.labels.p_single_left = this.coords.p_single_fake + this.coords.p_handle / 2 - this.labels.p_single_fake / 2;\n        this.labels.p_single_left = this.checkEdges(this.labels.p_single_left, this.labels.p_single_fake);\n      } else {\n        this.labels.w_from = this.$cache.from.outerWidth(false);\n        this.labels.p_from_fake = this.labels.w_from / this.coords.w_rs * 100;\n        this.labels.p_from_left = this.coords.p_from_fake + this.coords.p_handle / 2 - this.labels.p_from_fake / 2;\n        this.labels.p_from_left = this.toFixed(this.labels.p_from_left);\n        this.labels.p_from_left = this.checkEdges(this.labels.p_from_left, this.labels.p_from_fake);\n        this.labels.w_to = this.$cache.to.outerWidth(false);\n        this.labels.p_to_fake = this.labels.w_to / this.coords.w_rs * 100;\n        this.labels.p_to_left = this.coords.p_to_fake + this.coords.p_handle / 2 - this.labels.p_to_fake / 2;\n        this.labels.p_to_left = this.toFixed(this.labels.p_to_left);\n        this.labels.p_to_left = this.checkEdges(this.labels.p_to_left, this.labels.p_to_fake);\n        this.labels.w_single = this.$cache.single.outerWidth(false);\n        this.labels.p_single_fake = this.labels.w_single / this.coords.w_rs * 100;\n        this.labels.p_single_left = (this.labels.p_from_left + this.labels.p_to_left + this.labels.p_to_fake) / 2 - this.labels.p_single_fake / 2;\n        this.labels.p_single_left = this.toFixed(this.labels.p_single_left);\n        this.labels.p_single_left = this.checkEdges(this.labels.p_single_left, this.labels.p_single_fake);\n      }\n    },\n    // =============================================================================================================\n    // Drawings\n\n    /**\n     * Main function called in request animation frame\n     * to update everything\n     */\n    updateScene: function () {\n      if (this.raf_id) {\n        cancelAnimationFrame(this.raf_id);\n        this.raf_id = null;\n      }\n\n      clearTimeout(this.update_tm);\n      this.update_tm = null;\n\n      if (!this.options) {\n        return;\n      }\n\n      this.drawHandles();\n\n      if (this.is_active) {\n        this.raf_id = requestAnimationFrame(this.updateScene.bind(this));\n      } else {\n        this.update_tm = setTimeout(this.updateScene.bind(this), 300);\n      }\n    },\n\n    /**\n     * Draw handles\n     */\n    drawHandles: function () {\n      this.coords.w_rs = this.$cache.rs.outerWidth(false);\n\n      if (!this.coords.w_rs) {\n        return;\n      }\n\n      if (this.coords.w_rs !== this.coords.w_rs_old) {\n        this.target = \"base\";\n        this.is_resize = true;\n      }\n\n      if (this.coords.w_rs !== this.coords.w_rs_old || this.force_redraw) {\n        this.setMinMax();\n        this.calc(true);\n        this.drawLabels();\n\n        if (this.options.grid) {\n          this.calcGridMargin();\n          this.calcGridLabels();\n        }\n\n        this.force_redraw = true;\n        this.coords.w_rs_old = this.coords.w_rs;\n        this.drawShadow();\n      }\n\n      if (!this.coords.w_rs) {\n        return;\n      }\n\n      if (!this.dragging && !this.force_redraw && !this.is_key) {\n        return;\n      }\n\n      if (this.old_from !== this.result.from || this.old_to !== this.result.to || this.force_redraw || this.is_key) {\n        this.drawLabels();\n        this.$cache.bar[0].style.left = this.coords.p_bar_x + \"%\";\n        this.$cache.bar[0].style.width = this.coords.p_bar_w + \"%\";\n\n        if (this.options.type === \"single\") {\n          this.$cache.bar[0].style.left = 0;\n          this.$cache.bar[0].style.width = this.coords.p_bar_w + this.coords.p_bar_x + \"%\";\n          this.$cache.s_single[0].style.left = this.coords.p_single_fake + \"%\";\n          this.$cache.single[0].style.left = this.labels.p_single_left + \"%\";\n        } else {\n          this.$cache.s_from[0].style.left = this.coords.p_from_fake + \"%\";\n          this.$cache.s_to[0].style.left = this.coords.p_to_fake + \"%\";\n\n          if (this.old_from !== this.result.from || this.force_redraw) {\n            this.$cache.from[0].style.left = this.labels.p_from_left + \"%\";\n          }\n\n          if (this.old_to !== this.result.to || this.force_redraw) {\n            this.$cache.to[0].style.left = this.labels.p_to_left + \"%\";\n          }\n\n          this.$cache.single[0].style.left = this.labels.p_single_left + \"%\";\n        }\n\n        this.writeToInput();\n\n        if ((this.old_from !== this.result.from || this.old_to !== this.result.to) && !this.is_start) {\n          this.$cache.input.trigger(\"change\");\n          this.$cache.input.trigger(\"input\");\n        }\n\n        this.old_from = this.result.from;\n        this.old_to = this.result.to; // callbacks call\n\n        if (!this.is_resize && !this.is_update && !this.is_start && !this.is_finish) {\n          this.callOnChange();\n        }\n\n        if (this.is_key || this.is_click) {\n          this.is_key = false;\n          this.is_click = false;\n          this.callOnFinish();\n        }\n\n        this.is_update = false;\n        this.is_resize = false;\n        this.is_finish = false;\n      }\n\n      this.is_start = false;\n      this.is_key = false;\n      this.is_click = false;\n      this.force_redraw = false;\n    },\n\n    /**\n     * Draw labels\n     * measure labels collisions\n     * collapse close labels\n     */\n    drawLabels: function () {\n      if (!this.options) {\n        return;\n      }\n\n      var values_num = this.options.values.length;\n      var p_values = this.options.p_values;\n      var text_single;\n      var text_from;\n      var text_to;\n      var from_pretty;\n      var to_pretty;\n\n      if (this.options.hide_from_to) {\n        return;\n      }\n\n      if (this.options.type === \"single\") {\n        if (values_num) {\n          text_single = this.decorate(p_values[this.result.from]);\n          this.$cache.single.html(text_single);\n        } else {\n          from_pretty = this._prettify(this.result.from);\n          text_single = this.decorate(from_pretty, this.result.from);\n          this.$cache.single.html(text_single);\n        }\n\n        this.calcLabels();\n\n        if (this.labels.p_single_left < this.labels.p_min + 1) {\n          this.$cache.min[0].style.visibility = \"hidden\";\n        } else {\n          this.$cache.min[0].style.visibility = \"visible\";\n        }\n\n        if (this.labels.p_single_left + this.labels.p_single_fake > 100 - this.labels.p_max - 1) {\n          this.$cache.max[0].style.visibility = \"hidden\";\n        } else {\n          this.$cache.max[0].style.visibility = \"visible\";\n        }\n      } else {\n        if (values_num) {\n          if (this.options.decorate_both) {\n            text_single = this.decorate(p_values[this.result.from]);\n            text_single += this.options.values_separator;\n            text_single += this.decorate(p_values[this.result.to]);\n          } else {\n            text_single = this.decorate(p_values[this.result.from] + this.options.values_separator + p_values[this.result.to]);\n          }\n\n          text_from = this.decorate(p_values[this.result.from]);\n          text_to = this.decorate(p_values[this.result.to]);\n          this.$cache.single.html(text_single);\n          this.$cache.from.html(text_from);\n          this.$cache.to.html(text_to);\n        } else {\n          from_pretty = this._prettify(this.result.from);\n          to_pretty = this._prettify(this.result.to);\n\n          if (this.options.decorate_both) {\n            text_single = this.decorate(from_pretty, this.result.from);\n            text_single += this.options.values_separator;\n            text_single += this.decorate(to_pretty, this.result.to);\n          } else {\n            text_single = this.decorate(from_pretty + this.options.values_separator + to_pretty, this.result.to);\n          }\n\n          text_from = this.decorate(from_pretty, this.result.from);\n          text_to = this.decorate(to_pretty, this.result.to);\n          this.$cache.single.html(text_single);\n          this.$cache.from.html(text_from);\n          this.$cache.to.html(text_to);\n        }\n\n        this.calcLabels();\n        var min = Math.min(this.labels.p_single_left, this.labels.p_from_left),\n            single_left = this.labels.p_single_left + this.labels.p_single_fake,\n            to_left = this.labels.p_to_left + this.labels.p_to_fake,\n            max = Math.max(single_left, to_left);\n\n        if (this.labels.p_from_left + this.labels.p_from_fake >= this.labels.p_to_left) {\n          this.$cache.from[0].style.visibility = \"hidden\";\n          this.$cache.to[0].style.visibility = \"hidden\";\n          this.$cache.single[0].style.visibility = \"visible\";\n\n          if (this.result.from === this.result.to) {\n            if (this.target === \"from\") {\n              this.$cache.from[0].style.visibility = \"visible\";\n            } else if (this.target === \"to\") {\n              this.$cache.to[0].style.visibility = \"visible\";\n            } else if (!this.target) {\n              this.$cache.from[0].style.visibility = \"visible\";\n            }\n\n            this.$cache.single[0].style.visibility = \"hidden\";\n            max = to_left;\n          } else {\n            this.$cache.from[0].style.visibility = \"hidden\";\n            this.$cache.to[0].style.visibility = \"hidden\";\n            this.$cache.single[0].style.visibility = \"visible\";\n            max = Math.max(single_left, to_left);\n          }\n        } else {\n          this.$cache.from[0].style.visibility = \"visible\";\n          this.$cache.to[0].style.visibility = \"visible\";\n          this.$cache.single[0].style.visibility = \"hidden\";\n        }\n\n        if (min < this.labels.p_min + 1) {\n          this.$cache.min[0].style.visibility = \"hidden\";\n        } else {\n          this.$cache.min[0].style.visibility = \"visible\";\n        }\n\n        if (max > 100 - this.labels.p_max - 1) {\n          this.$cache.max[0].style.visibility = \"hidden\";\n        } else {\n          this.$cache.max[0].style.visibility = \"visible\";\n        }\n      }\n    },\n\n    /**\n     * Draw shadow intervals\n     */\n    drawShadow: function () {\n      var o = this.options,\n          c = this.$cache,\n          is_from_min = typeof o.from_min === \"number\" && !isNaN(o.from_min),\n          is_from_max = typeof o.from_max === \"number\" && !isNaN(o.from_max),\n          is_to_min = typeof o.to_min === \"number\" && !isNaN(o.to_min),\n          is_to_max = typeof o.to_max === \"number\" && !isNaN(o.to_max),\n          from_min,\n          from_max,\n          to_min,\n          to_max;\n\n      if (o.type === \"single\") {\n        if (o.from_shadow && (is_from_min || is_from_max)) {\n          from_min = this.convertToPercent(is_from_min ? o.from_min : o.min);\n          from_max = this.convertToPercent(is_from_max ? o.from_max : o.max) - from_min;\n          from_min = this.toFixed(from_min - this.coords.p_handle / 100 * from_min);\n          from_max = this.toFixed(from_max - this.coords.p_handle / 100 * from_max);\n          from_min = from_min + this.coords.p_handle / 2;\n          c.shad_single[0].style.display = \"block\";\n          c.shad_single[0].style.left = from_min + \"%\";\n          c.shad_single[0].style.width = from_max + \"%\";\n        } else {\n          c.shad_single[0].style.display = \"none\";\n        }\n      } else {\n        if (o.from_shadow && (is_from_min || is_from_max)) {\n          from_min = this.convertToPercent(is_from_min ? o.from_min : o.min);\n          from_max = this.convertToPercent(is_from_max ? o.from_max : o.max) - from_min;\n          from_min = this.toFixed(from_min - this.coords.p_handle / 100 * from_min);\n          from_max = this.toFixed(from_max - this.coords.p_handle / 100 * from_max);\n          from_min = from_min + this.coords.p_handle / 2;\n          c.shad_from[0].style.display = \"block\";\n          c.shad_from[0].style.left = from_min + \"%\";\n          c.shad_from[0].style.width = from_max + \"%\";\n        } else {\n          c.shad_from[0].style.display = \"none\";\n        }\n\n        if (o.to_shadow && (is_to_min || is_to_max)) {\n          to_min = this.convertToPercent(is_to_min ? o.to_min : o.min);\n          to_max = this.convertToPercent(is_to_max ? o.to_max : o.max) - to_min;\n          to_min = this.toFixed(to_min - this.coords.p_handle / 100 * to_min);\n          to_max = this.toFixed(to_max - this.coords.p_handle / 100 * to_max);\n          to_min = to_min + this.coords.p_handle / 2;\n          c.shad_to[0].style.display = \"block\";\n          c.shad_to[0].style.left = to_min + \"%\";\n          c.shad_to[0].style.width = to_max + \"%\";\n        } else {\n          c.shad_to[0].style.display = \"none\";\n        }\n      }\n    },\n\n    /**\n     * Write values to input element\n     */\n    writeToInput: function () {\n      if (this.options.type === \"single\") {\n        if (this.options.values.length) {\n          this.$cache.input.prop(\"value\", this.result.from_value);\n        } else {\n          this.$cache.input.prop(\"value\", this.result.from);\n        }\n\n        this.$cache.input.data(\"from\", this.result.from);\n      } else {\n        if (this.options.values.length) {\n          this.$cache.input.prop(\"value\", this.result.from_value + this.options.input_values_separator + this.result.to_value);\n        } else {\n          this.$cache.input.prop(\"value\", this.result.from + this.options.input_values_separator + this.result.to);\n        }\n\n        this.$cache.input.data(\"from\", this.result.from);\n        this.$cache.input.data(\"to\", this.result.to);\n      }\n    },\n    // =============================================================================================================\n    // Callbacks\n    callOnStart: function () {\n      this.writeToInput();\n\n      if (this.options.onStart && typeof this.options.onStart === \"function\") {\n        if (this.options.scope) {\n          this.options.onStart.call(this.options.scope, this.result);\n        } else {\n          this.options.onStart(this.result);\n        }\n      }\n    },\n    callOnChange: function () {\n      this.writeToInput();\n\n      if (this.options.onChange && typeof this.options.onChange === \"function\") {\n        if (this.options.scope) {\n          this.options.onChange.call(this.options.scope, this.result);\n        } else {\n          this.options.onChange(this.result);\n        }\n      }\n    },\n    callOnFinish: function () {\n      this.writeToInput();\n\n      if (this.options.onFinish && typeof this.options.onFinish === \"function\") {\n        if (this.options.scope) {\n          this.options.onFinish.call(this.options.scope, this.result);\n        } else {\n          this.options.onFinish(this.result);\n        }\n      }\n    },\n    callOnUpdate: function () {\n      this.writeToInput();\n\n      if (this.options.onUpdate && typeof this.options.onUpdate === \"function\") {\n        if (this.options.scope) {\n          this.options.onUpdate.call(this.options.scope, this.result);\n        } else {\n          this.options.onUpdate(this.result);\n        }\n      }\n    },\n    // =============================================================================================================\n    // Service methods\n    toggleInput: function () {\n      this.$cache.input.toggleClass(\"irs-hidden-input\");\n\n      if (this.has_tab_index) {\n        this.$cache.input.prop(\"tabindex\", -1);\n      } else {\n        this.$cache.input.removeProp(\"tabindex\");\n      }\n\n      this.has_tab_index = !this.has_tab_index;\n    },\n\n    /**\n     * Convert real value to percent\n     *\n     * @param value {Number} X in real\n     * @param no_min {boolean=} don't use min value\n     * @returns {Number} X in percent\n     */\n    convertToPercent: function (value, no_min) {\n      var diapason = this.options.max - this.options.min,\n          one_percent = diapason / 100,\n          val,\n          percent;\n\n      if (!diapason) {\n        this.no_diapason = true;\n        return 0;\n      }\n\n      if (no_min) {\n        val = value;\n      } else {\n        val = value - this.options.min;\n      }\n\n      percent = val / one_percent;\n      return this.toFixed(percent);\n    },\n\n    /**\n     * Convert percent to real values\n     *\n     * @param percent {Number} X in percent\n     * @returns {Number} X in real\n     */\n    convertToValue: function (percent) {\n      var min = this.options.min,\n          max = this.options.max,\n          min_decimals = min.toString().split(\".\")[1],\n          max_decimals = max.toString().split(\".\")[1],\n          min_length,\n          max_length,\n          avg_decimals = 0,\n          abs = 0;\n\n      if (percent === 0) {\n        return this.options.min;\n      }\n\n      if (percent === 100) {\n        return this.options.max;\n      }\n\n      if (min_decimals) {\n        min_length = min_decimals.length;\n        avg_decimals = min_length;\n      }\n\n      if (max_decimals) {\n        max_length = max_decimals.length;\n        avg_decimals = max_length;\n      }\n\n      if (min_length && max_length) {\n        avg_decimals = min_length >= max_length ? min_length : max_length;\n      }\n\n      if (min < 0) {\n        abs = Math.abs(min);\n        min = +(min + abs).toFixed(avg_decimals);\n        max = +(max + abs).toFixed(avg_decimals);\n      }\n\n      var number = (max - min) / 100 * percent + min,\n          string = this.options.step.toString().split(\".\")[1],\n          result;\n\n      if (string) {\n        number = +number.toFixed(string.length);\n      } else {\n        number = number / this.options.step;\n        number = number * this.options.step;\n        number = +number.toFixed(0);\n      }\n\n      if (abs) {\n        number -= abs;\n      }\n\n      if (string) {\n        result = +number.toFixed(string.length);\n      } else {\n        result = this.toFixed(number);\n      }\n\n      if (result < this.options.min) {\n        result = this.options.min;\n      } else if (result > this.options.max) {\n        result = this.options.max;\n      }\n\n      return result;\n    },\n\n    /**\n     * Round percent value with step\n     *\n     * @param percent {Number}\n     * @returns percent {Number} rounded\n     */\n    calcWithStep: function (percent) {\n      var rounded = Math.round(percent / this.coords.p_step) * this.coords.p_step;\n\n      if (rounded > 100) {\n        rounded = 100;\n      }\n\n      if (percent === 100) {\n        rounded = 100;\n      }\n\n      return this.toFixed(rounded);\n    },\n    checkMinInterval: function (p_current, p_next, type) {\n      var o = this.options,\n          current,\n          next;\n\n      if (!o.min_interval) {\n        return p_current;\n      }\n\n      current = this.convertToValue(p_current);\n      next = this.convertToValue(p_next);\n\n      if (type === \"from\") {\n        if (next - current < o.min_interval) {\n          current = next - o.min_interval;\n        }\n      } else {\n        if (current - next < o.min_interval) {\n          current = next + o.min_interval;\n        }\n      }\n\n      return this.convertToPercent(current);\n    },\n    checkMaxInterval: function (p_current, p_next, type) {\n      var o = this.options,\n          current,\n          next;\n\n      if (!o.max_interval) {\n        return p_current;\n      }\n\n      current = this.convertToValue(p_current);\n      next = this.convertToValue(p_next);\n\n      if (type === \"from\") {\n        if (next - current > o.max_interval) {\n          current = next - o.max_interval;\n        }\n      } else {\n        if (current - next > o.max_interval) {\n          current = next + o.max_interval;\n        }\n      }\n\n      return this.convertToPercent(current);\n    },\n    checkDiapason: function (p_num, min, max) {\n      var num = this.convertToValue(p_num),\n          o = this.options;\n\n      if (typeof min !== \"number\") {\n        min = o.min;\n      }\n\n      if (typeof max !== \"number\") {\n        max = o.max;\n      }\n\n      if (num < min) {\n        num = min;\n      }\n\n      if (num > max) {\n        num = max;\n      }\n\n      return this.convertToPercent(num);\n    },\n    toFixed: function (num) {\n      num = num.toFixed(20);\n      return +num;\n    },\n    _prettify: function (num) {\n      if (!this.options.prettify_enabled) {\n        return num;\n      }\n\n      if (this.options.prettify && typeof this.options.prettify === \"function\") {\n        return this.options.prettify(num);\n      } else {\n        return this.prettify(num);\n      }\n    },\n    prettify: function (num) {\n      var n = num.toString();\n      return n.replace(/(\\d{1,3}(?=(?:\\d\\d\\d)+(?!\\d)))/g, \"$1\" + this.options.prettify_separator);\n    },\n    checkEdges: function (left, width) {\n      if (!this.options.force_edges) {\n        return this.toFixed(left);\n      }\n\n      if (left < 0) {\n        left = 0;\n      } else if (left > 100 - width) {\n        left = 100 - width;\n      }\n\n      return this.toFixed(left);\n    },\n    validate: function () {\n      var o = this.options,\n          r = this.result,\n          v = o.values,\n          vl = v.length,\n          value,\n          i;\n      if (typeof o.min === \"string\") o.min = +o.min;\n      if (typeof o.max === \"string\") o.max = +o.max;\n      if (typeof o.from === \"string\") o.from = +o.from;\n      if (typeof o.to === \"string\") o.to = +o.to;\n      if (typeof o.step === \"string\") o.step = +o.step;\n      if (typeof o.from_min === \"string\") o.from_min = +o.from_min;\n      if (typeof o.from_max === \"string\") o.from_max = +o.from_max;\n      if (typeof o.to_min === \"string\") o.to_min = +o.to_min;\n      if (typeof o.to_max === \"string\") o.to_max = +o.to_max;\n      if (typeof o.grid_num === \"string\") o.grid_num = +o.grid_num;\n\n      if (o.max < o.min) {\n        o.max = o.min;\n      }\n\n      if (vl) {\n        o.p_values = [];\n        o.min = 0;\n        o.max = vl - 1;\n        o.step = 1;\n        o.grid_num = o.max;\n        o.grid_snap = true;\n\n        for (i = 0; i < vl; i++) {\n          value = +v[i];\n\n          if (!isNaN(value)) {\n            v[i] = value;\n            value = this._prettify(value);\n          } else {\n            value = v[i];\n          }\n\n          o.p_values.push(value);\n        }\n      }\n\n      if (typeof o.from !== \"number\" || isNaN(o.from)) {\n        o.from = o.min;\n      }\n\n      if (typeof o.to !== \"number\" || isNaN(o.to)) {\n        o.to = o.max;\n      }\n\n      if (o.type === \"single\") {\n        if (o.from < o.min) o.from = o.min;\n        if (o.from > o.max) o.from = o.max;\n      } else {\n        if (o.from < o.min) o.from = o.min;\n        if (o.from > o.max) o.from = o.max;\n        if (o.to < o.min) o.to = o.min;\n        if (o.to > o.max) o.to = o.max;\n\n        if (this.update_check.from) {\n          if (this.update_check.from !== o.from) {\n            if (o.from > o.to) o.from = o.to;\n          }\n\n          if (this.update_check.to !== o.to) {\n            if (o.to < o.from) o.to = o.from;\n          }\n        }\n\n        if (o.from > o.to) o.from = o.to;\n        if (o.to < o.from) o.to = o.from;\n      }\n\n      if (typeof o.step !== \"number\" || isNaN(o.step) || !o.step || o.step < 0) {\n        o.step = 1;\n      }\n\n      if (typeof o.from_min === \"number\" && o.from < o.from_min) {\n        o.from = o.from_min;\n      }\n\n      if (typeof o.from_max === \"number\" && o.from > o.from_max) {\n        o.from = o.from_max;\n      }\n\n      if (typeof o.to_min === \"number\" && o.to < o.to_min) {\n        o.to = o.to_min;\n      }\n\n      if (typeof o.to_max === \"number\" && o.from > o.to_max) {\n        o.to = o.to_max;\n      }\n\n      if (r) {\n        if (r.min !== o.min) {\n          r.min = o.min;\n        }\n\n        if (r.max !== o.max) {\n          r.max = o.max;\n        }\n\n        if (r.from < r.min || r.from > r.max) {\n          r.from = o.from;\n        }\n\n        if (r.to < r.min || r.to > r.max) {\n          r.to = o.to;\n        }\n      }\n\n      if (typeof o.min_interval !== \"number\" || isNaN(o.min_interval) || !o.min_interval || o.min_interval < 0) {\n        o.min_interval = 0;\n      }\n\n      if (typeof o.max_interval !== \"number\" || isNaN(o.max_interval) || !o.max_interval || o.max_interval < 0) {\n        o.max_interval = 0;\n      }\n\n      if (o.min_interval && o.min_interval > o.max - o.min) {\n        o.min_interval = o.max - o.min;\n      }\n\n      if (o.max_interval && o.max_interval > o.max - o.min) {\n        o.max_interval = o.max - o.min;\n      }\n    },\n    decorate: function (num, original) {\n      var decorated = \"\",\n          o = this.options;\n\n      if (o.prefix) {\n        decorated += o.prefix;\n      }\n\n      decorated += num;\n\n      if (o.max_postfix) {\n        if (o.values.length && num === o.p_values[o.max]) {\n          decorated += o.max_postfix;\n\n          if (o.postfix) {\n            decorated += \" \";\n          }\n        } else if (original === o.max) {\n          decorated += o.max_postfix;\n\n          if (o.postfix) {\n            decorated += \" \";\n          }\n        }\n      }\n\n      if (o.postfix) {\n        decorated += o.postfix;\n      }\n\n      return decorated;\n    },\n    updateFrom: function () {\n      this.result.from = this.options.from;\n      this.result.from_percent = this.convertToPercent(this.result.from);\n      this.result.from_pretty = this._prettify(this.result.from);\n\n      if (this.options.values) {\n        this.result.from_value = this.options.values[this.result.from];\n      }\n    },\n    updateTo: function () {\n      this.result.to = this.options.to;\n      this.result.to_percent = this.convertToPercent(this.result.to);\n      this.result.to_pretty = this._prettify(this.result.to);\n\n      if (this.options.values) {\n        this.result.to_value = this.options.values[this.result.to];\n      }\n    },\n    updateResult: function () {\n      this.result.min = this.options.min;\n      this.result.max = this.options.max;\n      this.updateFrom();\n      this.updateTo();\n    },\n    // =============================================================================================================\n    // Grid\n    appendGrid: function () {\n      if (!this.options.grid) {\n        return;\n      }\n\n      var o = this.options,\n          i,\n          z,\n          total = o.max - o.min,\n          big_num = o.grid_num,\n          big_p = 0,\n          big_w = 0,\n          small_max = 4,\n          local_small_max,\n          small_p,\n          small_w = 0,\n          result,\n          html = '';\n      this.calcGridMargin();\n\n      if (o.grid_snap) {\n        big_num = total / o.step;\n      }\n\n      if (big_num > 50) big_num = 50;\n      big_p = this.toFixed(100 / big_num);\n\n      if (big_num > 4) {\n        small_max = 3;\n      }\n\n      if (big_num > 7) {\n        small_max = 2;\n      }\n\n      if (big_num > 14) {\n        small_max = 1;\n      }\n\n      if (big_num > 28) {\n        small_max = 0;\n      }\n\n      for (i = 0; i < big_num + 1; i++) {\n        local_small_max = small_max;\n        big_w = this.toFixed(big_p * i);\n\n        if (big_w > 100) {\n          big_w = 100;\n        }\n\n        this.coords.big[i] = big_w;\n        small_p = (big_w - big_p * (i - 1)) / (local_small_max + 1);\n\n        for (z = 1; z <= local_small_max; z++) {\n          if (big_w === 0) {\n            break;\n          }\n\n          small_w = this.toFixed(big_w - small_p * z);\n          html += '<span class=\"irs-grid-pol small\" style=\"left: ' + small_w + '%\"></span>';\n        }\n\n        html += '<span class=\"irs-grid-pol\" style=\"left: ' + big_w + '%\"></span>';\n        result = this.convertToValue(big_w);\n\n        if (o.values.length) {\n          result = o.p_values[result];\n        } else {\n          result = this._prettify(result);\n        }\n\n        html += '<span class=\"irs-grid-text js-grid-text-' + i + '\" style=\"left: ' + big_w + '%\">' + result + '</span>';\n      }\n\n      this.coords.big_num = Math.ceil(big_num + 1);\n      this.$cache.cont.addClass(\"irs-with-grid\");\n      this.$cache.grid.html(html);\n      this.cacheGridLabels();\n    },\n    cacheGridLabels: function () {\n      var $label,\n          i,\n          num = this.coords.big_num;\n\n      for (i = 0; i < num; i++) {\n        $label = this.$cache.grid.find(\".js-grid-text-\" + i);\n        this.$cache.grid_labels.push($label);\n      }\n\n      this.calcGridLabels();\n    },\n    calcGridLabels: function () {\n      var i,\n          label,\n          start = [],\n          finish = [],\n          num = this.coords.big_num;\n\n      for (i = 0; i < num; i++) {\n        this.coords.big_w[i] = this.$cache.grid_labels[i].outerWidth(false);\n        this.coords.big_p[i] = this.toFixed(this.coords.big_w[i] / this.coords.w_rs * 100);\n        this.coords.big_x[i] = this.toFixed(this.coords.big_p[i] / 2);\n        start[i] = this.toFixed(this.coords.big[i] - this.coords.big_x[i]);\n        finish[i] = this.toFixed(start[i] + this.coords.big_p[i]);\n      }\n\n      if (this.options.force_edges) {\n        if (start[0] < -this.coords.grid_gap) {\n          start[0] = -this.coords.grid_gap;\n          finish[0] = this.toFixed(start[0] + this.coords.big_p[0]);\n          this.coords.big_x[0] = this.coords.grid_gap;\n        }\n\n        if (finish[num - 1] > 100 + this.coords.grid_gap) {\n          finish[num - 1] = 100 + this.coords.grid_gap;\n          start[num - 1] = this.toFixed(finish[num - 1] - this.coords.big_p[num - 1]);\n          this.coords.big_x[num - 1] = this.toFixed(this.coords.big_p[num - 1] - this.coords.grid_gap);\n        }\n      }\n\n      this.calcGridCollision(2, start, finish);\n      this.calcGridCollision(4, start, finish);\n\n      for (i = 0; i < num; i++) {\n        label = this.$cache.grid_labels[i][0];\n\n        if (this.coords.big_x[i] !== Number.POSITIVE_INFINITY) {\n          label.style.marginLeft = -this.coords.big_x[i] + \"%\";\n        }\n      }\n    },\n    // Collisions Calc Beta\n    // TODO: Refactor then have plenty of time\n    calcGridCollision: function (step, start, finish) {\n      var i,\n          next_i,\n          label,\n          num = this.coords.big_num;\n\n      for (i = 0; i < num; i += step) {\n        next_i = i + step / 2;\n\n        if (next_i >= num) {\n          break;\n        }\n\n        label = this.$cache.grid_labels[next_i][0];\n\n        if (finish[i] <= start[next_i]) {\n          label.style.visibility = \"visible\";\n        } else {\n          label.style.visibility = \"hidden\";\n        }\n      }\n    },\n    calcGridMargin: function () {\n      if (!this.options.grid_margin) {\n        return;\n      }\n\n      this.coords.w_rs = this.$cache.rs.outerWidth(false);\n\n      if (!this.coords.w_rs) {\n        return;\n      }\n\n      if (this.options.type === \"single\") {\n        this.coords.w_handle = this.$cache.s_single.outerWidth(false);\n      } else {\n        this.coords.w_handle = this.$cache.s_from.outerWidth(false);\n      }\n\n      this.coords.p_handle = this.toFixed(this.coords.w_handle / this.coords.w_rs * 100);\n      this.coords.grid_gap = this.toFixed(this.coords.p_handle / 2 - 0.1);\n      this.$cache.grid[0].style.width = this.toFixed(100 - this.coords.p_handle) + \"%\";\n      this.$cache.grid[0].style.left = this.coords.grid_gap + \"%\";\n    },\n    // =============================================================================================================\n    // Public methods\n    update: function (options) {\n      if (!this.input) {\n        return;\n      }\n\n      this.is_update = true;\n      this.options.from = this.result.from;\n      this.options.to = this.result.to;\n      this.update_check.from = this.result.from;\n      this.update_check.to = this.result.to;\n      this.options = $.extend(this.options, options);\n      this.validate();\n      this.updateResult(options);\n      this.toggleInput();\n      this.remove();\n      this.init(true);\n    },\n    reset: function () {\n      if (!this.input) {\n        return;\n      }\n\n      this.updateResult();\n      this.update();\n    },\n    destroy: function () {\n      if (!this.input) {\n        return;\n      }\n\n      this.toggleInput();\n      this.$cache.input.prop(\"readonly\", false);\n      $.data(this.input, \"ionRangeSlider\", null);\n      this.remove();\n      this.input = null;\n      this.options = null;\n    }\n  };\n\n  $.fn.ionRangeSlider = function (options) {\n    return this.each(function () {\n      if (!$.data(this, \"ionRangeSlider\")) {\n        $.data(this, \"ionRangeSlider\", new IonRangeSlider(this, options, plugin_count++));\n      }\n    });\n  }; // =================================================================================================================\n  // http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n  // http://my.opera.com/emoller/blog/2011/12/20/requestanimationframe-for-smart-er-animating\n  // requestAnimationFrame polyfill by Erik Möller. fixes from Paul Irish and Tino Zijdel\n  // MIT license\n\n\n  (function () {\n    var lastTime = 0;\n    var vendors = ['ms', 'moz', 'webkit', 'o'];\n\n    for (var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {\n      window.requestAnimationFrame = window[vendors[x] + 'RequestAnimationFrame'];\n      window.cancelAnimationFrame = window[vendors[x] + 'CancelAnimationFrame'] || window[vendors[x] + 'CancelRequestAnimationFrame'];\n    }\n\n    if (!window.requestAnimationFrame) window.requestAnimationFrame = function (callback, element) {\n      var currTime = new Date().getTime();\n      var timeToCall = Math.max(0, 16 - (currTime - lastTime));\n      var id = window.setTimeout(function () {\n        callback(currTime + timeToCall);\n      }, timeToCall);\n      lastTime = currTime + timeToCall;\n      return id;\n    };\n    if (!window.cancelAnimationFrame) window.cancelAnimationFrame = function (id) {\n      clearTimeout(id);\n    };\n  })();\n});","map":{"version":3,"sources":["D:/Projects/React/React Js/Test Apps/reduxapp/node_modules/ion-rangeslider/js/ion.rangeSlider.js"],"names":["factory","jQuery","define","amd","document","window","navigator","exports","require","$","undefined","plugin_count","is_old_ie","n","userAgent","r","v","search","exec","toString","split","addClass","Function","prototype","bind","that","target","slice","TypeError","args","call","arguments","bound","F","self","result","apply","concat","Object","Array","indexOf","searchElement","fromIndex","k","O","len","length","Math","abs","Infinity","max","base_html","single_html","double_html","disable_html","IonRangeSlider","input","options","VERSION","current_plugin","calc_count","update_tm","old_from","old_to","old_min_interval","raf_id","dragging","force_redraw","no_diapason","has_tab_index","is_key","is_update","is_start","is_finish","is_active","is_resize","is_click","$cache","win","body","cont","rs","min","from","to","single","bar","line","s_single","s_from","s_to","shad_single","shad_from","shad_to","edge","grid","grid_labels","coords","x_gap","x_pointer","w_rs","w_rs_old","w_handle","p_gap","p_gap_left","p_gap_right","p_step","p_pointer","p_handle","p_single_fake","p_single_real","p_from_fake","p_from_real","p_to_fake","p_to_real","p_bar_x","p_bar_w","grid_gap","big_num","big","big_w","big_p","big_x","labels","w_min","w_max","w_from","w_to","w_single","p_min","p_max","p_from_left","p_to_left","p_single_left","$inp","val","prop","config","config_from_data","skin","type","step","min_interval","max_interval","drag_interval","values","p_values","from_fixed","from_min","from_max","from_shadow","to_fixed","to_min","to_max","to_shadow","prettify_enabled","prettify_separator","prettify","force_edges","keyboard","grid_margin","grid_num","grid_snap","hide_min_max","hide_from_to","prefix","postfix","max_postfix","decorate_both","values_separator","input_values_separator","disable","block","extra_classes","scope","onStart","onChange","onFinish","onUpdate","nodeName","console","warn","data","hasOwnProperty","extend","update_check","validate","slider","from_percent","from_value","to_percent","to_value","init","convertToPercent","toggleInput","append","setMinMax","calc","callOnUpdate","callOnStart","updateScene","container_html","before","prev","html","find","style","visibility","setTopHandler","display","appendGrid","appendDisableMask","disabled","removeDisableMask","bindEvents","cursor","changeLevel","toFixed","removeClass","remove","off","cancelAnimationFrame","on","pointerMove","pointerUp","pointerClick","pointerFocus","pointerDown","key","e","x","$handle","offset","left","width","preventDefault","pageX","originalEvent","touches","restoreOriginalMinInterval","contains","callOnFinish","button","setTempMinInterval","calcPointerPercent","trigger","altKey","ctrlKey","shiftKey","metaKey","which","moveByKey","right","p","decorate","min_pretty","_prettify","max_pretty","outerWidth","interval","update","calcHandlePercent","handle_x","getHandleX","chooseHandle","w","f","t","checkDiapason","convertToFakePercent","convertToRealPercent","calcWithStep","checkMinInterval","checkMaxInterval","real_x","full","half","new_from","new_to","convertToValue","from_pretty","to_pretty","calcMinMax","calcLabels","isNaN","fake","real","m_point","checkEdges","clearTimeout","drawHandles","requestAnimationFrame","setTimeout","drawLabels","calcGridMargin","calcGridLabels","drawShadow","writeToInput","callOnChange","values_num","text_single","text_from","text_to","single_left","to_left","o","c","is_from_min","is_from_max","is_to_min","is_to_max","toggleClass","removeProp","value","no_min","diapason","one_percent","percent","min_decimals","max_decimals","min_length","max_length","avg_decimals","number","string","rounded","round","p_current","p_next","current","next","p_num","num","replace","vl","i","push","original","decorated","updateFrom","updateTo","updateResult","z","total","small_max","local_small_max","small_p","small_w","ceil","cacheGridLabels","$label","label","start","finish","calcGridCollision","Number","POSITIVE_INFINITY","marginLeft","next_i","reset","destroy","fn","ionRangeSlider","each","lastTime","vendors","callback","element","currTime","Date","getTime","timeToCall","id"],"mappings":"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","sourcesContent":["// Ion.RangeSlider\n// version 2.3.1 Build: 382\n// © Denis Ineshin, 2019\n// https://github.com/IonDen\n//\n// Project page:    http://ionden.com/a/plugins/ion.rangeSlider/en.html\n// GitHub page:     https://github.com/IonDen/ion.rangeSlider\n//\n// Released under MIT licence:\n// http://ionden.com/a/plugins/licence-en.html\n// =====================================================================================================================\n\n;(function(factory) {\n    if ((typeof jQuery === 'undefined' || !jQuery) && typeof define === \"function\" && define.amd) {\n        define([\"jquery\"], function (jQuery) {\n            return factory(jQuery, document, window, navigator);\n        });\n    } else if ((typeof jQuery === 'undefined' || !jQuery) && typeof exports === \"object\") {\n        factory(require(\"jquery\"), document, window, navigator);\n    } else {\n        factory(jQuery, document, window, navigator);\n    }\n} (function ($, document, window, navigator, undefined) {\n    \"use strict\";\n\n    // =================================================================================================================\n    // Service\n\n    var plugin_count = 0;\n\n    // IE8 fix\n    var is_old_ie = (function () {\n        var n = navigator.userAgent,\n            r = /msie\\s\\d+/i,\n            v;\n        if (n.search(r) > 0) {\n            v = r.exec(n).toString();\n            v = v.split(\" \")[1];\n            if (v < 9) {\n                $(\"html\").addClass(\"lt-ie9\");\n                return true;\n            }\n        }\n        return false;\n    } ());\n    if (!Function.prototype.bind) {\n        Function.prototype.bind = function bind(that) {\n\n            var target = this;\n            var slice = [].slice;\n\n            if (typeof target != \"function\") {\n                throw new TypeError();\n            }\n\n            var args = slice.call(arguments, 1),\n                bound = function () {\n\n                    if (this instanceof bound) {\n\n                        var F = function(){};\n                        F.prototype = target.prototype;\n                        var self = new F();\n\n                        var result = target.apply(\n                            self,\n                            args.concat(slice.call(arguments))\n                        );\n                        if (Object(result) === result) {\n                            return result;\n                        }\n                        return self;\n\n                    } else {\n\n                        return target.apply(\n                            that,\n                            args.concat(slice.call(arguments))\n                        );\n\n                    }\n\n                };\n\n            return bound;\n        };\n    }\n    if (!Array.prototype.indexOf) {\n        Array.prototype.indexOf = function(searchElement, fromIndex) {\n            var k;\n            if (this == null) {\n                throw new TypeError('\"this\" is null or not defined');\n            }\n            var O = Object(this);\n            var len = O.length >>> 0;\n            if (len === 0) {\n                return -1;\n            }\n            var n = +fromIndex || 0;\n            if (Math.abs(n) === Infinity) {\n                n = 0;\n            }\n            if (n >= len) {\n                return -1;\n            }\n            k = Math.max(n >= 0 ? n : len - Math.abs(n), 0);\n            while (k < len) {\n                if (k in O && O[k] === searchElement) {\n                    return k;\n                }\n                k++;\n            }\n            return -1;\n        };\n    }\n\n\n\n    // =================================================================================================================\n    // Template\n\n    var base_html =\n        '<span class=\"irs\">' +\n        '<span class=\"irs-line\" tabindex=\"0\"></span>' +\n        '<span class=\"irs-min\">0</span><span class=\"irs-max\">1</span>' +\n        '<span class=\"irs-from\">0</span><span class=\"irs-to\">0</span><span class=\"irs-single\">0</span>' +\n        '</span>' +\n        '<span class=\"irs-grid\"></span>';\n\n    var single_html =\n        '<span class=\"irs-bar irs-bar--single\"></span>' +\n        '<span class=\"irs-shadow shadow-single\"></span>' +\n        '<span class=\"irs-handle single\"><i></i><i></i><i></i></span>';\n\n    var double_html =\n        '<span class=\"irs-bar\"></span>' +\n        '<span class=\"irs-shadow shadow-from\"></span>' +\n        '<span class=\"irs-shadow shadow-to\"></span>' +\n        '<span class=\"irs-handle from\"><i></i><i></i><i></i></span>' +\n        '<span class=\"irs-handle to\"><i></i><i></i><i></i></span>';\n\n    var disable_html =\n        '<span class=\"irs-disable-mask\"></span>';\n\n\n\n    // =================================================================================================================\n    // Core\n\n    /**\n     * Main plugin constructor\n     *\n     * @param input {Object} link to base input element\n     * @param options {Object} slider config\n     * @param plugin_count {Number}\n     * @constructor\n     */\n    var IonRangeSlider = function (input, options, plugin_count) {\n        this.VERSION = \"2.3.1\";\n        this.input = input;\n        this.plugin_count = plugin_count;\n        this.current_plugin = 0;\n        this.calc_count = 0;\n        this.update_tm = 0;\n        this.old_from = 0;\n        this.old_to = 0;\n        this.old_min_interval = null;\n        this.raf_id = null;\n        this.dragging = false;\n        this.force_redraw = false;\n        this.no_diapason = false;\n        this.has_tab_index = true;\n        this.is_key = false;\n        this.is_update = false;\n        this.is_start = true;\n        this.is_finish = false;\n        this.is_active = false;\n        this.is_resize = false;\n        this.is_click = false;\n\n        options = options || {};\n\n        // cache for links to all DOM elements\n        this.$cache = {\n            win: $(window),\n            body: $(document.body),\n            input: $(input),\n            cont: null,\n            rs: null,\n            min: null,\n            max: null,\n            from: null,\n            to: null,\n            single: null,\n            bar: null,\n            line: null,\n            s_single: null,\n            s_from: null,\n            s_to: null,\n            shad_single: null,\n            shad_from: null,\n            shad_to: null,\n            edge: null,\n            grid: null,\n            grid_labels: []\n        };\n\n        // storage for measure variables\n        this.coords = {\n            // left\n            x_gap: 0,\n            x_pointer: 0,\n\n            // width\n            w_rs: 0,\n            w_rs_old: 0,\n            w_handle: 0,\n\n            // percents\n            p_gap: 0,\n            p_gap_left: 0,\n            p_gap_right: 0,\n            p_step: 0,\n            p_pointer: 0,\n            p_handle: 0,\n            p_single_fake: 0,\n            p_single_real: 0,\n            p_from_fake: 0,\n            p_from_real: 0,\n            p_to_fake: 0,\n            p_to_real: 0,\n            p_bar_x: 0,\n            p_bar_w: 0,\n\n            // grid\n            grid_gap: 0,\n            big_num: 0,\n            big: [],\n            big_w: [],\n            big_p: [],\n            big_x: []\n        };\n\n        // storage for labels measure variables\n        this.labels = {\n            // width\n            w_min: 0,\n            w_max: 0,\n            w_from: 0,\n            w_to: 0,\n            w_single: 0,\n\n            // percents\n            p_min: 0,\n            p_max: 0,\n            p_from_fake: 0,\n            p_from_left: 0,\n            p_to_fake: 0,\n            p_to_left: 0,\n            p_single_fake: 0,\n            p_single_left: 0\n        };\n\n\n\n        /**\n         * get and validate config\n         */\n        var $inp = this.$cache.input,\n            val = $inp.prop(\"value\"),\n            config, config_from_data, prop;\n\n        // default config\n        config = {\n            skin: \"flat\",\n            type: \"single\",\n\n            min: 10,\n            max: 100,\n            from: null,\n            to: null,\n            step: 1,\n\n            min_interval: 0,\n            max_interval: 0,\n            drag_interval: false,\n\n            values: [],\n            p_values: [],\n\n            from_fixed: false,\n            from_min: null,\n            from_max: null,\n            from_shadow: false,\n\n            to_fixed: false,\n            to_min: null,\n            to_max: null,\n            to_shadow: false,\n\n            prettify_enabled: true,\n            prettify_separator: \" \",\n            prettify: null,\n\n            force_edges: false,\n\n            keyboard: true,\n\n            grid: false,\n            grid_margin: true,\n            grid_num: 4,\n            grid_snap: false,\n\n            hide_min_max: false,\n            hide_from_to: false,\n\n            prefix: \"\",\n            postfix: \"\",\n            max_postfix: \"\",\n            decorate_both: true,\n            values_separator: \" — \",\n\n            input_values_separator: \";\",\n\n            disable: false,\n            block: false,\n\n            extra_classes: \"\",\n\n            scope: null,\n            onStart: null,\n            onChange: null,\n            onFinish: null,\n            onUpdate: null\n        };\n\n\n        // check if base element is input\n        if ($inp[0].nodeName !== \"INPUT\") {\n            console && console.warn && console.warn(\"Base element should be <input>!\", $inp[0]);\n        }\n\n\n        // config from data-attributes extends js config\n        config_from_data = {\n            skin: $inp.data(\"skin\"),\n            type: $inp.data(\"type\"),\n\n            min: $inp.data(\"min\"),\n            max: $inp.data(\"max\"),\n            from: $inp.data(\"from\"),\n            to: $inp.data(\"to\"),\n            step: $inp.data(\"step\"),\n\n            min_interval: $inp.data(\"minInterval\"),\n            max_interval: $inp.data(\"maxInterval\"),\n            drag_interval: $inp.data(\"dragInterval\"),\n\n            values: $inp.data(\"values\"),\n\n            from_fixed: $inp.data(\"fromFixed\"),\n            from_min: $inp.data(\"fromMin\"),\n            from_max: $inp.data(\"fromMax\"),\n            from_shadow: $inp.data(\"fromShadow\"),\n\n            to_fixed: $inp.data(\"toFixed\"),\n            to_min: $inp.data(\"toMin\"),\n            to_max: $inp.data(\"toMax\"),\n            to_shadow: $inp.data(\"toShadow\"),\n\n            prettify_enabled: $inp.data(\"prettifyEnabled\"),\n            prettify_separator: $inp.data(\"prettifySeparator\"),\n\n            force_edges: $inp.data(\"forceEdges\"),\n\n            keyboard: $inp.data(\"keyboard\"),\n\n            grid: $inp.data(\"grid\"),\n            grid_margin: $inp.data(\"gridMargin\"),\n            grid_num: $inp.data(\"gridNum\"),\n            grid_snap: $inp.data(\"gridSnap\"),\n\n            hide_min_max: $inp.data(\"hideMinMax\"),\n            hide_from_to: $inp.data(\"hideFromTo\"),\n\n            prefix: $inp.data(\"prefix\"),\n            postfix: $inp.data(\"postfix\"),\n            max_postfix: $inp.data(\"maxPostfix\"),\n            decorate_both: $inp.data(\"decorateBoth\"),\n            values_separator: $inp.data(\"valuesSeparator\"),\n\n            input_values_separator: $inp.data(\"inputValuesSeparator\"),\n\n            disable: $inp.data(\"disable\"),\n            block: $inp.data(\"block\"),\n\n            extra_classes: $inp.data(\"extraClasses\"),\n        };\n        config_from_data.values = config_from_data.values && config_from_data.values.split(\",\");\n\n        for (prop in config_from_data) {\n            if (config_from_data.hasOwnProperty(prop)) {\n                if (config_from_data[prop] === undefined || config_from_data[prop] === \"\") {\n                    delete config_from_data[prop];\n                }\n            }\n        }\n\n\n        // input value extends default config\n        if (val !== undefined && val !== \"\") {\n            val = val.split(config_from_data.input_values_separator || options.input_values_separator || \";\");\n\n            if (val[0] && val[0] == +val[0]) {\n                val[0] = +val[0];\n            }\n            if (val[1] && val[1] == +val[1]) {\n                val[1] = +val[1];\n            }\n\n            if (options && options.values && options.values.length) {\n                config.from = val[0] && options.values.indexOf(val[0]);\n                config.to = val[1] && options.values.indexOf(val[1]);\n            } else {\n                config.from = val[0] && +val[0];\n                config.to = val[1] && +val[1];\n            }\n        }\n\n\n\n        // js config extends default config\n        $.extend(config, options);\n\n\n        // data config extends config\n        $.extend(config, config_from_data);\n        this.options = config;\n\n\n\n        // validate config, to be sure that all data types are correct\n        this.update_check = {};\n        this.validate();\n\n\n\n        // default result object, returned to callbacks\n        this.result = {\n            input: this.$cache.input,\n            slider: null,\n\n            min: this.options.min,\n            max: this.options.max,\n\n            from: this.options.from,\n            from_percent: 0,\n            from_value: null,\n\n            to: this.options.to,\n            to_percent: 0,\n            to_value: null\n        };\n\n\n\n        this.init();\n    };\n\n    IonRangeSlider.prototype = {\n\n        /**\n         * Starts or updates the plugin instance\n         *\n         * @param [is_update] {boolean}\n         */\n        init: function (is_update) {\n            this.no_diapason = false;\n            this.coords.p_step = this.convertToPercent(this.options.step, true);\n\n            this.target = \"base\";\n\n            this.toggleInput();\n            this.append();\n            this.setMinMax();\n\n            if (is_update) {\n                this.force_redraw = true;\n                this.calc(true);\n\n                // callbacks called\n                this.callOnUpdate();\n            } else {\n                this.force_redraw = true;\n                this.calc(true);\n\n                // callbacks called\n                this.callOnStart();\n            }\n\n            this.updateScene();\n        },\n\n        /**\n         * Appends slider template to a DOM\n         */\n        append: function () {\n            var container_html = '<span class=\"irs irs--' + this.options.skin + ' js-irs-' + this.plugin_count + ' ' + this.options.extra_classes + '\"></span>';\n            this.$cache.input.before(container_html);\n            this.$cache.input.prop(\"readonly\", true);\n            this.$cache.cont = this.$cache.input.prev();\n            this.result.slider = this.$cache.cont;\n\n            this.$cache.cont.html(base_html);\n            this.$cache.rs = this.$cache.cont.find(\".irs\");\n            this.$cache.min = this.$cache.cont.find(\".irs-min\");\n            this.$cache.max = this.$cache.cont.find(\".irs-max\");\n            this.$cache.from = this.$cache.cont.find(\".irs-from\");\n            this.$cache.to = this.$cache.cont.find(\".irs-to\");\n            this.$cache.single = this.$cache.cont.find(\".irs-single\");\n            this.$cache.line = this.$cache.cont.find(\".irs-line\");\n            this.$cache.grid = this.$cache.cont.find(\".irs-grid\");\n\n            if (this.options.type === \"single\") {\n                this.$cache.cont.append(single_html);\n                this.$cache.bar = this.$cache.cont.find(\".irs-bar\");\n                this.$cache.edge = this.$cache.cont.find(\".irs-bar-edge\");\n                this.$cache.s_single = this.$cache.cont.find(\".single\");\n                this.$cache.from[0].style.visibility = \"hidden\";\n                this.$cache.to[0].style.visibility = \"hidden\";\n                this.$cache.shad_single = this.$cache.cont.find(\".shadow-single\");\n            } else {\n                this.$cache.cont.append(double_html);\n                this.$cache.bar = this.$cache.cont.find(\".irs-bar\");\n                this.$cache.s_from = this.$cache.cont.find(\".from\");\n                this.$cache.s_to = this.$cache.cont.find(\".to\");\n                this.$cache.shad_from = this.$cache.cont.find(\".shadow-from\");\n                this.$cache.shad_to = this.$cache.cont.find(\".shadow-to\");\n\n                this.setTopHandler();\n            }\n\n            if (this.options.hide_from_to) {\n                this.$cache.from[0].style.display = \"none\";\n                this.$cache.to[0].style.display = \"none\";\n                this.$cache.single[0].style.display = \"none\";\n            }\n\n            this.appendGrid();\n\n            if (this.options.disable) {\n                this.appendDisableMask();\n                this.$cache.input[0].disabled = true;\n            } else {\n                this.$cache.input[0].disabled = false;\n                this.removeDisableMask();\n                this.bindEvents();\n            }\n\n            // block only if not disabled\n            if (!this.options.disable) {\n                if (this.options.block) {\n                    this.appendDisableMask();\n                } else {\n                    this.removeDisableMask();\n                }\n            }\n\n            if (this.options.drag_interval) {\n                this.$cache.bar[0].style.cursor = \"ew-resize\";\n            }\n        },\n\n        /**\n         * Determine which handler has a priority\n         * works only for double slider type\n         */\n        setTopHandler: function () {\n            var min = this.options.min,\n                max = this.options.max,\n                from = this.options.from,\n                to = this.options.to;\n\n            if (from > min && to === max) {\n                this.$cache.s_from.addClass(\"type_last\");\n            } else if (to < max) {\n                this.$cache.s_to.addClass(\"type_last\");\n            }\n        },\n\n        /**\n         * Determine which handles was clicked last\n         * and which handler should have hover effect\n         *\n         * @param target {String}\n         */\n        changeLevel: function (target) {\n            switch (target) {\n                case \"single\":\n                    this.coords.p_gap = this.toFixed(this.coords.p_pointer - this.coords.p_single_fake);\n                    this.$cache.s_single.addClass(\"state_hover\");\n                    break;\n                case \"from\":\n                    this.coords.p_gap = this.toFixed(this.coords.p_pointer - this.coords.p_from_fake);\n                    this.$cache.s_from.addClass(\"state_hover\");\n                    this.$cache.s_from.addClass(\"type_last\");\n                    this.$cache.s_to.removeClass(\"type_last\");\n                    break;\n                case \"to\":\n                    this.coords.p_gap = this.toFixed(this.coords.p_pointer - this.coords.p_to_fake);\n                    this.$cache.s_to.addClass(\"state_hover\");\n                    this.$cache.s_to.addClass(\"type_last\");\n                    this.$cache.s_from.removeClass(\"type_last\");\n                    break;\n                case \"both\":\n                    this.coords.p_gap_left = this.toFixed(this.coords.p_pointer - this.coords.p_from_fake);\n                    this.coords.p_gap_right = this.toFixed(this.coords.p_to_fake - this.coords.p_pointer);\n                    this.$cache.s_to.removeClass(\"type_last\");\n                    this.$cache.s_from.removeClass(\"type_last\");\n                    break;\n            }\n        },\n\n        /**\n         * Then slider is disabled\n         * appends extra layer with opacity\n         */\n        appendDisableMask: function () {\n            this.$cache.cont.append(disable_html);\n            this.$cache.cont.addClass(\"irs-disabled\");\n        },\n\n        /**\n         * Then slider is not disabled\n         * remove disable mask\n         */\n        removeDisableMask: function () {\n            this.$cache.cont.remove(\".irs-disable-mask\");\n            this.$cache.cont.removeClass(\"irs-disabled\");\n        },\n\n        /**\n         * Remove slider instance\n         * and unbind all events\n         */\n        remove: function () {\n            this.$cache.cont.remove();\n            this.$cache.cont = null;\n\n            this.$cache.line.off(\"keydown.irs_\" + this.plugin_count);\n\n            this.$cache.body.off(\"touchmove.irs_\" + this.plugin_count);\n            this.$cache.body.off(\"mousemove.irs_\" + this.plugin_count);\n\n            this.$cache.win.off(\"touchend.irs_\" + this.plugin_count);\n            this.$cache.win.off(\"mouseup.irs_\" + this.plugin_count);\n\n            if (is_old_ie) {\n                this.$cache.body.off(\"mouseup.irs_\" + this.plugin_count);\n                this.$cache.body.off(\"mouseleave.irs_\" + this.plugin_count);\n            }\n\n            this.$cache.grid_labels = [];\n            this.coords.big = [];\n            this.coords.big_w = [];\n            this.coords.big_p = [];\n            this.coords.big_x = [];\n\n            cancelAnimationFrame(this.raf_id);\n        },\n\n        /**\n         * bind all slider events\n         */\n        bindEvents: function () {\n            if (this.no_diapason) {\n                return;\n            }\n\n            this.$cache.body.on(\"touchmove.irs_\" + this.plugin_count, this.pointerMove.bind(this));\n            this.$cache.body.on(\"mousemove.irs_\" + this.plugin_count, this.pointerMove.bind(this));\n\n            this.$cache.win.on(\"touchend.irs_\" + this.plugin_count, this.pointerUp.bind(this));\n            this.$cache.win.on(\"mouseup.irs_\" + this.plugin_count, this.pointerUp.bind(this));\n\n            this.$cache.line.on(\"touchstart.irs_\" + this.plugin_count, this.pointerClick.bind(this, \"click\"));\n            this.$cache.line.on(\"mousedown.irs_\" + this.plugin_count, this.pointerClick.bind(this, \"click\"));\n\n            this.$cache.line.on(\"focus.irs_\" + this.plugin_count, this.pointerFocus.bind(this));\n\n            if (this.options.drag_interval && this.options.type === \"double\") {\n                this.$cache.bar.on(\"touchstart.irs_\" + this.plugin_count, this.pointerDown.bind(this, \"both\"));\n                this.$cache.bar.on(\"mousedown.irs_\" + this.plugin_count, this.pointerDown.bind(this, \"both\"));\n            } else {\n                this.$cache.bar.on(\"touchstart.irs_\" + this.plugin_count, this.pointerClick.bind(this, \"click\"));\n                this.$cache.bar.on(\"mousedown.irs_\" + this.plugin_count, this.pointerClick.bind(this, \"click\"));\n            }\n\n            if (this.options.type === \"single\") {\n                this.$cache.single.on(\"touchstart.irs_\" + this.plugin_count, this.pointerDown.bind(this, \"single\"));\n                this.$cache.s_single.on(\"touchstart.irs_\" + this.plugin_count, this.pointerDown.bind(this, \"single\"));\n                this.$cache.shad_single.on(\"touchstart.irs_\" + this.plugin_count, this.pointerClick.bind(this, \"click\"));\n\n                this.$cache.single.on(\"mousedown.irs_\" + this.plugin_count, this.pointerDown.bind(this, \"single\"));\n                this.$cache.s_single.on(\"mousedown.irs_\" + this.plugin_count, this.pointerDown.bind(this, \"single\"));\n                this.$cache.edge.on(\"mousedown.irs_\" + this.plugin_count, this.pointerClick.bind(this, \"click\"));\n                this.$cache.shad_single.on(\"mousedown.irs_\" + this.plugin_count, this.pointerClick.bind(this, \"click\"));\n            } else {\n                this.$cache.single.on(\"touchstart.irs_\" + this.plugin_count, this.pointerDown.bind(this, null));\n                this.$cache.single.on(\"mousedown.irs_\" + this.plugin_count, this.pointerDown.bind(this, null));\n\n                this.$cache.from.on(\"touchstart.irs_\" + this.plugin_count, this.pointerDown.bind(this, \"from\"));\n                this.$cache.s_from.on(\"touchstart.irs_\" + this.plugin_count, this.pointerDown.bind(this, \"from\"));\n                this.$cache.to.on(\"touchstart.irs_\" + this.plugin_count, this.pointerDown.bind(this, \"to\"));\n                this.$cache.s_to.on(\"touchstart.irs_\" + this.plugin_count, this.pointerDown.bind(this, \"to\"));\n                this.$cache.shad_from.on(\"touchstart.irs_\" + this.plugin_count, this.pointerClick.bind(this, \"click\"));\n                this.$cache.shad_to.on(\"touchstart.irs_\" + this.plugin_count, this.pointerClick.bind(this, \"click\"));\n\n                this.$cache.from.on(\"mousedown.irs_\" + this.plugin_count, this.pointerDown.bind(this, \"from\"));\n                this.$cache.s_from.on(\"mousedown.irs_\" + this.plugin_count, this.pointerDown.bind(this, \"from\"));\n                this.$cache.to.on(\"mousedown.irs_\" + this.plugin_count, this.pointerDown.bind(this, \"to\"));\n                this.$cache.s_to.on(\"mousedown.irs_\" + this.plugin_count, this.pointerDown.bind(this, \"to\"));\n                this.$cache.shad_from.on(\"mousedown.irs_\" + this.plugin_count, this.pointerClick.bind(this, \"click\"));\n                this.$cache.shad_to.on(\"mousedown.irs_\" + this.plugin_count, this.pointerClick.bind(this, \"click\"));\n            }\n\n            if (this.options.keyboard) {\n                this.$cache.line.on(\"keydown.irs_\" + this.plugin_count, this.key.bind(this, \"keyboard\"));\n            }\n\n            if (is_old_ie) {\n                this.$cache.body.on(\"mouseup.irs_\" + this.plugin_count, this.pointerUp.bind(this));\n                this.$cache.body.on(\"mouseleave.irs_\" + this.plugin_count, this.pointerUp.bind(this));\n            }\n        },\n\n        /**\n         * Focus with tabIndex\n         *\n         * @param e {Object} event object\n         */\n        pointerFocus: function (e) {\n            if (!this.target) {\n                var x;\n                var $handle;\n\n                if (this.options.type === \"single\") {\n                    $handle = this.$cache.single;\n                } else {\n                    $handle = this.$cache.from;\n                }\n\n                x = $handle.offset().left;\n                x += ($handle.width() / 2) - 1;\n\n                this.pointerClick(\"single\", {preventDefault: function () {}, pageX: x});\n            }\n        },\n\n        /**\n         * Mousemove or touchmove\n         * only for handlers\n         *\n         * @param e {Object} event object\n         */\n        pointerMove: function (e) {\n            if (!this.dragging) {\n                return;\n            }\n\n            var x = e.pageX || e.originalEvent.touches && e.originalEvent.touches[0].pageX;\n            this.coords.x_pointer = x - this.coords.x_gap;\n\n            this.calc();\n        },\n\n        /**\n         * Mouseup or touchend\n         * only for handlers\n         *\n         * @param e {Object} event object\n         */\n        pointerUp: function (e) {\n            if (this.current_plugin !== this.plugin_count) {\n                return;\n            }\n\n            if (this.is_active) {\n                this.is_active = false;\n            } else {\n                return;\n            }\n\n            this.$cache.cont.find(\".state_hover\").removeClass(\"state_hover\");\n\n            this.force_redraw = true;\n\n            if (is_old_ie) {\n                $(\"*\").prop(\"unselectable\", false);\n            }\n\n            this.updateScene();\n            this.restoreOriginalMinInterval();\n\n            // callbacks call\n            if ($.contains(this.$cache.cont[0], e.target) || this.dragging) {\n                this.callOnFinish();\n            }\n\n            this.dragging = false;\n        },\n\n        /**\n         * Mousedown or touchstart\n         * only for handlers\n         *\n         * @param target {String|null}\n         * @param e {Object} event object\n         */\n        pointerDown: function (target, e) {\n            e.preventDefault();\n            var x = e.pageX || e.originalEvent.touches && e.originalEvent.touches[0].pageX;\n            if (e.button === 2) {\n                return;\n            }\n\n            if (target === \"both\") {\n                this.setTempMinInterval();\n            }\n\n            if (!target) {\n                target = this.target || \"from\";\n            }\n\n            this.current_plugin = this.plugin_count;\n            this.target = target;\n\n            this.is_active = true;\n            this.dragging = true;\n\n            this.coords.x_gap = this.$cache.rs.offset().left;\n            this.coords.x_pointer = x - this.coords.x_gap;\n\n            this.calcPointerPercent();\n            this.changeLevel(target);\n\n            if (is_old_ie) {\n                $(\"*\").prop(\"unselectable\", true);\n            }\n\n            this.$cache.line.trigger(\"focus\");\n\n            this.updateScene();\n        },\n\n        /**\n         * Mousedown or touchstart\n         * for other slider elements, like diapason line\n         *\n         * @param target {String}\n         * @param e {Object} event object\n         */\n        pointerClick: function (target, e) {\n            e.preventDefault();\n            var x = e.pageX || e.originalEvent.touches && e.originalEvent.touches[0].pageX;\n            if (e.button === 2) {\n                return;\n            }\n\n            this.current_plugin = this.plugin_count;\n            this.target = target;\n\n            this.is_click = true;\n            this.coords.x_gap = this.$cache.rs.offset().left;\n            this.coords.x_pointer = +(x - this.coords.x_gap).toFixed();\n\n            this.force_redraw = true;\n            this.calc();\n\n            this.$cache.line.trigger(\"focus\");\n        },\n\n        /**\n         * Keyborard controls for focused slider\n         *\n         * @param target {String}\n         * @param e {Object} event object\n         * @returns {boolean|undefined}\n         */\n        key: function (target, e) {\n            if (this.current_plugin !== this.plugin_count || e.altKey || e.ctrlKey || e.shiftKey || e.metaKey) {\n                return;\n            }\n\n            switch (e.which) {\n                case 83: // W\n                case 65: // A\n                case 40: // DOWN\n                case 37: // LEFT\n                    e.preventDefault();\n                    this.moveByKey(false);\n                    break;\n\n                case 87: // S\n                case 68: // D\n                case 38: // UP\n                case 39: // RIGHT\n                    e.preventDefault();\n                    this.moveByKey(true);\n                    break;\n            }\n\n            return true;\n        },\n\n        /**\n         * Move by key\n         *\n         * @param right {boolean} direction to move\n         */\n        moveByKey: function (right) {\n            var p = this.coords.p_pointer;\n            var p_step = (this.options.max - this.options.min) / 100;\n            p_step = this.options.step / p_step;\n\n            if (right) {\n                p += p_step;\n            } else {\n                p -= p_step;\n            }\n\n            this.coords.x_pointer = this.toFixed(this.coords.w_rs / 100 * p);\n            this.is_key = true;\n            this.calc();\n        },\n\n        /**\n         * Set visibility and content\n         * of Min and Max labels\n         */\n        setMinMax: function () {\n            if (!this.options) {\n                return;\n            }\n\n            if (this.options.hide_min_max) {\n                this.$cache.min[0].style.display = \"none\";\n                this.$cache.max[0].style.display = \"none\";\n                return;\n            }\n\n            if (this.options.values.length) {\n                this.$cache.min.html(this.decorate(this.options.p_values[this.options.min]));\n                this.$cache.max.html(this.decorate(this.options.p_values[this.options.max]));\n            } else {\n                var min_pretty = this._prettify(this.options.min);\n                var max_pretty = this._prettify(this.options.max);\n\n                this.result.min_pretty = min_pretty;\n                this.result.max_pretty = max_pretty;\n\n                this.$cache.min.html(this.decorate(min_pretty, this.options.min));\n                this.$cache.max.html(this.decorate(max_pretty, this.options.max));\n            }\n\n            this.labels.w_min = this.$cache.min.outerWidth(false);\n            this.labels.w_max = this.$cache.max.outerWidth(false);\n        },\n\n        /**\n         * Then dragging interval, prevent interval collapsing\n         * using min_interval option\n         */\n        setTempMinInterval: function () {\n            var interval = this.result.to - this.result.from;\n\n            if (this.old_min_interval === null) {\n                this.old_min_interval = this.options.min_interval;\n            }\n\n            this.options.min_interval = interval;\n        },\n\n        /**\n         * Restore min_interval option to original\n         */\n        restoreOriginalMinInterval: function () {\n            if (this.old_min_interval !== null) {\n                this.options.min_interval = this.old_min_interval;\n                this.old_min_interval = null;\n            }\n        },\n\n\n\n        // =============================================================================================================\n        // Calculations\n\n        /**\n         * All calculations and measures start here\n         *\n         * @param update {boolean=}\n         */\n        calc: function (update) {\n            if (!this.options) {\n                return;\n            }\n\n            this.calc_count++;\n\n            if (this.calc_count === 10 || update) {\n                this.calc_count = 0;\n                this.coords.w_rs = this.$cache.rs.outerWidth(false);\n\n                this.calcHandlePercent();\n            }\n\n            if (!this.coords.w_rs) {\n                return;\n            }\n\n            this.calcPointerPercent();\n            var handle_x = this.getHandleX();\n\n\n            if (this.target === \"both\") {\n                this.coords.p_gap = 0;\n                handle_x = this.getHandleX();\n            }\n\n            if (this.target === \"click\") {\n                this.coords.p_gap = this.coords.p_handle / 2;\n                handle_x = this.getHandleX();\n\n                if (this.options.drag_interval) {\n                    this.target = \"both_one\";\n                } else {\n                    this.target = this.chooseHandle(handle_x);\n                }\n            }\n\n            switch (this.target) {\n                case \"base\":\n                    var w = (this.options.max - this.options.min) / 100,\n                        f = (this.result.from - this.options.min) / w,\n                        t = (this.result.to - this.options.min) / w;\n\n                    this.coords.p_single_real = this.toFixed(f);\n                    this.coords.p_from_real = this.toFixed(f);\n                    this.coords.p_to_real = this.toFixed(t);\n\n                    this.coords.p_single_real = this.checkDiapason(this.coords.p_single_real, this.options.from_min, this.options.from_max);\n                    this.coords.p_from_real = this.checkDiapason(this.coords.p_from_real, this.options.from_min, this.options.from_max);\n                    this.coords.p_to_real = this.checkDiapason(this.coords.p_to_real, this.options.to_min, this.options.to_max);\n\n                    this.coords.p_single_fake = this.convertToFakePercent(this.coords.p_single_real);\n                    this.coords.p_from_fake = this.convertToFakePercent(this.coords.p_from_real);\n                    this.coords.p_to_fake = this.convertToFakePercent(this.coords.p_to_real);\n\n                    this.target = null;\n\n                    break;\n\n                case \"single\":\n                    if (this.options.from_fixed) {\n                        break;\n                    }\n\n                    this.coords.p_single_real = this.convertToRealPercent(handle_x);\n                    this.coords.p_single_real = this.calcWithStep(this.coords.p_single_real);\n                    this.coords.p_single_real = this.checkDiapason(this.coords.p_single_real, this.options.from_min, this.options.from_max);\n\n                    this.coords.p_single_fake = this.convertToFakePercent(this.coords.p_single_real);\n\n                    break;\n\n                case \"from\":\n                    if (this.options.from_fixed) {\n                        break;\n                    }\n\n                    this.coords.p_from_real = this.convertToRealPercent(handle_x);\n                    this.coords.p_from_real = this.calcWithStep(this.coords.p_from_real);\n                    if (this.coords.p_from_real > this.coords.p_to_real) {\n                        this.coords.p_from_real = this.coords.p_to_real;\n                    }\n                    this.coords.p_from_real = this.checkDiapason(this.coords.p_from_real, this.options.from_min, this.options.from_max);\n                    this.coords.p_from_real = this.checkMinInterval(this.coords.p_from_real, this.coords.p_to_real, \"from\");\n                    this.coords.p_from_real = this.checkMaxInterval(this.coords.p_from_real, this.coords.p_to_real, \"from\");\n\n                    this.coords.p_from_fake = this.convertToFakePercent(this.coords.p_from_real);\n\n                    break;\n\n                case \"to\":\n                    if (this.options.to_fixed) {\n                        break;\n                    }\n\n                    this.coords.p_to_real = this.convertToRealPercent(handle_x);\n                    this.coords.p_to_real = this.calcWithStep(this.coords.p_to_real);\n                    if (this.coords.p_to_real < this.coords.p_from_real) {\n                        this.coords.p_to_real = this.coords.p_from_real;\n                    }\n                    this.coords.p_to_real = this.checkDiapason(this.coords.p_to_real, this.options.to_min, this.options.to_max);\n                    this.coords.p_to_real = this.checkMinInterval(this.coords.p_to_real, this.coords.p_from_real, \"to\");\n                    this.coords.p_to_real = this.checkMaxInterval(this.coords.p_to_real, this.coords.p_from_real, \"to\");\n\n                    this.coords.p_to_fake = this.convertToFakePercent(this.coords.p_to_real);\n\n                    break;\n\n                case \"both\":\n                    if (this.options.from_fixed || this.options.to_fixed) {\n                        break;\n                    }\n\n                    handle_x = this.toFixed(handle_x + (this.coords.p_handle * 0.001));\n\n                    this.coords.p_from_real = this.convertToRealPercent(handle_x) - this.coords.p_gap_left;\n                    this.coords.p_from_real = this.calcWithStep(this.coords.p_from_real);\n                    this.coords.p_from_real = this.checkDiapason(this.coords.p_from_real, this.options.from_min, this.options.from_max);\n                    this.coords.p_from_real = this.checkMinInterval(this.coords.p_from_real, this.coords.p_to_real, \"from\");\n                    this.coords.p_from_fake = this.convertToFakePercent(this.coords.p_from_real);\n\n                    this.coords.p_to_real = this.convertToRealPercent(handle_x) + this.coords.p_gap_right;\n                    this.coords.p_to_real = this.calcWithStep(this.coords.p_to_real);\n                    this.coords.p_to_real = this.checkDiapason(this.coords.p_to_real, this.options.to_min, this.options.to_max);\n                    this.coords.p_to_real = this.checkMinInterval(this.coords.p_to_real, this.coords.p_from_real, \"to\");\n                    this.coords.p_to_fake = this.convertToFakePercent(this.coords.p_to_real);\n\n                    break;\n\n                case \"both_one\":\n                    if (this.options.from_fixed || this.options.to_fixed) {\n                        break;\n                    }\n\n                    var real_x = this.convertToRealPercent(handle_x),\n                        from = this.result.from_percent,\n                        to = this.result.to_percent,\n                        full = to - from,\n                        half = full / 2,\n                        new_from = real_x - half,\n                        new_to = real_x + half;\n\n                    if (new_from < 0) {\n                        new_from = 0;\n                        new_to = new_from + full;\n                    }\n\n                    if (new_to > 100) {\n                        new_to = 100;\n                        new_from = new_to - full;\n                    }\n\n                    this.coords.p_from_real = this.calcWithStep(new_from);\n                    this.coords.p_from_real = this.checkDiapason(this.coords.p_from_real, this.options.from_min, this.options.from_max);\n                    this.coords.p_from_fake = this.convertToFakePercent(this.coords.p_from_real);\n\n                    this.coords.p_to_real = this.calcWithStep(new_to);\n                    this.coords.p_to_real = this.checkDiapason(this.coords.p_to_real, this.options.to_min, this.options.to_max);\n                    this.coords.p_to_fake = this.convertToFakePercent(this.coords.p_to_real);\n\n                    break;\n            }\n\n            if (this.options.type === \"single\") {\n                this.coords.p_bar_x = (this.coords.p_handle / 2);\n                this.coords.p_bar_w = this.coords.p_single_fake;\n\n                this.result.from_percent = this.coords.p_single_real;\n                this.result.from = this.convertToValue(this.coords.p_single_real);\n                this.result.from_pretty = this._prettify(this.result.from);\n\n                if (this.options.values.length) {\n                    this.result.from_value = this.options.values[this.result.from];\n                }\n            } else {\n                this.coords.p_bar_x = this.toFixed(this.coords.p_from_fake + (this.coords.p_handle / 2));\n                this.coords.p_bar_w = this.toFixed(this.coords.p_to_fake - this.coords.p_from_fake);\n\n                this.result.from_percent = this.coords.p_from_real;\n                this.result.from = this.convertToValue(this.coords.p_from_real);\n                this.result.from_pretty = this._prettify(this.result.from);\n                this.result.to_percent = this.coords.p_to_real;\n                this.result.to = this.convertToValue(this.coords.p_to_real);\n                this.result.to_pretty = this._prettify(this.result.to);\n\n                if (this.options.values.length) {\n                    this.result.from_value = this.options.values[this.result.from];\n                    this.result.to_value = this.options.values[this.result.to];\n                }\n            }\n\n            this.calcMinMax();\n            this.calcLabels();\n        },\n\n\n        /**\n         * calculates pointer X in percent\n         */\n        calcPointerPercent: function () {\n            if (!this.coords.w_rs) {\n                this.coords.p_pointer = 0;\n                return;\n            }\n\n            if (this.coords.x_pointer < 0 || isNaN(this.coords.x_pointer)  ) {\n                this.coords.x_pointer = 0;\n            } else if (this.coords.x_pointer > this.coords.w_rs) {\n                this.coords.x_pointer = this.coords.w_rs;\n            }\n\n            this.coords.p_pointer = this.toFixed(this.coords.x_pointer / this.coords.w_rs * 100);\n        },\n\n        convertToRealPercent: function (fake) {\n            var full = 100 - this.coords.p_handle;\n            return fake / full * 100;\n        },\n\n        convertToFakePercent: function (real) {\n            var full = 100 - this.coords.p_handle;\n            return real / 100 * full;\n        },\n\n        getHandleX: function () {\n            var max = 100 - this.coords.p_handle,\n                x = this.toFixed(this.coords.p_pointer - this.coords.p_gap);\n\n            if (x < 0) {\n                x = 0;\n            } else if (x > max) {\n                x = max;\n            }\n\n            return x;\n        },\n\n        calcHandlePercent: function () {\n            if (this.options.type === \"single\") {\n                this.coords.w_handle = this.$cache.s_single.outerWidth(false);\n            } else {\n                this.coords.w_handle = this.$cache.s_from.outerWidth(false);\n            }\n\n            this.coords.p_handle = this.toFixed(this.coords.w_handle / this.coords.w_rs * 100);\n        },\n\n        /**\n         * Find closest handle to pointer click\n         *\n         * @param real_x {Number}\n         * @returns {String}\n         */\n        chooseHandle: function (real_x) {\n            if (this.options.type === \"single\") {\n                return \"single\";\n            } else {\n                var m_point = this.coords.p_from_real + ((this.coords.p_to_real - this.coords.p_from_real) / 2);\n                if (real_x >= m_point) {\n                    return this.options.to_fixed ? \"from\" : \"to\";\n                } else {\n                    return this.options.from_fixed ? \"to\" : \"from\";\n                }\n            }\n        },\n\n        /**\n         * Measure Min and Max labels width in percent\n         */\n        calcMinMax: function () {\n            if (!this.coords.w_rs) {\n                return;\n            }\n\n            this.labels.p_min = this.labels.w_min / this.coords.w_rs * 100;\n            this.labels.p_max = this.labels.w_max / this.coords.w_rs * 100;\n        },\n\n        /**\n         * Measure labels width and X in percent\n         */\n        calcLabels: function () {\n            if (!this.coords.w_rs || this.options.hide_from_to) {\n                return;\n            }\n\n            if (this.options.type === \"single\") {\n\n                this.labels.w_single = this.$cache.single.outerWidth(false);\n                this.labels.p_single_fake = this.labels.w_single / this.coords.w_rs * 100;\n                this.labels.p_single_left = this.coords.p_single_fake + (this.coords.p_handle / 2) - (this.labels.p_single_fake / 2);\n                this.labels.p_single_left = this.checkEdges(this.labels.p_single_left, this.labels.p_single_fake);\n\n            } else {\n\n                this.labels.w_from = this.$cache.from.outerWidth(false);\n                this.labels.p_from_fake = this.labels.w_from / this.coords.w_rs * 100;\n                this.labels.p_from_left = this.coords.p_from_fake + (this.coords.p_handle / 2) - (this.labels.p_from_fake / 2);\n                this.labels.p_from_left = this.toFixed(this.labels.p_from_left);\n                this.labels.p_from_left = this.checkEdges(this.labels.p_from_left, this.labels.p_from_fake);\n\n                this.labels.w_to = this.$cache.to.outerWidth(false);\n                this.labels.p_to_fake = this.labels.w_to / this.coords.w_rs * 100;\n                this.labels.p_to_left = this.coords.p_to_fake + (this.coords.p_handle / 2) - (this.labels.p_to_fake / 2);\n                this.labels.p_to_left = this.toFixed(this.labels.p_to_left);\n                this.labels.p_to_left = this.checkEdges(this.labels.p_to_left, this.labels.p_to_fake);\n\n                this.labels.w_single = this.$cache.single.outerWidth(false);\n                this.labels.p_single_fake = this.labels.w_single / this.coords.w_rs * 100;\n                this.labels.p_single_left = ((this.labels.p_from_left + this.labels.p_to_left + this.labels.p_to_fake) / 2) - (this.labels.p_single_fake / 2);\n                this.labels.p_single_left = this.toFixed(this.labels.p_single_left);\n                this.labels.p_single_left = this.checkEdges(this.labels.p_single_left, this.labels.p_single_fake);\n\n            }\n        },\n\n\n\n        // =============================================================================================================\n        // Drawings\n\n        /**\n         * Main function called in request animation frame\n         * to update everything\n         */\n        updateScene: function () {\n            if (this.raf_id) {\n                cancelAnimationFrame(this.raf_id);\n                this.raf_id = null;\n            }\n\n            clearTimeout(this.update_tm);\n            this.update_tm = null;\n\n            if (!this.options) {\n                return;\n            }\n\n            this.drawHandles();\n\n            if (this.is_active) {\n                this.raf_id = requestAnimationFrame(this.updateScene.bind(this));\n            } else {\n                this.update_tm = setTimeout(this.updateScene.bind(this), 300);\n            }\n        },\n\n        /**\n         * Draw handles\n         */\n        drawHandles: function () {\n            this.coords.w_rs = this.$cache.rs.outerWidth(false);\n\n            if (!this.coords.w_rs) {\n                return;\n            }\n\n            if (this.coords.w_rs !== this.coords.w_rs_old) {\n                this.target = \"base\";\n                this.is_resize = true;\n            }\n\n            if (this.coords.w_rs !== this.coords.w_rs_old || this.force_redraw) {\n                this.setMinMax();\n                this.calc(true);\n                this.drawLabels();\n                if (this.options.grid) {\n                    this.calcGridMargin();\n                    this.calcGridLabels();\n                }\n                this.force_redraw = true;\n                this.coords.w_rs_old = this.coords.w_rs;\n                this.drawShadow();\n            }\n\n            if (!this.coords.w_rs) {\n                return;\n            }\n\n            if (!this.dragging && !this.force_redraw && !this.is_key) {\n                return;\n            }\n\n            if (this.old_from !== this.result.from || this.old_to !== this.result.to || this.force_redraw || this.is_key) {\n\n                this.drawLabels();\n\n                this.$cache.bar[0].style.left = this.coords.p_bar_x + \"%\";\n                this.$cache.bar[0].style.width = this.coords.p_bar_w + \"%\";\n\n                if (this.options.type === \"single\") {\n                    this.$cache.bar[0].style.left = 0;\n                    this.$cache.bar[0].style.width = this.coords.p_bar_w + this.coords.p_bar_x + \"%\";\n\n                    this.$cache.s_single[0].style.left = this.coords.p_single_fake + \"%\";\n\n                    this.$cache.single[0].style.left = this.labels.p_single_left + \"%\";\n                } else {\n                    this.$cache.s_from[0].style.left = this.coords.p_from_fake + \"%\";\n                    this.$cache.s_to[0].style.left = this.coords.p_to_fake + \"%\";\n\n                    if (this.old_from !== this.result.from || this.force_redraw) {\n                        this.$cache.from[0].style.left = this.labels.p_from_left + \"%\";\n                    }\n                    if (this.old_to !== this.result.to || this.force_redraw) {\n                        this.$cache.to[0].style.left = this.labels.p_to_left + \"%\";\n                    }\n\n                    this.$cache.single[0].style.left = this.labels.p_single_left + \"%\";\n                }\n\n                this.writeToInput();\n\n                if ((this.old_from !== this.result.from || this.old_to !== this.result.to) && !this.is_start) {\n                    this.$cache.input.trigger(\"change\");\n                    this.$cache.input.trigger(\"input\");\n                }\n\n                this.old_from = this.result.from;\n                this.old_to = this.result.to;\n\n                // callbacks call\n                if (!this.is_resize && !this.is_update && !this.is_start && !this.is_finish) {\n                    this.callOnChange();\n                }\n                if (this.is_key || this.is_click) {\n                    this.is_key = false;\n                    this.is_click = false;\n                    this.callOnFinish();\n                }\n\n                this.is_update = false;\n                this.is_resize = false;\n                this.is_finish = false;\n            }\n\n            this.is_start = false;\n            this.is_key = false;\n            this.is_click = false;\n            this.force_redraw = false;\n        },\n\n        /**\n         * Draw labels\n         * measure labels collisions\n         * collapse close labels\n         */\n        drawLabels: function () {\n            if (!this.options) {\n                return;\n            }\n\n            var values_num = this.options.values.length;\n            var p_values = this.options.p_values;\n            var text_single;\n            var text_from;\n            var text_to;\n            var from_pretty;\n            var to_pretty;\n\n            if (this.options.hide_from_to) {\n                return;\n            }\n\n            if (this.options.type === \"single\") {\n\n                if (values_num) {\n                    text_single = this.decorate(p_values[this.result.from]);\n                    this.$cache.single.html(text_single);\n                } else {\n                    from_pretty = this._prettify(this.result.from);\n\n                    text_single = this.decorate(from_pretty, this.result.from);\n                    this.$cache.single.html(text_single);\n                }\n\n                this.calcLabels();\n\n                if (this.labels.p_single_left < this.labels.p_min + 1) {\n                    this.$cache.min[0].style.visibility = \"hidden\";\n                } else {\n                    this.$cache.min[0].style.visibility = \"visible\";\n                }\n\n                if (this.labels.p_single_left + this.labels.p_single_fake > 100 - this.labels.p_max - 1) {\n                    this.$cache.max[0].style.visibility = \"hidden\";\n                } else {\n                    this.$cache.max[0].style.visibility = \"visible\";\n                }\n\n            } else {\n\n                if (values_num) {\n\n                    if (this.options.decorate_both) {\n                        text_single = this.decorate(p_values[this.result.from]);\n                        text_single += this.options.values_separator;\n                        text_single += this.decorate(p_values[this.result.to]);\n                    } else {\n                        text_single = this.decorate(p_values[this.result.from] + this.options.values_separator + p_values[this.result.to]);\n                    }\n                    text_from = this.decorate(p_values[this.result.from]);\n                    text_to = this.decorate(p_values[this.result.to]);\n\n                    this.$cache.single.html(text_single);\n                    this.$cache.from.html(text_from);\n                    this.$cache.to.html(text_to);\n\n                } else {\n                    from_pretty = this._prettify(this.result.from);\n                    to_pretty = this._prettify(this.result.to);\n\n                    if (this.options.decorate_both) {\n                        text_single = this.decorate(from_pretty, this.result.from);\n                        text_single += this.options.values_separator;\n                        text_single += this.decorate(to_pretty, this.result.to);\n                    } else {\n                        text_single = this.decorate(from_pretty + this.options.values_separator + to_pretty, this.result.to);\n                    }\n                    text_from = this.decorate(from_pretty, this.result.from);\n                    text_to = this.decorate(to_pretty, this.result.to);\n\n                    this.$cache.single.html(text_single);\n                    this.$cache.from.html(text_from);\n                    this.$cache.to.html(text_to);\n\n                }\n\n                this.calcLabels();\n\n                var min = Math.min(this.labels.p_single_left, this.labels.p_from_left),\n                    single_left = this.labels.p_single_left + this.labels.p_single_fake,\n                    to_left = this.labels.p_to_left + this.labels.p_to_fake,\n                    max = Math.max(single_left, to_left);\n\n                if (this.labels.p_from_left + this.labels.p_from_fake >= this.labels.p_to_left) {\n                    this.$cache.from[0].style.visibility = \"hidden\";\n                    this.$cache.to[0].style.visibility = \"hidden\";\n                    this.$cache.single[0].style.visibility = \"visible\";\n\n                    if (this.result.from === this.result.to) {\n                        if (this.target === \"from\") {\n                            this.$cache.from[0].style.visibility = \"visible\";\n                        } else if (this.target === \"to\") {\n                            this.$cache.to[0].style.visibility = \"visible\";\n                        } else if (!this.target) {\n                            this.$cache.from[0].style.visibility = \"visible\";\n                        }\n                        this.$cache.single[0].style.visibility = \"hidden\";\n                        max = to_left;\n                    } else {\n                        this.$cache.from[0].style.visibility = \"hidden\";\n                        this.$cache.to[0].style.visibility = \"hidden\";\n                        this.$cache.single[0].style.visibility = \"visible\";\n                        max = Math.max(single_left, to_left);\n                    }\n                } else {\n                    this.$cache.from[0].style.visibility = \"visible\";\n                    this.$cache.to[0].style.visibility = \"visible\";\n                    this.$cache.single[0].style.visibility = \"hidden\";\n                }\n\n                if (min < this.labels.p_min + 1) {\n                    this.$cache.min[0].style.visibility = \"hidden\";\n                } else {\n                    this.$cache.min[0].style.visibility = \"visible\";\n                }\n\n                if (max > 100 - this.labels.p_max - 1) {\n                    this.$cache.max[0].style.visibility = \"hidden\";\n                } else {\n                    this.$cache.max[0].style.visibility = \"visible\";\n                }\n\n            }\n        },\n\n        /**\n         * Draw shadow intervals\n         */\n        drawShadow: function () {\n            var o = this.options,\n                c = this.$cache,\n\n                is_from_min = typeof o.from_min === \"number\" && !isNaN(o.from_min),\n                is_from_max = typeof o.from_max === \"number\" && !isNaN(o.from_max),\n                is_to_min = typeof o.to_min === \"number\" && !isNaN(o.to_min),\n                is_to_max = typeof o.to_max === \"number\" && !isNaN(o.to_max),\n\n                from_min,\n                from_max,\n                to_min,\n                to_max;\n\n            if (o.type === \"single\") {\n                if (o.from_shadow && (is_from_min || is_from_max)) {\n                    from_min = this.convertToPercent(is_from_min ? o.from_min : o.min);\n                    from_max = this.convertToPercent(is_from_max ? o.from_max : o.max) - from_min;\n                    from_min = this.toFixed(from_min - (this.coords.p_handle / 100 * from_min));\n                    from_max = this.toFixed(from_max - (this.coords.p_handle / 100 * from_max));\n                    from_min = from_min + (this.coords.p_handle / 2);\n\n                    c.shad_single[0].style.display = \"block\";\n                    c.shad_single[0].style.left = from_min + \"%\";\n                    c.shad_single[0].style.width = from_max + \"%\";\n                } else {\n                    c.shad_single[0].style.display = \"none\";\n                }\n            } else {\n                if (o.from_shadow && (is_from_min || is_from_max)) {\n                    from_min = this.convertToPercent(is_from_min ? o.from_min : o.min);\n                    from_max = this.convertToPercent(is_from_max ? o.from_max : o.max) - from_min;\n                    from_min = this.toFixed(from_min - (this.coords.p_handle / 100 * from_min));\n                    from_max = this.toFixed(from_max - (this.coords.p_handle / 100 * from_max));\n                    from_min = from_min + (this.coords.p_handle / 2);\n\n                    c.shad_from[0].style.display = \"block\";\n                    c.shad_from[0].style.left = from_min + \"%\";\n                    c.shad_from[0].style.width = from_max + \"%\";\n                } else {\n                    c.shad_from[0].style.display = \"none\";\n                }\n\n                if (o.to_shadow && (is_to_min || is_to_max)) {\n                    to_min = this.convertToPercent(is_to_min ? o.to_min : o.min);\n                    to_max = this.convertToPercent(is_to_max ? o.to_max : o.max) - to_min;\n                    to_min = this.toFixed(to_min - (this.coords.p_handle / 100 * to_min));\n                    to_max = this.toFixed(to_max - (this.coords.p_handle / 100 * to_max));\n                    to_min = to_min + (this.coords.p_handle / 2);\n\n                    c.shad_to[0].style.display = \"block\";\n                    c.shad_to[0].style.left = to_min + \"%\";\n                    c.shad_to[0].style.width = to_max + \"%\";\n                } else {\n                    c.shad_to[0].style.display = \"none\";\n                }\n            }\n        },\n\n\n\n        /**\n         * Write values to input element\n         */\n        writeToInput: function () {\n            if (this.options.type === \"single\") {\n                if (this.options.values.length) {\n                    this.$cache.input.prop(\"value\", this.result.from_value);\n                } else {\n                    this.$cache.input.prop(\"value\", this.result.from);\n                }\n                this.$cache.input.data(\"from\", this.result.from);\n            } else {\n                if (this.options.values.length) {\n                    this.$cache.input.prop(\"value\", this.result.from_value + this.options.input_values_separator + this.result.to_value);\n                } else {\n                    this.$cache.input.prop(\"value\", this.result.from + this.options.input_values_separator + this.result.to);\n                }\n                this.$cache.input.data(\"from\", this.result.from);\n                this.$cache.input.data(\"to\", this.result.to);\n            }\n        },\n\n\n\n        // =============================================================================================================\n        // Callbacks\n\n        callOnStart: function () {\n            this.writeToInput();\n\n            if (this.options.onStart && typeof this.options.onStart === \"function\") {\n                if (this.options.scope) {\n                    this.options.onStart.call(this.options.scope, this.result);\n                } else {\n                    this.options.onStart(this.result);\n                }\n            }\n        },\n        callOnChange: function () {\n            this.writeToInput();\n\n            if (this.options.onChange && typeof this.options.onChange === \"function\") {\n                if (this.options.scope) {\n                    this.options.onChange.call(this.options.scope, this.result);\n                } else {\n                    this.options.onChange(this.result);\n                }\n            }\n        },\n        callOnFinish: function () {\n            this.writeToInput();\n\n            if (this.options.onFinish && typeof this.options.onFinish === \"function\") {\n                if (this.options.scope) {\n                    this.options.onFinish.call(this.options.scope, this.result);\n                } else {\n                    this.options.onFinish(this.result);\n                }\n            }\n        },\n        callOnUpdate: function () {\n            this.writeToInput();\n\n            if (this.options.onUpdate && typeof this.options.onUpdate === \"function\") {\n                if (this.options.scope) {\n                    this.options.onUpdate.call(this.options.scope, this.result);\n                } else {\n                    this.options.onUpdate(this.result);\n                }\n            }\n        },\n\n\n\n\n        // =============================================================================================================\n        // Service methods\n\n        toggleInput: function () {\n            this.$cache.input.toggleClass(\"irs-hidden-input\");\n\n            if (this.has_tab_index) {\n                this.$cache.input.prop(\"tabindex\", -1);\n            } else {\n                this.$cache.input.removeProp(\"tabindex\");\n            }\n\n            this.has_tab_index = !this.has_tab_index;\n        },\n\n        /**\n         * Convert real value to percent\n         *\n         * @param value {Number} X in real\n         * @param no_min {boolean=} don't use min value\n         * @returns {Number} X in percent\n         */\n        convertToPercent: function (value, no_min) {\n            var diapason = this.options.max - this.options.min,\n                one_percent = diapason / 100,\n                val, percent;\n\n            if (!diapason) {\n                this.no_diapason = true;\n                return 0;\n            }\n\n            if (no_min) {\n                val = value;\n            } else {\n                val = value - this.options.min;\n            }\n\n            percent = val / one_percent;\n\n            return this.toFixed(percent);\n        },\n\n        /**\n         * Convert percent to real values\n         *\n         * @param percent {Number} X in percent\n         * @returns {Number} X in real\n         */\n        convertToValue: function (percent) {\n            var min = this.options.min,\n                max = this.options.max,\n                min_decimals = min.toString().split(\".\")[1],\n                max_decimals = max.toString().split(\".\")[1],\n                min_length, max_length,\n                avg_decimals = 0,\n                abs = 0;\n\n            if (percent === 0) {\n                return this.options.min;\n            }\n            if (percent === 100) {\n                return this.options.max;\n            }\n\n\n            if (min_decimals) {\n                min_length = min_decimals.length;\n                avg_decimals = min_length;\n            }\n            if (max_decimals) {\n                max_length = max_decimals.length;\n                avg_decimals = max_length;\n            }\n            if (min_length && max_length) {\n                avg_decimals = (min_length >= max_length) ? min_length : max_length;\n            }\n\n            if (min < 0) {\n                abs = Math.abs(min);\n                min = +(min + abs).toFixed(avg_decimals);\n                max = +(max + abs).toFixed(avg_decimals);\n            }\n\n            var number = ((max - min) / 100 * percent) + min,\n                string = this.options.step.toString().split(\".\")[1],\n                result;\n\n            if (string) {\n                number = +number.toFixed(string.length);\n            } else {\n                number = number / this.options.step;\n                number = number * this.options.step;\n\n                number = +number.toFixed(0);\n            }\n\n            if (abs) {\n                number -= abs;\n            }\n\n            if (string) {\n                result = +number.toFixed(string.length);\n            } else {\n                result = this.toFixed(number);\n            }\n\n            if (result < this.options.min) {\n                result = this.options.min;\n            } else if (result > this.options.max) {\n                result = this.options.max;\n            }\n\n            return result;\n        },\n\n        /**\n         * Round percent value with step\n         *\n         * @param percent {Number}\n         * @returns percent {Number} rounded\n         */\n        calcWithStep: function (percent) {\n            var rounded = Math.round(percent / this.coords.p_step) * this.coords.p_step;\n\n            if (rounded > 100) {\n                rounded = 100;\n            }\n            if (percent === 100) {\n                rounded = 100;\n            }\n\n            return this.toFixed(rounded);\n        },\n\n        checkMinInterval: function (p_current, p_next, type) {\n            var o = this.options,\n                current,\n                next;\n\n            if (!o.min_interval) {\n                return p_current;\n            }\n\n            current = this.convertToValue(p_current);\n            next = this.convertToValue(p_next);\n\n            if (type === \"from\") {\n\n                if (next - current < o.min_interval) {\n                    current = next - o.min_interval;\n                }\n\n            } else {\n\n                if (current - next < o.min_interval) {\n                    current = next + o.min_interval;\n                }\n\n            }\n\n            return this.convertToPercent(current);\n        },\n\n        checkMaxInterval: function (p_current, p_next, type) {\n            var o = this.options,\n                current,\n                next;\n\n            if (!o.max_interval) {\n                return p_current;\n            }\n\n            current = this.convertToValue(p_current);\n            next = this.convertToValue(p_next);\n\n            if (type === \"from\") {\n\n                if (next - current > o.max_interval) {\n                    current = next - o.max_interval;\n                }\n\n            } else {\n\n                if (current - next > o.max_interval) {\n                    current = next + o.max_interval;\n                }\n\n            }\n\n            return this.convertToPercent(current);\n        },\n\n        checkDiapason: function (p_num, min, max) {\n            var num = this.convertToValue(p_num),\n                o = this.options;\n\n            if (typeof min !== \"number\") {\n                min = o.min;\n            }\n\n            if (typeof max !== \"number\") {\n                max = o.max;\n            }\n\n            if (num < min) {\n                num = min;\n            }\n\n            if (num > max) {\n                num = max;\n            }\n\n            return this.convertToPercent(num);\n        },\n\n        toFixed: function (num) {\n            num = num.toFixed(20);\n            return +num;\n        },\n\n        _prettify: function (num) {\n            if (!this.options.prettify_enabled) {\n                return num;\n            }\n\n            if (this.options.prettify && typeof this.options.prettify === \"function\") {\n                return this.options.prettify(num);\n            } else {\n                return this.prettify(num);\n            }\n        },\n\n        prettify: function (num) {\n            var n = num.toString();\n            return n.replace(/(\\d{1,3}(?=(?:\\d\\d\\d)+(?!\\d)))/g, \"$1\" + this.options.prettify_separator);\n        },\n\n        checkEdges: function (left, width) {\n            if (!this.options.force_edges) {\n                return this.toFixed(left);\n            }\n\n            if (left < 0) {\n                left = 0;\n            } else if (left > 100 - width) {\n                left = 100 - width;\n            }\n\n            return this.toFixed(left);\n        },\n\n        validate: function () {\n            var o = this.options,\n                r = this.result,\n                v = o.values,\n                vl = v.length,\n                value,\n                i;\n\n            if (typeof o.min === \"string\") o.min = +o.min;\n            if (typeof o.max === \"string\") o.max = +o.max;\n            if (typeof o.from === \"string\") o.from = +o.from;\n            if (typeof o.to === \"string\") o.to = +o.to;\n            if (typeof o.step === \"string\") o.step = +o.step;\n\n            if (typeof o.from_min === \"string\") o.from_min = +o.from_min;\n            if (typeof o.from_max === \"string\") o.from_max = +o.from_max;\n            if (typeof o.to_min === \"string\") o.to_min = +o.to_min;\n            if (typeof o.to_max === \"string\") o.to_max = +o.to_max;\n\n            if (typeof o.grid_num === \"string\") o.grid_num = +o.grid_num;\n\n            if (o.max < o.min) {\n                o.max = o.min;\n            }\n\n            if (vl) {\n                o.p_values = [];\n                o.min = 0;\n                o.max = vl - 1;\n                o.step = 1;\n                o.grid_num = o.max;\n                o.grid_snap = true;\n\n                for (i = 0; i < vl; i++) {\n                    value = +v[i];\n\n                    if (!isNaN(value)) {\n                        v[i] = value;\n                        value = this._prettify(value);\n                    } else {\n                        value = v[i];\n                    }\n\n                    o.p_values.push(value);\n                }\n            }\n\n            if (typeof o.from !== \"number\" || isNaN(o.from)) {\n                o.from = o.min;\n            }\n\n            if (typeof o.to !== \"number\" || isNaN(o.to)) {\n                o.to = o.max;\n            }\n\n            if (o.type === \"single\") {\n\n                if (o.from < o.min) o.from = o.min;\n                if (o.from > o.max) o.from = o.max;\n\n            } else {\n\n                if (o.from < o.min) o.from = o.min;\n                if (o.from > o.max) o.from = o.max;\n\n                if (o.to < o.min) o.to = o.min;\n                if (o.to > o.max) o.to = o.max;\n\n                if (this.update_check.from) {\n\n                    if (this.update_check.from !== o.from) {\n                        if (o.from > o.to) o.from = o.to;\n                    }\n                    if (this.update_check.to !== o.to) {\n                        if (o.to < o.from) o.to = o.from;\n                    }\n\n                }\n\n                if (o.from > o.to) o.from = o.to;\n                if (o.to < o.from) o.to = o.from;\n\n            }\n\n            if (typeof o.step !== \"number\" || isNaN(o.step) || !o.step || o.step < 0) {\n                o.step = 1;\n            }\n\n            if (typeof o.from_min === \"number\" && o.from < o.from_min) {\n                o.from = o.from_min;\n            }\n\n            if (typeof o.from_max === \"number\" && o.from > o.from_max) {\n                o.from = o.from_max;\n            }\n\n            if (typeof o.to_min === \"number\" && o.to < o.to_min) {\n                o.to = o.to_min;\n            }\n\n            if (typeof o.to_max === \"number\" && o.from > o.to_max) {\n                o.to = o.to_max;\n            }\n\n            if (r) {\n                if (r.min !== o.min) {\n                    r.min = o.min;\n                }\n\n                if (r.max !== o.max) {\n                    r.max = o.max;\n                }\n\n                if (r.from < r.min || r.from > r.max) {\n                    r.from = o.from;\n                }\n\n                if (r.to < r.min || r.to > r.max) {\n                    r.to = o.to;\n                }\n            }\n\n            if (typeof o.min_interval !== \"number\" || isNaN(o.min_interval) || !o.min_interval || o.min_interval < 0) {\n                o.min_interval = 0;\n            }\n\n            if (typeof o.max_interval !== \"number\" || isNaN(o.max_interval) || !o.max_interval || o.max_interval < 0) {\n                o.max_interval = 0;\n            }\n\n            if (o.min_interval && o.min_interval > o.max - o.min) {\n                o.min_interval = o.max - o.min;\n            }\n\n            if (o.max_interval && o.max_interval > o.max - o.min) {\n                o.max_interval = o.max - o.min;\n            }\n        },\n\n        decorate: function (num, original) {\n            var decorated = \"\",\n                o = this.options;\n\n            if (o.prefix) {\n                decorated += o.prefix;\n            }\n\n            decorated += num;\n\n            if (o.max_postfix) {\n                if (o.values.length && num === o.p_values[o.max]) {\n                    decorated += o.max_postfix;\n                    if (o.postfix) {\n                        decorated += \" \";\n                    }\n                } else if (original === o.max) {\n                    decorated += o.max_postfix;\n                    if (o.postfix) {\n                        decorated += \" \";\n                    }\n                }\n            }\n\n            if (o.postfix) {\n                decorated += o.postfix;\n            }\n\n            return decorated;\n        },\n\n        updateFrom: function () {\n            this.result.from = this.options.from;\n            this.result.from_percent = this.convertToPercent(this.result.from);\n            this.result.from_pretty = this._prettify(this.result.from);\n            if (this.options.values) {\n                this.result.from_value = this.options.values[this.result.from];\n            }\n        },\n\n        updateTo: function () {\n            this.result.to = this.options.to;\n            this.result.to_percent = this.convertToPercent(this.result.to);\n            this.result.to_pretty = this._prettify(this.result.to);\n            if (this.options.values) {\n                this.result.to_value = this.options.values[this.result.to];\n            }\n        },\n\n        updateResult: function () {\n            this.result.min = this.options.min;\n            this.result.max = this.options.max;\n            this.updateFrom();\n            this.updateTo();\n        },\n\n\n        // =============================================================================================================\n        // Grid\n\n        appendGrid: function () {\n            if (!this.options.grid) {\n                return;\n            }\n\n            var o = this.options,\n                i, z,\n\n                total = o.max - o.min,\n                big_num = o.grid_num,\n                big_p = 0,\n                big_w = 0,\n\n                small_max = 4,\n                local_small_max,\n                small_p,\n                small_w = 0,\n\n                result,\n                html = '';\n\n\n\n            this.calcGridMargin();\n\n            if (o.grid_snap) {\n                big_num = total / o.step;\n            }\n\n            if (big_num > 50) big_num = 50;\n            big_p = this.toFixed(100 / big_num);\n\n            if (big_num > 4) {\n                small_max = 3;\n            }\n            if (big_num > 7) {\n                small_max = 2;\n            }\n            if (big_num > 14) {\n                small_max = 1;\n            }\n            if (big_num > 28) {\n                small_max = 0;\n            }\n\n            for (i = 0; i < big_num + 1; i++) {\n                local_small_max = small_max;\n\n                big_w = this.toFixed(big_p * i);\n\n                if (big_w > 100) {\n                    big_w = 100;\n                }\n                this.coords.big[i] = big_w;\n\n                small_p = (big_w - (big_p * (i - 1))) / (local_small_max + 1);\n\n                for (z = 1; z <= local_small_max; z++) {\n                    if (big_w === 0) {\n                        break;\n                    }\n\n                    small_w = this.toFixed(big_w - (small_p * z));\n\n                    html += '<span class=\"irs-grid-pol small\" style=\"left: ' + small_w + '%\"></span>';\n                }\n\n                html += '<span class=\"irs-grid-pol\" style=\"left: ' + big_w + '%\"></span>';\n\n                result = this.convertToValue(big_w);\n                if (o.values.length) {\n                    result = o.p_values[result];\n                } else {\n                    result = this._prettify(result);\n                }\n\n                html += '<span class=\"irs-grid-text js-grid-text-' + i + '\" style=\"left: ' + big_w + '%\">' + result + '</span>';\n            }\n            this.coords.big_num = Math.ceil(big_num + 1);\n\n\n\n            this.$cache.cont.addClass(\"irs-with-grid\");\n            this.$cache.grid.html(html);\n            this.cacheGridLabels();\n        },\n\n        cacheGridLabels: function () {\n            var $label, i,\n                num = this.coords.big_num;\n\n            for (i = 0; i < num; i++) {\n                $label = this.$cache.grid.find(\".js-grid-text-\" + i);\n                this.$cache.grid_labels.push($label);\n            }\n\n            this.calcGridLabels();\n        },\n\n        calcGridLabels: function () {\n            var i, label, start = [], finish = [],\n                num = this.coords.big_num;\n\n            for (i = 0; i < num; i++) {\n                this.coords.big_w[i] = this.$cache.grid_labels[i].outerWidth(false);\n                this.coords.big_p[i] = this.toFixed(this.coords.big_w[i] / this.coords.w_rs * 100);\n                this.coords.big_x[i] = this.toFixed(this.coords.big_p[i] / 2);\n\n                start[i] = this.toFixed(this.coords.big[i] - this.coords.big_x[i]);\n                finish[i] = this.toFixed(start[i] + this.coords.big_p[i]);\n            }\n\n            if (this.options.force_edges) {\n                if (start[0] < -this.coords.grid_gap) {\n                    start[0] = -this.coords.grid_gap;\n                    finish[0] = this.toFixed(start[0] + this.coords.big_p[0]);\n\n                    this.coords.big_x[0] = this.coords.grid_gap;\n                }\n\n                if (finish[num - 1] > 100 + this.coords.grid_gap) {\n                    finish[num - 1] = 100 + this.coords.grid_gap;\n                    start[num - 1] = this.toFixed(finish[num - 1] - this.coords.big_p[num - 1]);\n\n                    this.coords.big_x[num - 1] = this.toFixed(this.coords.big_p[num - 1] - this.coords.grid_gap);\n                }\n            }\n\n            this.calcGridCollision(2, start, finish);\n            this.calcGridCollision(4, start, finish);\n\n            for (i = 0; i < num; i++) {\n                label = this.$cache.grid_labels[i][0];\n\n                if (this.coords.big_x[i] !== Number.POSITIVE_INFINITY) {\n                    label.style.marginLeft = -this.coords.big_x[i] + \"%\";\n                }\n            }\n        },\n\n        // Collisions Calc Beta\n        // TODO: Refactor then have plenty of time\n        calcGridCollision: function (step, start, finish) {\n            var i, next_i, label,\n                num = this.coords.big_num;\n\n            for (i = 0; i < num; i += step) {\n                next_i = i + (step / 2);\n                if (next_i >= num) {\n                    break;\n                }\n\n                label = this.$cache.grid_labels[next_i][0];\n\n                if (finish[i] <= start[next_i]) {\n                    label.style.visibility = \"visible\";\n                } else {\n                    label.style.visibility = \"hidden\";\n                }\n            }\n        },\n\n        calcGridMargin: function () {\n            if (!this.options.grid_margin) {\n                return;\n            }\n\n            this.coords.w_rs = this.$cache.rs.outerWidth(false);\n            if (!this.coords.w_rs) {\n                return;\n            }\n\n            if (this.options.type === \"single\") {\n                this.coords.w_handle = this.$cache.s_single.outerWidth(false);\n            } else {\n                this.coords.w_handle = this.$cache.s_from.outerWidth(false);\n            }\n            this.coords.p_handle = this.toFixed(this.coords.w_handle  / this.coords.w_rs * 100);\n            this.coords.grid_gap = this.toFixed((this.coords.p_handle / 2) - 0.1);\n\n            this.$cache.grid[0].style.width = this.toFixed(100 - this.coords.p_handle) + \"%\";\n            this.$cache.grid[0].style.left = this.coords.grid_gap + \"%\";\n        },\n\n\n\n        // =============================================================================================================\n        // Public methods\n\n        update: function (options) {\n            if (!this.input) {\n                return;\n            }\n\n            this.is_update = true;\n\n            this.options.from = this.result.from;\n            this.options.to = this.result.to;\n            this.update_check.from = this.result.from;\n            this.update_check.to = this.result.to;\n\n            this.options = $.extend(this.options, options);\n            this.validate();\n            this.updateResult(options);\n\n            this.toggleInput();\n            this.remove();\n            this.init(true);\n        },\n\n        reset: function () {\n            if (!this.input) {\n                return;\n            }\n\n            this.updateResult();\n            this.update();\n        },\n\n        destroy: function () {\n            if (!this.input) {\n                return;\n            }\n\n            this.toggleInput();\n            this.$cache.input.prop(\"readonly\", false);\n            $.data(this.input, \"ionRangeSlider\", null);\n\n            this.remove();\n            this.input = null;\n            this.options = null;\n        }\n    };\n\n    $.fn.ionRangeSlider = function (options) {\n        return this.each(function() {\n            if (!$.data(this, \"ionRangeSlider\")) {\n                $.data(this, \"ionRangeSlider\", new IonRangeSlider(this, options, plugin_count++));\n            }\n        });\n    };\n\n\n\n    // =================================================================================================================\n    // http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n    // http://my.opera.com/emoller/blog/2011/12/20/requestanimationframe-for-smart-er-animating\n\n    // requestAnimationFrame polyfill by Erik Möller. fixes from Paul Irish and Tino Zijdel\n\n    // MIT license\n\n    (function() {\n        var lastTime = 0;\n        var vendors = ['ms', 'moz', 'webkit', 'o'];\n        for(var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {\n            window.requestAnimationFrame = window[vendors[x]+'RequestAnimationFrame'];\n            window.cancelAnimationFrame = window[vendors[x]+'CancelAnimationFrame']\n                || window[vendors[x]+'CancelRequestAnimationFrame'];\n        }\n\n        if (!window.requestAnimationFrame)\n            window.requestAnimationFrame = function(callback, element) {\n                var currTime = new Date().getTime();\n                var timeToCall = Math.max(0, 16 - (currTime - lastTime));\n                var id = window.setTimeout(function() { callback(currTime + timeToCall); },\n                    timeToCall);\n                lastTime = currTime + timeToCall;\n                return id;\n            };\n\n        if (!window.cancelAnimationFrame)\n            window.cancelAnimationFrame = function(id) {\n                clearTimeout(id);\n            };\n    }());\n\n}));\n"]},"metadata":{},"sourceType":"script"}