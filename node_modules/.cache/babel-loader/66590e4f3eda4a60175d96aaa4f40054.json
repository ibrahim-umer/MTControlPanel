{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"G:\\\\Projects\\\\Malik Traders\\\\Admin Controll\\\\MT Admin Control App\\\\src\\\\MalikTraders\\\\Components\\\\Pages\\\\UserManagement\\\\AttachWithNewScheme\\\\AttachtoNewScheme.jsx\";\nimport { Component } from \"react\";\nimport React from 'react';\nimport AdminLayout from '../../../AdminLayout/AdminLayout';\nimport TbInputControl from '../UI/TbInputControl';\nimport axios from \"axios\";\n\nclass AttachWithNewScheme extends Component {\n  constructor(props) {\n    super(props);\n\n    this.ReadyUser = event => {};\n\n    this.PostData = () => {\n      console.log(this.state.AccProtoType);\n    };\n\n    this.MTServiceSelection = event => {\n      if (event.target.value !== 'Please Select Scheme/Product') {\n        this.state.MTServices.map(mtService => {\n          if (mtService === event.target.value) {\n            this.setState({\n              AccProtoType: {\n                \"id\": 0,\n                \"amountPayable\": this.state.AccProtoType.amountPayable,\n                \"monthlyInstalment\": this.state.AccProtoType.monthlyInstalment,\n                \"isAccClosed\": false,\n                \"userid\": this.state.AccProtoType.userid,\n                \"mtServiceId\": mtService.id,\n                \"accPaymentDetails\": null\n              }\n            });\n          }\n        });\n      }\n    };\n\n    this.state = {\n      AccProtoType: {\n        \"id\": 0,\n        \"amountPayable\": 0,\n        \"monthlyInstalment\": 0,\n        \"isAccClosed\": false,\n        \"userid\": 0,\n        \"mtServiceId\": 0,\n        \"accPaymentDetails\": null\n      },\n      MTServices: null\n    };\n    this.amountInputRef = /*#__PURE__*/React.createRef();\n    this.ReadyUser = this.ReadyUser.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.state.AccProtoType.userid === 0) {\n      this.setState({\n        AccProtoType: {\n          \"id\": 0,\n          \"amountPayable\": this.state.AccProtoType.amountPayable,\n          \"monthlyInstalment\": this.state.AccProtoType.monthlyInstalment,\n          \"isAccClosed\": false,\n          \"userid\": this.props.match.params.id,\n          \"mtServiceId\": this.state.AccProtoType.mtServiceId,\n          \"accPaymentDetails\": null\n        }\n      });\n    }\n\n    if (this.state.MTServices === null) {\n      axios.get(window.$domain + 'api/MTServices').then(resp => {\n        this.setState({\n          MTServices: resp.data\n        });\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(AdminLayout, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"jumbotron\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container-fluid\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            children: \"Need Information\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n            children: \"Please Select Scheme/Product\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            class: \"form-select form-select-lg\",\n            onChange: this.MTServiceSelection,\n            \"aria-label\": \".form-select-sm example\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              selected: true,\n              children: \"Please Select Scheme/Product\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 29\n            }, this), this.state.MTServices ? this.state.MTServices.map(MTService => {\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                children: MTService.name\n              }, MTService.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 48\n              }, this);\n            }) : /*#__PURE__*/_jsxDEV(\"option\", {\n              selected: true,\n              children: \"Wait We are trying to Load Your Providing Services\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"form-group \",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"GetAmountPayable\",\n            children: \"Total Amount Payable:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            ref: this.amountInputRef,\n            type: \"number\",\n            class: \"form-control\",\n            onChange: this.ReadyUser,\n            name: \"GetAmountPayable\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TbInputControl, {\n          DataInputHandler: this.ReadyUser,\n          Name: 'Monthly Installment',\n          inutType: 'number',\n          ctrlName: 'GetMonthlyInstallment'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-success\",\n          onClick: this.PostData,\n          children: \"Add User to this Sceme\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default AttachWithNewScheme;","map":{"version":3,"sources":["G:/Projects/Malik Traders/Admin Controll/MT Admin Control App/src/MalikTraders/Components/Pages/UserManagement/AttachWithNewScheme/AttachtoNewScheme.jsx"],"names":["Component","React","AdminLayout","TbInputControl","axios","AttachWithNewScheme","constructor","props","ReadyUser","event","PostData","console","log","state","AccProtoType","MTServiceSelection","target","value","MTServices","map","mtService","setState","amountPayable","monthlyInstalment","userid","id","amountInputRef","createRef","bind","componentDidMount","match","params","mtServiceId","get","window","$domain","then","resp","data","render","MTService","name"],"mappings":"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","sourcesContent":["import { Component } from \"react\";\r\nimport React from 'react'\r\nimport AdminLayout from '../../../AdminLayout/AdminLayout'\r\nimport TbInputControl from '../UI/TbInputControl'\r\nimport axios from \"axios\";\r\n\r\nclass AttachWithNewScheme extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            AccProtoType:{\r\n                \"id\": 0,\r\n                \"amountPayable\": 0,\r\n                \"monthlyInstalment\": 0,\r\n                \"isAccClosed\": false,\r\n                \"userid\": 0,\r\n                \"mtServiceId\": 0,\r\n                \"accPaymentDetails\": null\r\n            },\r\n            MTServices: null\r\n        };\r\n        this.amountInputRef = React.createRef();\r\n        this.ReadyUser = this.ReadyUser.bind(this);\r\n    }\r\n    ReadyUser=(event)=>{\r\n\r\n    }\r\n\r\n    PostData=()=>{\r\n        console.log(this.state.AccProtoType)\r\n    }\r\n    MTServiceSelection = (event) => {\r\n        if(event.target.value !== 'Please Select Scheme/Product'){\r\n            this.state.MTServices.map(\r\n                mtService=>{\r\n                    if(mtService === event.target.value){\r\n                        this.setState({AccProtoType: \r\n                            {\r\n                                \"id\": 0,\r\n                                \"amountPayable\": this.state.AccProtoType.amountPayable,\r\n                                \"monthlyInstalment\": this.state.AccProtoType.monthlyInstalment,\r\n                                \"isAccClosed\": false,\r\n                                \"userid\": this.state.AccProtoType.userid,\r\n                                \"mtServiceId\": mtService.id,\r\n                                \"accPaymentDetails\": null\r\n                            }\r\n                        })\r\n                    }\r\n                }\r\n            )\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        if(this.state.AccProtoType.userid === 0){\r\n            this.setState({AccProtoType: {\r\n                \"id\": 0,\r\n                \"amountPayable\": this.state.AccProtoType.amountPayable,\r\n                \"monthlyInstalment\": this.state.AccProtoType.monthlyInstalment,\r\n                \"isAccClosed\": false,\r\n                \"userid\": this.props.match.params.id,\r\n                \"mtServiceId\": this.state.AccProtoType.mtServiceId,\r\n                \"accPaymentDetails\": null\r\n            }})\r\n        }\r\n        if(this.state.MTServices === null){\r\n            axios.get(window.$domain + 'api/MTServices').\r\n            then(resp=>{\r\n                this.setState({MTServices: resp.data});\r\n            });\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <AdminLayout>\r\n                <div className='jumbotron'>\r\n                    <div className='container-fluid'>\r\n                        <h5>Need Information</h5>\r\n                        <hr/> \r\n                        <h6>Please Select Scheme/Product</h6>\r\n                        <hr/>\r\n                            <select class=\"form-select form-select-lg\" onChange={this.MTServiceSelection} aria-label=\".form-select-sm example\">\r\n                            <option selected>Please Select Scheme/Product</option>\r\n                                {\r\n                                    this.state.MTServices?\r\n                                    this.state.MTServices.map(MTService=>{\r\n                                        return <option key={MTService.id}>{MTService.name}</option>\r\n                                    }):\r\n                                    <option selected>Wait We are trying to Load Your Providing Services</option>\r\n                                }\r\n                            </select>\r\n                    </div>\r\n                    <hr/>\r\n                    <div class=\"form-group \">\r\n                        <label for='GetAmountPayable'>Total Amount Payable:</label>\r\n                        <input ref={this.amountInputRef} type='number' class=\"form-control\" onChange={this.ReadyUser} name='GetAmountPayable'/>\r\n                    </div>\r\n                    <TbInputControl DataInputHandler={this.ReadyUser} Name={'Monthly Installment'} inutType={'number'} ctrlName={'GetMonthlyInstallment'} />\r\n                    <button className=\"btn btn-success\" onClick={this.PostData}>Add User to this Sceme</button>\r\n                </div>\r\n            </AdminLayout>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default AttachWithNewScheme;"]},"metadata":{},"sourceType":"module"}