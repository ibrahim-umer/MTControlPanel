[{"G:\\Projects\\Malik Traders\\Admin Controll\\MT Admin Control App\\src\\index.js":"1","G:\\Projects\\Malik Traders\\Admin Controll\\MT Admin Control App\\src\\reportWebVitals.js":"2","G:\\Projects\\Malik Traders\\Admin Controll\\MT Admin Control App\\src\\App.js":"3","G:\\Projects\\Malik Traders\\Admin Controll\\MT Admin Control App\\src\\Store\\Store.js":"4","G:\\Projects\\Malik Traders\\Admin Controll\\MT Admin Control App\\src\\Store\\User\\Reducer.js":"5","G:\\Projects\\Malik Traders\\Admin Controll\\MT Admin Control App\\src\\MalikTraders\\MalikTraderApp.jsx":"6","G:\\Projects\\Malik Traders\\Admin Controll\\MT Admin Control App\\src\\MalikTraders\\Components\\Pages\\UserManagement\\CreateUser\\CreateUser.jsx":"7","G:\\Projects\\Malik Traders\\Admin Controll\\MT Admin Control App\\src\\MalikTraders\\Components\\Pages\\UserManagement\\UserManagement.jsx":"8","G:\\Projects\\Malik Traders\\Admin Controll\\MT Admin Control App\\src\\MalikTraders\\Components\\Pages\\MTHome.jsx":"9","G:\\Projects\\Malik Traders\\Admin Controll\\MT Admin Control App\\src\\MalikTraders\\Components\\Pages\\AccountManagement\\ShowAccountDetails.jsx":"10","G:\\Projects\\Malik Traders\\Admin Controll\\MT Admin Control App\\src\\MalikTraders\\Components\\Pages\\AccountManagement\\PaymentHistory\\PaymentHistory.jsx":"11","G:\\Projects\\Malik Traders\\Admin Controll\\MT Admin Control App\\src\\Store\\User\\ActionTypes.js":"12","G:\\Projects\\Malik Traders\\Admin Controll\\MT Admin Control App\\src\\MalikTraders\\Components\\AdminLayout\\AdminLayout.jsx":"13","G:\\Projects\\Malik Traders\\Admin Controll\\MT Admin Control App\\src\\MalikTraders\\Components\\Pages\\UserManagement\\AddNewPayment\\AddNewPayment.jsx":"14","G:\\Projects\\Malik Traders\\Admin Controll\\MT Admin Control App\\src\\MalikTraders\\Components\\Pages\\AccountManagement\\DisplayPaymentDetails\\PaymentDetails.jsx":"15","G:\\Projects\\Malik Traders\\Admin Controll\\MT Admin Control App\\src\\MalikTraders\\Components\\Pages\\UserManagement\\UI\\TbInputControl.jsx":"16","G:\\Projects\\Malik Traders\\Admin Controll\\MT Admin Control App\\src\\MalikTraders\\Components\\Pages\\AccountManagement\\UI\\AccountCard.jsx":"17","G:\\Projects\\Malik Traders\\Admin Controll\\MT Admin Control App\\src\\MalikTraders\\Components\\Pages\\UserManagement\\UserList\\AllUserList.jsx":"18","G:\\Projects\\Malik Traders\\Admin Controll\\MT Admin Control App\\src\\MalikTraders\\Components\\NavBar\\NavBar.jsx":"19","G:\\Projects\\Malik Traders\\Admin Controll\\MT Admin Control App\\src\\MalikTraders\\Components\\Pages\\UserManagement\\AttachWithNewScheme\\AttachtoNewScheme.jsx":"20","G:\\Projects\\Malik Traders\\Admin Controll\\MT Admin Control App\\src\\MalikTraders\\Components\\Pages\\ProductManager\\ProductManager.jsx":"21","G:\\Projects\\Malik Traders\\Admin Controll\\MT Admin Control App\\src\\MalikTraders\\Components\\Pages\\ProductManager\\AddNewProduct\\AddNewProduct.jsx":"22","G:\\Projects\\Malik Traders\\Admin Controll\\MT Admin Control App\\src\\MalikTraders\\Components\\Pages\\ProductManager\\UI\\TbInput.jsx":"23","G:\\Projects\\Malik Traders\\Admin Controll\\MT Admin Control App\\src\\MalikTraders\\Components\\Pages\\Login\\Login.jsx":"24","G:\\Projects\\Malik Traders\\Admin Controll\\MT Admin Control App\\src\\MalikTraders\\Components\\Pages\\AccountManagement\\ModifyPayment\\ModifyPayment.jsx":"25","G:\\Projects\\Malik Traders\\Admin Controll\\MT Admin Control App\\src\\MalikTraders\\Components\\DashBoard\\MainDashBoard.jsx":"26","G:\\Projects\\Malik Traders\\Admin Controll\\MT Admin Control App\\src\\MalikTraders\\Components\\DashBoard\\DashBoardNavigator\\DashBoardNavigator.jsx":"27","G:\\Projects\\Malik Traders\\Admin Controll\\MT Admin Control App\\src\\MalikTraders\\Components\\DashBoard\\TodayRecovery\\TodayRecovery.jsx":"28","G:\\Projects\\Malik Traders\\Admin Controll\\MT Admin Control App\\src\\MalikTraders\\Components\\DashBoard\\MonthlyRecoveryReport\\MonthlyRecoveryReport.jsx":"29"},{"size":722,"mtime":1606398692449,"results":"30","hashOfConfig":"31"},{"size":362,"mtime":499162500000,"results":"32","hashOfConfig":"31"},{"size":1946,"mtime":1633273543073,"results":"33","hashOfConfig":"31"},{"size":614,"mtime":1606449119660,"results":"34","hashOfConfig":"31"},{"size":1472,"mtime":1612217178671,"results":"35","hashOfConfig":"31"},{"size":832,"mtime":1633688298612,"results":"36","hashOfConfig":"31"},{"size":13600,"mtime":1633266053844,"results":"37","hashOfConfig":"31"},{"size":622,"mtime":1632999437591,"results":"38","hashOfConfig":"31"},{"size":354,"mtime":1632601186771,"results":"39","hashOfConfig":"31"},{"size":3750,"mtime":1633296625225,"results":"40","hashOfConfig":"31"},{"size":3384,"mtime":1633700784727,"results":"41","hashOfConfig":"31"},{"size":86,"mtime":1606396609553,"results":"42","hashOfConfig":"31"},{"size":234,"mtime":1632593561890,"results":"43","hashOfConfig":"31"},{"size":1799,"mtime":1633039506822,"results":"44","hashOfConfig":"31"},{"size":1727,"mtime":1633297113880,"results":"45","hashOfConfig":"31"},{"size":325,"mtime":1632735638261,"results":"46","hashOfConfig":"31"},{"size":599,"mtime":1633345983265,"results":"47","hashOfConfig":"31"},{"size":5136,"mtime":1633100017499,"results":"48","hashOfConfig":"31"},{"size":2225,"mtime":1632945508014,"results":"49","hashOfConfig":"31"},{"size":6701,"mtime":1633688098899,"results":"50","hashOfConfig":"31"},{"size":2299,"mtime":1632999814647,"results":"51","hashOfConfig":"31"},{"size":2647,"mtime":1632904564554,"results":"52","hashOfConfig":"31"},{"size":299,"mtime":1632903021914,"results":"53","hashOfConfig":"31"},{"size":5068,"mtime":1633537667305,"results":"54","hashOfConfig":"31"},{"size":2168,"mtime":1633345746280,"results":"55","hashOfConfig":"31"},{"size":842,"mtime":1633677534743,"results":"56","hashOfConfig":"31"},{"size":624,"mtime":1633556683030,"results":"57","hashOfConfig":"31"},{"size":1486,"mtime":1633556083947,"results":"58","hashOfConfig":"31"},{"size":2064,"mtime":1633690092878,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"1649ol2",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"75","usedDeprecatedRules":"62"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"62"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":2,"source":"100","usedDeprecatedRules":"62"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":3,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"62"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"G:\\Projects\\Malik Traders\\Admin Controll\\MT Admin Control App\\src\\index.js",[],["124","125"],"G:\\Projects\\Malik Traders\\Admin Controll\\MT Admin Control App\\src\\reportWebVitals.js",[],"G:\\Projects\\Malik Traders\\Admin Controll\\MT Admin Control App\\src\\App.js",[],"G:\\Projects\\Malik Traders\\Admin Controll\\MT Admin Control App\\src\\Store\\Store.js",[],"G:\\Projects\\Malik Traders\\Admin Controll\\MT Admin Control App\\src\\Store\\User\\Reducer.js",[],"G:\\Projects\\Malik Traders\\Admin Controll\\MT Admin Control App\\src\\MalikTraders\\MalikTraderApp.jsx",[],"G:\\Projects\\Malik Traders\\Admin Controll\\MT Admin Control App\\src\\MalikTraders\\Components\\Pages\\UserManagement\\CreateUser\\CreateUser.jsx",["126","127"],"import axios from \"axios\";\r\nimport React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router\";\r\nimport AdminLayout from \"../../../AdminLayout/AdminLayout\";\r\nimport TbInputControl from \"../UI/TbInputControl\";\r\n\r\nclass CreateNewUser extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            \"id\": 0,\r\n            \"email\": \"\",\r\n            \"role\": \"\",\r\n            \"userName\": \"\",\r\n            \"password\": \"\",\r\n            \"userDetails\": {\r\n              \"id\": 0,\r\n              \"name\": \"\",\r\n              \"cnic\": \"\",\r\n              \"phoneNumber\": \"\",\r\n              \"address\": \"\",\r\n              \"gender\": \"\",\r\n              \"registration_Date\": \"\"\r\n            },\r\n            \"accounts\": [\r\n              {\r\n                \"id\": 0,\r\n                \"accNumber\": \"\",\r\n                \"bankName\": \"\",\r\n                \"amountPayable\": 0,\r\n                \"monthlyInstalment\": 0,\r\n                \"mtServiceId\": 0,\r\n                \"isAccClosed\": false,\r\n              }\r\n            ],\r\n            MTServices:[],\r\n            redirect: false\r\n        };\r\n        this.amountInputRef = React.createRef();\r\n        this.ReadyUser = this.ReadyUser.bind(this);\r\n    }\r\n    componentDidMount(){\r\n        if(this.state.MTServices.length === 0){\r\n            axios.get(window.$domain + 'api/MTServices').\r\n            then(MTService=>{\r\n                var forModificationState = this.state.MTServices;\r\n                forModificationState.push(MTService.data);\r\n                console.log(forModificationState)\r\n                this.setState({MTServices: forModificationState});\r\n            });\r\n            \r\n        }\r\n        console.log(this.state.MTServices)\r\n    }\r\n    ReadyUser=(event)=>{\r\n        if(event.target.name === 'GetFullName'){\r\n            this.setFullName(event.target)\r\n        }\r\n        else if(event.target.name === 'GetUserName'){\r\n            this.setUserName(event.target)\r\n        }\r\n        else if(event.target.name === 'GetGender'){\r\n            this.setGender(event.target)\r\n        }\r\n        else if(event.target.name === 'GetEmail'){\r\n            this.setEmail(event.target)\r\n        }\r\n        else if(event.target.name === 'GetPassword'){\r\n            this.setPassword(event.target)\r\n        }\r\n        else if(event.target.name === 'GetCNIC'){\r\n            this.setCNIC(event.target)\r\n        }\r\n        else if(event.target.name === 'GetAddress'){\r\n            this.setAddress(event.target)\r\n        }\r\n        else if(event.target.name === 'GetPhone'){\r\n            this.setPhoneNumber(event.target)\r\n        }\r\n        else if(event.target.name === 'GetAccountNumer'){\r\n            this.setAccountNumber(event.target)\r\n        }\r\n        else if(event.target.name === 'GetBankName'){\r\n            this.setBankName(event.target)\r\n        }\r\n        else if(event.target.name === 'GetMonthlyInstallment'){\r\n            this.setMonthlyInstallment(event.target)\r\n        }\r\n    }\r\n    setAccountNumber = (target)=>{\r\n        var newAccountState = [];\r\n        var accountData = {\r\n            \"id\": 0,\r\n            \"accNumber\": target.value,\r\n            \"bankName\": this.state.accounts[0].bankName,\r\n            \"amountPayable\": this.state.accounts[0].amountPayable,\r\n            \"monthlyInstalment\": this.state.accounts[0].monthlyInstalment,\r\n            \"mtServiceId\":this.state.accounts[0].mtServiceId,\r\n            \"isAccClosed\": false,\r\n        }\r\n        newAccountState.push(accountData);\r\n        this.setState({accounts: newAccountState})\r\n    }\r\n    setBankName = (target)=>{\r\n        var newAccountState = [];\r\n        var accountData = {\r\n            \"id\": 0,\r\n            \"accNumber\": this.state.accounts[0].accNumber ,\r\n            \"bankName\": target.value,\r\n            \"amountPayable\": this.state.accounts[0].amountPayable,\r\n            \"monthlyInstalment\": this.state.accounts[0].monthlyInstalment,\r\n            \"mtServiceId\":this.state.accounts[0].mtServiceId,\r\n            \"isAccClosed\": false,\r\n        }\r\n        newAccountState.push(accountData);\r\n        this.setState({accounts: newAccountState})\r\n    }\r\n    setMonthlyInstallment = (target)=>{\r\n        var newAccountState = [];\r\n        var accountData = {\r\n            \"id\": 0,\r\n            \"accNumber\": this.state.accounts[0].accNumber ,\r\n            \"bankName\": this.state.accounts[0].bankName ,\r\n            \"amountPayable\": this.state.accounts[0].amountPayable,\r\n            \"monthlyInstalment\": target.value,\r\n            \"mtServiceId\":this.state.accounts[0].mtServiceId,\r\n            \"isAccClosed\": false,\r\n        }\r\n        newAccountState.push(accountData);\r\n        this.setState({accounts: newAccountState})\r\n    }\r\n    setFullName =(target)=>{\r\n        this.setState({userDetails: {\r\n            \"id\": 0,\r\n            \"name\": target.value,\r\n            \"cnic\": this.state.userDetails.cnic,\r\n            \"phoneNumber\": this.state.userDetails.phoneNumber,\r\n            \"address\": this.state.userDetails.address,\r\n            \"gender\": this.state.userDetails.gender,\r\n            \"registration_Date\": this.state.userDetails.registration_Date\r\n          }});\r\n        console.log(this.state)\r\n    }\r\n    setGender =(target)=>{\r\n        this.setState({userDetails: {\r\n            \"id\": 0,\r\n            \"name\": this.state.userDetails.name,\r\n            \"cnic\": this.state.userDetails.cnic,\r\n            \"phoneNumber\": this.state.userDetails.phoneNumber,\r\n            \"address\": this.state.userDetails.address,\r\n            \"gender\": target.value,\r\n            \"registration_Date\": this.state.userDetails.registration_Date\r\n          }});\r\n    }\r\n    setUserName = (target)=>{\r\n        this.setState({userName: target.value});\r\n    }\r\n    setEmail = (target)=>{\r\n        this.setState({email: target.value});\r\n        console.log(this.state)\r\n    }\r\n    setPassword = (target)=>{\r\n        this.setState({password: target.value});\r\n        console.log(this.state)\r\n    }\r\n    setCNIC =(target)=>{\r\n        this.setState({userDetails: {\r\n            \"id\": 0,\r\n            \"name\": this.state.userDetails.name,\r\n            \"cnic\": target.value,\r\n            \"phoneNumber\": this.state.userDetails.phoneNumber,\r\n            \"address\": this.state.userDetails.address,\r\n            \"gender\": this.state.userDetails.gender,\r\n            \"registration_Date\": this.state.userDetails.registration_Date\r\n          }});\r\n        console.log(this.state)\r\n    }\r\n    setAddress =(target)=>{\r\n        this.setState({userDetails: {\r\n            \"id\": 0,\r\n            \"name\": this.state.userDetails.name,\r\n            \"cnic\": this.state.userDetails.cnic,\r\n            \"phoneNumber\": this.state.userDetails.phoneNumber,\r\n            \"address\": target.value,\r\n            \"gender\": this.state.userDetails.gender,\r\n            \"registration_Date\": this.state.userDetails.registration_Date\r\n          }});\r\n        console.log(this.state)\r\n    }\r\n    setPhoneNumber =(target)=>{\r\n        this.setState({userDetails: {\r\n            \"id\": 0,\r\n            \"name\": this.state.userDetails.name,\r\n            \"cnic\": this.state.userDetails.cnic,\r\n            \"phoneNumber\": target.value,\r\n            \"address\": this.state.userDetails.address,\r\n            \"gender\": this.state.userDetails.gender,\r\n            \"registration_Date\": this.state.userDetails.registration_Date\r\n          }});\r\n        console.log(this.state)\r\n    }\r\n    setUserType= (event)=>\r\n    {\r\n        this.setState({role: event.target.value});\r\n    }\r\n    MTServiceSelection = (event)=>{\r\n        alert(event.target.value)\r\n        this.state.MTServices[0].map(\r\n            MTservice=>{\r\n                if(event.target.value === MTservice.name){\r\n                    this.setState({accounts: \r\n                        [{\r\n                            \"id\": 0,\r\n                            \"accNumber\": this.state.accounts[0].accNumber,\r\n                            \"bankName\": this.state.accounts[0].bankName,\r\n                            \"amountPayable\": MTservice.amount,\r\n                            \"monthlyInstalment\": this.state.accounts[0].monthlyInstalment,\r\n                            \"mtServiceId\": MTservice.id,\r\n                            \"isAccClosed\": false,\r\n                        }]\r\n                    });\r\n                    this.amountInputRef.current.value = MTservice.amount;\r\n                }\r\n            }\r\n        )\r\n    }\r\n    CreatNewUser = ()=>{\r\n        axios.post(\r\n                window.$domain + 'api/Users',\r\n                {\r\n                    \"id\": 0,\r\n                    \"email\": this.state.email,\r\n                    \"userName\": this.state.userName,\r\n                    \"password\": this.state.password,\r\n                    \"role\": this.state.role,\r\n                    \"userDetails\": {\r\n                        \"id\": 0,\r\n                        \"name\": this.state.userDetails.name,\r\n                        \"cnic\": this.state.userDetails.cnic,\r\n                        \"phoneNumber\": this.state.userDetails.phoneNumber,\r\n                        \"address\": this.state.userDetails.address,\r\n                        \"gender\": this.state.userDetails.gender,\r\n                    },\r\n                    \"accounts\": [\r\n                        {\r\n                            \"id\": 0,\r\n                            \"accNumber\": this.state.accounts[0].accNumber,\r\n                            \"bankName\": this.state.accounts[0].bankName,\r\n                            \"amountPayable\": this.state.accounts[0].amountPayable,\r\n                            \"monthlyInstalment\": this.state.accounts[0].monthlyInstalment,\r\n                            \"mtServiceId\": this.state.accounts[0].mtServiceId,\r\n                            \"isAccClosed\": false,\r\n                        }\r\n                    ] \r\n                }    \r\n            )\r\n        .then(response => this.setState({redirect: true}))\r\n        .catch(\r\n            err=>\r\n            {\r\n                alert(err.response.data);\r\n            }\r\n            );\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <AdminLayout>\r\n            <div className=\"jumbotron\">\r\n                {this.state.redirect?<Redirect to='/manageuser'/>:''}\r\n                <h3>Create New User</h3>\r\n                <hr/>\r\n                <h5>Please Select User Type</h5>\r\n                <select class=\"form-select form-select-lg\" onChange={this.setUserType} aria-label=\".form-select-sm example\">\r\n                <option selected>user</option>\r\n                <option>worker</option>\r\n                </select>\r\n                <hr/>\r\n                <h5>User Information</h5>\r\n                <hr/>\r\n                    <TbInputControl DataInputHandler={this.ReadyUser} Name={'Full Name'} inutType={'text'} ctrlName={'GetFullName'} />\r\n                    <TbInputControl DataInputHandler={this.ReadyUser} Name={'User Name'} inutType={'text'} ctrlName={'GetUserName'} />\r\n                    <TbInputControl DataInputHandler={this.ReadyUser} Name={'E-mail'} inutType={'email'} ctrlName={'GetEmail'} />\r\n                    <TbInputControl DataInputHandler={this.ReadyUser} Name={'Password'} inutType={'password'} ctrlName={'GetPassword'} />\r\n                    <TbInputControl DataInputHandler={this.ReadyUser} Name={'Phone Number'} inutType={'text'} ctrlName={'GetPhone'} />\r\n                    <TbInputControl DataInputHandler={this.ReadyUser} Name={'CNIC'} inutType={'text'} ctrlName={'GetCNIC'} />\r\n                    <TbInputControl DataInputHandler={this.ReadyUser} Name={'Complete Address'} inutType={'text'} ctrlName={'GetAddress'} />\r\n                    <TbInputControl DataInputHandler={this.ReadyUser} Name={'Gender'} inutType={'text'} ctrlName={'GetGender'} />\r\n                <div className='container-fluid'>\r\n                    <h5>Account Information</h5>\r\n                    <hr/> \r\n                    <h6>Please Select Scheme/Product</h6>\r\n                    <hr/>\r\n                        <select class=\"form-select form-select-lg\" onChange={this.MTServiceSelection} aria-label=\".form-select-sm example\">\r\n                        <option selected>Please Select Scheme</option>\r\n                            {\r\n                                this.state.MTServices.length > 0?\r\n                                this.state.MTServices[0].map(MTService=>{\r\n                                    return <option key={MTService.id}>{MTService.name}</option>\r\n                                }):\r\n                                <option selected>Wait We are trying to Load Your Providing Services</option>\r\n                            }\r\n                        </select>\r\n                </div>\r\n                <hr/>\r\n                    <TbInputControl DataInputHandler={this.ReadyUser} Name={'Account Numer'} inutType={'text'} ctrlName={'GetAccountNumer'} />\r\n                    <TbInputControl DataInputHandler={this.ReadyUser} Name={'Bank Name'} inutType={'text'} ctrlName={'GetBankName'} />\r\n                    <div class=\"form-group \">\r\n                        <label for='GetAmountPayable'>Total Amount Payable:</label>\r\n                        <input ref={this.amountInputRef} type='text' class=\"form-control\" onChange={this.ReadyUser} name='GetAmountPayable'/>\r\n                    </div>\r\n                    <TbInputControl DataInputHandler={this.ReadyUser} Name={'Monthly Installment'} inutType={'text'} ctrlName={'GetMonthlyInstallment'} />\r\n                    <button className=\"btn btn-success\" onClick={this.CreatNewUser}>Create User</button>\r\n                </div>\r\n            </AdminLayout>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CreateNewUser;","G:\\Projects\\Malik Traders\\Admin Controll\\MT Admin Control App\\src\\MalikTraders\\Components\\Pages\\UserManagement\\UserManagement.jsx",[],"G:\\Projects\\Malik Traders\\Admin Controll\\MT Admin Control App\\src\\MalikTraders\\Components\\Pages\\MTHome.jsx",[],"G:\\Projects\\Malik Traders\\Admin Controll\\MT Admin Control App\\src\\MalikTraders\\Components\\Pages\\AccountManagement\\ShowAccountDetails.jsx",["128"],"import axios from \"axios\";\r\nimport { Component } from \"react\";\r\nimport { Redirect } from \"react-router\";\r\nimport AdminLayout from \"../../AdminLayout/AdminLayout\";\r\nimport PaymentDetails from \"./DisplayPaymentDetails/PaymentDetails\";\r\nimport AccountCard from \"./UI/AccountCard\";\r\n\r\nclass AccountDetails extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            Accounts:null,\r\n            Schemes: null,\r\n            DisplayAcc: null,\r\n            AccId: 0,\r\n            gotoHistoryPaymentRedirect: null\r\n        }\r\n    }\r\n    gotoHistoryPaymentRedirectHandler=(AccId)=>{\r\n        this.setState({gotoHistoryPaymentRedirect: {\r\n            AccId: AccId,\r\n            redir: true \r\n        }})\r\n    }\r\n    componentDidMount(){\r\n        if(this.state.Accounts === null){\r\n            axios.get(window.$domain + 'api/Accounts/GetAccountbyUserId/' + this.props.match.params.id)\r\n            .then(\r\n                resp=>{\r\n                    this.setState({Accounts: resp.data});\r\n                }\r\n            )\r\n            axios.get(window.$domain + 'api/MTServices')\r\n            .then(\r\n                resp=>{\r\n                    this.setState({Schemes: resp.data});\r\n                }\r\n            )\r\n            \r\n        }\r\n    }\r\n\r\n    paymentDisplayHandler = (Accid)=>{\r\n        this.state.Accounts.map(\r\n            Account => {\r\n                if(Account.id === Accid ){\r\n                    this.setState({DisplayAcc: Account.accPaymentDetails});\r\n                    this.setState({AccId: Accid})\r\n                }\r\n            }\r\n        )\r\n    }\r\n    render(){\r\n        console.log(this.props.match.params.id)\r\n        return(\r\n            <AdminLayout>\r\n                {this.state.gotoHistoryPaymentRedirect=== null? '':<Redirect to={'/Accounts/' + this.state.gotoHistoryPaymentRedirect.AccId + '/Payment'} /> }\r\n                <div className='jumbotron mt-3'>\r\n                    <div className='row'>\r\n                        <div className='col-md-3'>\r\n                            <h5 style={{textAlign: 'center'}}>Participated Schemes</h5>\r\n                            {\r\n                                this.state.Schemes !== null && this.state.Accounts !== null ?this.state.Accounts.map(\r\n                                    Account => this.state.Schemes.map(\r\n                                        Scheme=> Scheme.id === Account.mtServiceId ? <AccountCard \r\n                                                                                        schemeName={Scheme.name} \r\n                                                                                        desc={Scheme.details} \r\n                                                                                        AccId={Account.id} \r\n                                                                                        paymentDisplayHandler ={this.paymentDisplayHandler}\r\n                                                                                        gotoPaymentHistory= {this.gotoHistoryPaymentRedirectHandler}/>: ''\r\n                                    ) \r\n                                ): ''\r\n                            }\r\n                        </div>\r\n                        <div className='col-md-9'>\r\n                            <h5 style={{textAlign: 'center'}}>Account Payment Details</h5>\r\n                            {\r\n                                this.state.DisplayAcc? <PaymentDetails peymentHistory={this.state.DisplayAcc} AccId = {this.state.AccId}/>:'Please select a Scheme'\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </AdminLayout>\r\n        );\r\n    }\r\n}\r\nexport default AccountDetails;\r\n\r\n","G:\\Projects\\Malik Traders\\Admin Controll\\MT Admin Control App\\src\\MalikTraders\\Components\\Pages\\AccountManagement\\PaymentHistory\\PaymentHistory.jsx",["129","130"],"G:\\Projects\\Malik Traders\\Admin Controll\\MT Admin Control App\\src\\Store\\User\\ActionTypes.js",[],"G:\\Projects\\Malik Traders\\Admin Controll\\MT Admin Control App\\src\\MalikTraders\\Components\\AdminLayout\\AdminLayout.jsx",[],"G:\\Projects\\Malik Traders\\Admin Controll\\MT Admin Control App\\src\\MalikTraders\\Components\\Pages\\UserManagement\\AddNewPayment\\AddNewPayment.jsx",["131"],"import axios from \"axios\";\r\nimport { Component } from \"react\";\r\nimport { Redirect } from \"react-router\";\r\nimport AdminLayout from \"../../../AdminLayout/AdminLayout\";\r\nimport TbInputControl from \"../UI/TbInputControl\";\r\nimport Cookie from 'universal-cookie'\r\nclass AddNewPayment extends Component{\r\n    state = {\r\n        amount: 0,\r\n        redirect: false\r\n    }\r\n    ReadyUser = event =>{\r\n        if(event.target.value > 0)\r\n            this.setState({amount: event.target.value})\r\n    }\r\n    postPaymnet= ()=>{\r\n        var cookies = new Cookie();\r\n        axios.post(\r\n            window.$domain + 'api/AccDetails',\r\n            {\r\n                \"id\": 0,\r\n                \"payedAmount\": this.state.amount,\r\n                \"payingDate\": \"2021-09-27T22:15:41.611Z\",\r\n                \"accId\": this.props.Accid,\r\n                \"postedByUserId\": cookies.get('logedInUser').id\r\n            }\r\n        ).then(\r\n            resp=>{\r\n                console.log(resp)\r\n                this.setState({redirect: true});\r\n            }\r\n        )\r\n    }\r\n    render(){\r\n        return(\r\n                <div className=\"jumbotron mt-3\">\r\n                    {\r\n                        this.state.redirect ? <Redirect to={'/Accounts/'+this.props.Accid+'/Payment'} />: ''\r\n                    }\r\n                    <h3>Add Payment</h3>\r\n                    <hr/>\r\n                    <h5>Please fill this form carefully, This transection is ir-revercible</h5>\r\n                    <hr/>\r\n                    <TbInputControl DataInputHandler={this.ReadyUser} Name={'Payment'} inutType={'number'} ctrlName={'Add Payment'} />\r\n                    <button onClick={this.postPaymnet} className='btn btn-success'>Post Amount</button>\r\n                </div>\r\n        )\r\n    }\r\n}\r\nexport default AddNewPayment;","G:\\Projects\\Malik Traders\\Admin Controll\\MT Admin Control App\\src\\MalikTraders\\Components\\Pages\\AccountManagement\\DisplayPaymentDetails\\PaymentDetails.jsx",[],"G:\\Projects\\Malik Traders\\Admin Controll\\MT Admin Control App\\src\\MalikTraders\\Components\\Pages\\UserManagement\\UI\\TbInputControl.jsx",[],"G:\\Projects\\Malik Traders\\Admin Controll\\MT Admin Control App\\src\\MalikTraders\\Components\\Pages\\AccountManagement\\UI\\AccountCard.jsx",[],"G:\\Projects\\Malik Traders\\Admin Controll\\MT Admin Control App\\src\\MalikTraders\\Components\\Pages\\UserManagement\\UserList\\AllUserList.jsx",["132","133"],"import { Component } from \"react\";\r\nimport Axios from \"axios\"\r\nimport {Link} from 'react-router-dom'\r\nclass UserList extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          userList: []\r\n        };\r\n    this.LoadUserList = this.LoadUserList.bind(this);\r\n    }\r\n\r\n     LoadUserList=(event)=>{\r\n        if(event === undefined)\r\n        Axios.get(window.$domain + 'api/Users').then(\r\n            resp=>{\r\n                this.setState({userList: resp.data});\r\n                console.log(resp.data)\r\n            }\r\n        ).catch(\r\n            err=>{\r\n                alert('Page:manageuser =>'+err)\r\n                console.log('Page:manageuser =>'+err)\r\n            }\r\n        )\r\n        else if(event.target.name === 'SearchByCnic' && event.target.value !== '' ){\r\n            Axios.get(window.$domain + 'api/Users/SearchUserbyCNIC/' + event.target.value).\r\n            then(\r\n                resp=>{\r\n                    this.setState({userList: resp.data});\r\n                }\r\n            ).catch(\r\n                err=>{\r\n                    alert('Page:manageuser =>'+err)\r\n                    console.log('Page:manageuser =>'+err)\r\n                }\r\n            )\r\n        }\r\n        else if(event.target.name === 'SearchByName' && event.target.value !== ''){\r\n            Axios.get(window.$domain + 'api/Users/SearchUserbyName/' + event.target.value).\r\n            then(\r\n                resp=>{\r\n                    this.setState({userList: resp.data});\r\n                }\r\n            ).catch(\r\n                err=>{\r\n                    alert('Page:manageuser =>'+err)\r\n                    console.log('Page:manageuser =>'+err)\r\n                }\r\n            )\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        if(this.state.userList.length === 0)\r\n        this.LoadUserList();\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"jumbotron container-fluid overflow-auto\">\r\n               <div className='row ml-2'>\r\n                    <div class=\"form-group ml-1\">\r\n                        <label>Search by CNIC Number:</label>\r\n                        <input  type='text' class=\"form-control\" onChange={this.LoadUserList} name='SearchByCnic'/>\r\n                    </div>\r\n                    <div class=\"form-group ml-1\">\r\n                        <label>Search by Name:</label>\r\n                        <input  type='text' class=\"form-control\" onChange={this.LoadUserList} name='SearchByName'/>\r\n                    </div>\r\n               </div>\r\n                <h3>User List</h3>\r\n                <div className='row overflow-auto'>\r\n                <table className=\"table table-bordered \">\r\n                    <thead>\r\n                        <tr >\r\n                            <th>System Id</th>\r\n                            <th>Role</th>\r\n                            <th>Name</th>\r\n                            <th>Accounts Details</th>\r\n                            <th>Add to new Scheme</th>\r\n                            <th>Gender</th>\r\n                            <th>User Name</th>\r\n                            <th>Email</th>\r\n                            <th>Phone Number</th>\r\n                            <th>CNIC</th>\r\n                            <th >Last Login (DayName/Month/Day/Year) </th>\r\n                            <th>Registration Date (DayName/Month/Day/Year)</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            this.state.userList.length > 0 ?\r\n                            this.state.userList.map(user=>{\r\n                                \r\n                                return <tr key={user.id}>\r\n                                    <td>{user.id}</td>\r\n                                    <td>{user.role}</td>\r\n                                    <td>{user.name}</td>\r\n                                    <td>\r\n                                        <Link to={'/ShowAccountDetails/'+ user.id} >Show</Link>\r\n                                    </td>\r\n                                    <td>\r\n                                        <Link to={'/User/'+ user.id + '/AddtoNewScheme'} >Add</Link>\r\n                                    </td>\r\n                                    <td>{user.gender}</td>\r\n                                    <td>{user.userName}</td>\r\n                                    <td>{user.email}</td>\r\n                                    <td>{user.phoneNumber}</td>\r\n                                    <td>{user.cnic}</td>\r\n                                    <td>{new Date(user.lastLogin).toDateString() + ' ' \r\n                                     + new Date(user.lastLogin).toLocaleTimeString() }</td>\r\n                                    <td>{new Date(user.registration_Date).toDateString()}</td>\r\n                                </tr>\r\n                            }): <h5>Please Wait! we are Loading Your Data from Server</h5>\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UserList;","G:\\Projects\\Malik Traders\\Admin Controll\\MT Admin Control App\\src\\MalikTraders\\Components\\NavBar\\NavBar.jsx",[],"G:\\Projects\\Malik Traders\\Admin Controll\\MT Admin Control App\\src\\MalikTraders\\Components\\Pages\\UserManagement\\AttachWithNewScheme\\AttachtoNewScheme.jsx",["134","135","136","137","138"],"G:\\Projects\\Malik Traders\\Admin Controll\\MT Admin Control App\\src\\MalikTraders\\Components\\Pages\\ProductManager\\ProductManager.jsx",[],"G:\\Projects\\Malik Traders\\Admin Controll\\MT Admin Control App\\src\\MalikTraders\\Components\\Pages\\ProductManager\\AddNewProduct\\AddNewProduct.jsx",[],"G:\\Projects\\Malik Traders\\Admin Controll\\MT Admin Control App\\src\\MalikTraders\\Components\\Pages\\ProductManager\\UI\\TbInput.jsx",[],"G:\\Projects\\Malik Traders\\Admin Controll\\MT Admin Control App\\src\\MalikTraders\\Components\\Pages\\Login\\Login.jsx",["139"],"import React from 'react';\r\nimport { Component } from 'react';\r\nimport Cookie from 'universal-cookie/es6';\r\nimport Axios from \"axios\"\r\nimport { Link } from 'react-router-dom';\r\nimport { Redirect } from \"react-router\";\r\nimport { Spinner } from 'react-bootstrap';\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            user: '',\r\n            password: '',\r\n            login: false,\r\n            displayAnimator: false\r\n        };\r\n    this.loginUser = this.loginUser.bind(this);\r\n    }\r\n    \r\n    loginUser=()=>{\r\n        this.setState({displayAnimator: true})\r\n        Axios.post(window.$domain + 'api/Users/LoginUser?UserName='+ this.state.user + '&Password='+ this.state.password )\r\n        .then(resp=>{\r\n            if(resp.data.role !== 'user' ) \r\n            {\r\n                alert('Your are not authorize for operating Admin Control');\r\n                return ;\r\n            }\r\n            Axios.post(window.$domain + 'api/Users/GetUserDatailsId/'+ resp.data.id )\r\n                .then(\r\n                    resp=>\r\n                    {\r\n                        \r\n                        Axios.post(window.$domain + 'api/UserDetails/UpdateLastLogin/'+ resp.data )\r\n                        .then(\r\n                            resp=>\r\n                            {\r\n                                alert('You are logged in successfully')\r\n                            });\r\n                    });\r\n            var cookies = new Cookie();\r\n            cookies.set('logedInUser', {\r\n                userName: resp.data.userName,\r\n                email: resp.data.email, \r\n                role: resp.data.role, \r\n                id: resp.data.id\r\n                }, \r\n                {\r\n                path: '/',\r\n                maxAge: 3600\r\n              });\r\n              this.setState({login: true});\r\n              this.setState({displayAnimator: false})\r\n        })\r\n        .catch(\r\n            err=>{\r\n                if(err)\r\n                alert(err.response.data);\r\n                this.setState({displayAnimator: false});\r\n            });\r\n    }\r\n    componentDidMount(){\r\n        var cookies = new Cookie();\r\n        if(cookies.get('logedInUser') !== undefined && this.state.login === false){\r\n            this.setState({login: true});\r\n        }\r\n    }\r\n    render(){\r\n        \r\n        return (\r\n            <div className=\"container mt-4\" style={{width: \"80%\"}}>\r\n                {this.state.login? <Redirect to='/' />:''}\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-3 col-md-2\"></div>\r\n                    <div className=\"col-lg-6 col-md-8 login-box\">\r\n                        \r\n                        <div className=\"col-lg-12 login-title \">\r\n                            \r\n                            <p style={{textAlign: 'center'}}>\r\n                                <i className=\"fa fa-key\" aria-hidden=\"true\"></i> \r\n                                -Login\r\n                            </p>\r\n                        </div>\r\n                        <div className=\"col-lg-12 login-form\">\r\n                            <div className=\"col-lg-12 login-form\">\r\n                                <form onSubmit>\r\n                                    <div className=\"form-group\">\r\n                                        <label className=\"form-control-label\">UserName</label>\r\n                                        <input onChange={event=> this.setState({user: event.target.value})} type=\"text\" className=\"form-control\" />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label className=\"form-control-label\">Password</label>\r\n                                        <input onChange={event=> this.setState({password: event.target.value})} type=\"password\" className=\"form-control\" ></input>\r\n                                    </div>\r\n                                    <div className=\"col-lg-12 loginbttm\">\r\n                                        {\r\n                                            this.state.displayAnimator ? <Spinner animation=\"grow\" />\r\n                                            : <div className=\"col-lg-6 login-btn login-button\">\r\n                                                <button onClick={this.loginUser} className=\"btn btn-outline-primary btn-light\" style={{alignContent: \"center\"}}>\r\n                                                    Login\r\n                                                </button>\r\n                                            </div>\r\n                                        }\r\n                                        \r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-lg-3 col-md-2\">\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nexport default Login;","G:\\Projects\\Malik Traders\\Admin Controll\\MT Admin Control App\\src\\MalikTraders\\Components\\Pages\\AccountManagement\\ModifyPayment\\ModifyPayment.jsx",[],"G:\\Projects\\Malik Traders\\Admin Controll\\MT Admin Control App\\src\\MalikTraders\\Components\\DashBoard\\MainDashBoard.jsx",["140"],"G:\\Projects\\Malik Traders\\Admin Controll\\MT Admin Control App\\src\\MalikTraders\\Components\\DashBoard\\DashBoardNavigator\\DashBoardNavigator.jsx",[],"G:\\Projects\\Malik Traders\\Admin Controll\\MT Admin Control App\\src\\MalikTraders\\Components\\DashBoard\\TodayRecovery\\TodayRecovery.jsx",[],"G:\\Projects\\Malik Traders\\Admin Controll\\MT Admin Control App\\src\\MalikTraders\\Components\\DashBoard\\MonthlyRecoveryReport\\MonthlyRecoveryReport.jsx",[],{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","replacedBy":"144"},{"ruleId":"145","severity":1,"message":"146","line":44,"column":57,"nodeType":"147","messageId":"148","endLine":44,"endColumn":58,"fix":"149"},{"ruleId":"150","severity":1,"message":"151","line":209,"column":22,"nodeType":"152","messageId":"153","endLine":209,"endColumn":24},{"ruleId":"150","severity":1,"message":"151","line":45,"column":21,"nodeType":"152","messageId":"153","endLine":45,"endColumn":23},{"ruleId":"154","severity":1,"message":"155","line":4,"column":8,"nodeType":"156","messageId":"157","endLine":4,"endColumn":14},{"ruleId":"150","severity":1,"message":"151","line":22,"column":37,"nodeType":"152","messageId":"153","endLine":22,"endColumn":39},{"ruleId":"154","severity":1,"message":"158","line":4,"column":8,"nodeType":"156","messageId":"157","endLine":4,"endColumn":19},{"ruleId":"145","severity":1,"message":"146","line":27,"column":91,"nodeType":"147","messageId":"148","endLine":27,"endColumn":92,"fix":"159"},{"ruleId":"145","severity":1,"message":"146","line":40,"column":91,"nodeType":"147","messageId":"148","endLine":40,"endColumn":92,"fix":"160"},{"ruleId":"161","severity":1,"message":"162","line":67,"column":9,"nodeType":"147","messageId":"163","endLine":88,"endColumn":17,"fix":"164"},{"ruleId":"150","severity":1,"message":"151","line":71,"column":34,"nodeType":"152","messageId":"153","endLine":71,"endColumn":36},{"ruleId":"161","severity":1,"message":"162","line":80,"column":21,"nodeType":"147","messageId":"163","endLine":83,"endColumn":34,"fix":"165"},{"ruleId":"150","severity":1,"message":"151","line":96,"column":26,"nodeType":"152","messageId":"153","endLine":96,"endColumn":28},{"ruleId":"145","severity":1,"message":"146","line":128,"column":57,"nodeType":"147","messageId":"148","endLine":128,"endColumn":58,"fix":"166"},{"ruleId":"154","severity":1,"message":"167","line":5,"column":10,"nodeType":"156","messageId":"157","endLine":5,"endColumn":14},{"ruleId":"154","severity":1,"message":"168","line":3,"column":8,"nodeType":"156","messageId":"157","endLine":3,"endColumn":21},"no-native-reassign",["169"],"no-negated-in-lhs",["170"],"dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"171","text":"172"},"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-unused-vars","'Cookie' is defined but never used.","Identifier","unusedVar","'AdminLayout' is defined but never used.",{"range":"173","text":"172"},{"range":"174","text":"172"},"no-whitespace-before-property","Unexpected whitespace before property catch.","unexpectedWhitespace",{"range":"175","text":"176"},{"range":"177","text":"176"},{"range":"178","text":"172"},"'Link' is defined but never used.","'TodayRecovery' is defined but never used.","no-global-assign","no-unsafe-negation",[1360,1375],"\r\n            .",[903,918],[1406,1421],[3035,3037],".",[2893,2895],[4689,4704]]