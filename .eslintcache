[{"G:\\Projects\\Malik Traders\\Admin Controll\\MT Admin Control App\\src\\index.js":"1","G:\\Projects\\Malik Traders\\Admin Controll\\MT Admin Control App\\src\\reportWebVitals.js":"2","G:\\Projects\\Malik Traders\\Admin Controll\\MT Admin Control App\\src\\App.js":"3","G:\\Projects\\Malik Traders\\Admin Controll\\MT Admin Control App\\src\\Store\\Store.js":"4","G:\\Projects\\Malik Traders\\Admin Controll\\MT Admin Control App\\src\\Store\\User\\Reducer.js":"5","G:\\Projects\\Malik Traders\\Admin Controll\\MT Admin Control App\\src\\MalikTraders\\MalikTraderApp.jsx":"6","G:\\Projects\\Malik Traders\\Admin Controll\\MT Admin Control App\\src\\MalikTraders\\Components\\Pages\\UserManagement\\CreateUser\\CreateUser.jsx":"7","G:\\Projects\\Malik Traders\\Admin Controll\\MT Admin Control App\\src\\MalikTraders\\Components\\Pages\\UserManagement\\UserManagement.jsx":"8","G:\\Projects\\Malik Traders\\Admin Controll\\MT Admin Control App\\src\\MalikTraders\\Components\\Pages\\MTHome.jsx":"9","G:\\Projects\\Malik Traders\\Admin Controll\\MT Admin Control App\\src\\MalikTraders\\Components\\Pages\\AccountManagement\\ShowAccountDetails.jsx":"10","G:\\Projects\\Malik Traders\\Admin Controll\\MT Admin Control App\\src\\MalikTraders\\Components\\Pages\\AccountManagement\\PaymentHistory\\PaymentHistory.jsx":"11","G:\\Projects\\Malik Traders\\Admin Controll\\MT Admin Control App\\src\\Store\\User\\ActionTypes.js":"12","G:\\Projects\\Malik Traders\\Admin Controll\\MT Admin Control App\\src\\MalikTraders\\Components\\AdminLayout\\AdminLayout.jsx":"13","G:\\Projects\\Malik Traders\\Admin Controll\\MT Admin Control App\\src\\MalikTraders\\Components\\Pages\\UserManagement\\AddNewPayment\\AddNewPayment.jsx":"14","G:\\Projects\\Malik Traders\\Admin Controll\\MT Admin Control App\\src\\MalikTraders\\Components\\Pages\\AccountManagement\\DisplayPaymentDetails\\PaymentDetails.jsx":"15","G:\\Projects\\Malik Traders\\Admin Controll\\MT Admin Control App\\src\\MalikTraders\\Components\\Pages\\UserManagement\\UI\\TbInputControl.jsx":"16","G:\\Projects\\Malik Traders\\Admin Controll\\MT Admin Control App\\src\\MalikTraders\\Components\\Pages\\AccountManagement\\UI\\AccountCard.jsx":"17","G:\\Projects\\Malik Traders\\Admin Controll\\MT Admin Control App\\src\\MalikTraders\\Components\\Pages\\UserManagement\\UserList\\AllUserList.jsx":"18","G:\\Projects\\Malik Traders\\Admin Controll\\MT Admin Control App\\src\\MalikTraders\\Components\\NavBar\\NavBar.jsx":"19","G:\\Projects\\Malik Traders\\Admin Controll\\MT Admin Control App\\src\\MalikTraders\\Components\\Pages\\UserManagement\\AttachWithNewScheme\\AttachtoNewScheme.jsx":"20","G:\\Projects\\Malik Traders\\Admin Controll\\MT Admin Control App\\src\\MalikTraders\\Components\\Pages\\ProductManager\\ProductManager.jsx":"21","G:\\Projects\\Malik Traders\\Admin Controll\\MT Admin Control App\\src\\MalikTraders\\Components\\Pages\\ProductManager\\AddNewProduct\\AddNewProduct.jsx":"22","G:\\Projects\\Malik Traders\\Admin Controll\\MT Admin Control App\\src\\MalikTraders\\Components\\Pages\\ProductManager\\UI\\TbInput.jsx":"23","G:\\Projects\\Malik Traders\\Admin Controll\\MT Admin Control App\\src\\MalikTraders\\Components\\Pages\\Login\\Login.jsx":"24","G:\\Projects\\Malik Traders\\Admin Controll\\MT Admin Control App\\src\\MalikTraders\\Components\\Pages\\AccountManagement\\ModifyPayment\\ModifyPayment.jsx":"25","G:\\Projects\\Malik Traders\\Admin Controll\\MT Admin Control App\\src\\MalikTraders\\Components\\DashBoard\\MainDashBoard.jsx":"26","G:\\Projects\\Malik Traders\\Admin Controll\\MT Admin Control App\\src\\MalikTraders\\Components\\DashBoard\\DashBoardNavigator\\DashBoardNavigator.jsx":"27","G:\\Projects\\Malik Traders\\Admin Controll\\MT Admin Control App\\src\\MalikTraders\\Components\\DashBoard\\TodayRecovery\\TodayRecovery.jsx":"28","G:\\Projects\\Malik Traders\\Admin Controll\\MT Admin Control App\\src\\MalikTraders\\Components\\DashBoard\\MonthlyRecoveryReport\\MonthlyRecoveryReport.jsx":"29"},{"size":722,"mtime":1606398692449,"results":"30","hashOfConfig":"31"},{"size":362,"mtime":499162500000,"results":"32","hashOfConfig":"31"},{"size":1946,"mtime":1633273543073,"results":"33","hashOfConfig":"31"},{"size":614,"mtime":1606449119660,"results":"34","hashOfConfig":"31"},{"size":1472,"mtime":1612217178671,"results":"35","hashOfConfig":"31"},{"size":832,"mtime":1633688298612,"results":"36","hashOfConfig":"31"},{"size":13606,"mtime":1633734595522,"results":"37","hashOfConfig":"31"},{"size":622,"mtime":1632999437591,"results":"38","hashOfConfig":"31"},{"size":354,"mtime":1632601186771,"results":"39","hashOfConfig":"31"},{"size":4876,"mtime":1633815834994,"results":"40","hashOfConfig":"31"},{"size":3527,"mtime":1633732004511,"results":"41","hashOfConfig":"31"},{"size":86,"mtime":1606396609553,"results":"42","hashOfConfig":"31"},{"size":234,"mtime":1632593561890,"results":"43","hashOfConfig":"31"},{"size":1799,"mtime":1633039506822,"results":"44","hashOfConfig":"31"},{"size":1727,"mtime":1633297113880,"results":"45","hashOfConfig":"31"},{"size":325,"mtime":1632735638261,"results":"46","hashOfConfig":"31"},{"size":1874,"mtime":1633817419508,"results":"47","hashOfConfig":"31"},{"size":5864,"mtime":1633801839229,"results":"48","hashOfConfig":"31"},{"size":2126,"mtime":1633818458493,"results":"49","hashOfConfig":"31"},{"size":6701,"mtime":1633688098899,"results":"50","hashOfConfig":"31"},{"size":2299,"mtime":1632999814647,"results":"51","hashOfConfig":"31"},{"size":2647,"mtime":1632904564554,"results":"52","hashOfConfig":"31"},{"size":299,"mtime":1632903021914,"results":"53","hashOfConfig":"31"},{"size":5030,"mtime":1633734133107,"results":"54","hashOfConfig":"31"},{"size":2168,"mtime":1633345746280,"results":"55","hashOfConfig":"31"},{"size":1013,"mtime":1633703657930,"results":"56","hashOfConfig":"31"},{"size":849,"mtime":1633703945755,"results":"57","hashOfConfig":"31"},{"size":1486,"mtime":1633556083947,"results":"58","hashOfConfig":"31"},{"size":2088,"mtime":1633704068803,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"1649ol2",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"75","usedDeprecatedRules":"62"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"62"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"62"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":2,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":3,"source":"104","usedDeprecatedRules":"62"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},"G:\\Projects\\Malik Traders\\Admin Controll\\MT Admin Control App\\src\\index.js",[],["124","125"],"G:\\Projects\\Malik Traders\\Admin Controll\\MT Admin Control App\\src\\reportWebVitals.js",[],"G:\\Projects\\Malik Traders\\Admin Controll\\MT Admin Control App\\src\\App.js",[],"G:\\Projects\\Malik Traders\\Admin Controll\\MT Admin Control App\\src\\Store\\Store.js",[],"G:\\Projects\\Malik Traders\\Admin Controll\\MT Admin Control App\\src\\Store\\User\\Reducer.js",[],"G:\\Projects\\Malik Traders\\Admin Controll\\MT Admin Control App\\src\\MalikTraders\\MalikTraderApp.jsx",[],"G:\\Projects\\Malik Traders\\Admin Controll\\MT Admin Control App\\src\\MalikTraders\\Components\\Pages\\UserManagement\\CreateUser\\CreateUser.jsx",["126","127"],"import axios from \"axios\";\r\nimport React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router\";\r\nimport AdminLayout from \"../../../AdminLayout/AdminLayout\";\r\nimport TbInputControl from \"../UI/TbInputControl\";\r\n\r\n\r\nclass CreateNewUser extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            \"id\": 0,\r\n            \"email\": \"\",\r\n            \"role\": \"user\",\r\n            \"userName\": \"\",\r\n            \"password\": \"\",\r\n            \"userDetails\": {\r\n              \"id\": 0,\r\n              \"name\": \"\",\r\n              \"cnic\": \"\",\r\n              \"phoneNumber\": \"\",\r\n              \"address\": \"\",\r\n              \"gender\": \"\",\r\n              \"registration_Date\": \"\"\r\n            },\r\n            \"accounts\": [\r\n              {\r\n                \"id\": 0,\r\n                \"accNumber\": \"\",\r\n                \"bankName\": \"\",\r\n                \"amountPayable\": 0,\r\n                \"monthlyInstalment\": 0,\r\n                \"mtServiceId\": 0,\r\n                \"isAccClosed\": false,\r\n              }\r\n            ],\r\n            MTServices:[],\r\n            redirect: false\r\n        };\r\n        this.amountInputRef = React.createRef();\r\n        this.ReadyUser = this.ReadyUser.bind(this);\r\n    }\r\n    componentDidMount(){\r\n        if(this.state.MTServices.length === 0){\r\n            axios.get(window.$domain + 'api/MTServices').\r\n            then(MTService=>{\r\n                var forModificationState = this.state.MTServices;\r\n                forModificationState.push(MTService.data);\r\n                console.log(forModificationState)\r\n                this.setState({MTServices: forModificationState});\r\n            });\r\n            \r\n        }\r\n        console.log(this.state.MTServices)\r\n    }\r\n    ReadyUser=(event)=>{\r\n        if(event.target.name === 'GetFullName'){\r\n            this.setFullName(event.target)\r\n        }\r\n        else if(event.target.name === 'GetUserName'){\r\n            this.setUserName(event.target)\r\n        }\r\n        else if(event.target.name === 'GetGender'){\r\n            this.setGender(event.target)\r\n        }\r\n        else if(event.target.name === 'GetEmail'){\r\n            this.setEmail(event.target)\r\n        }\r\n        else if(event.target.name === 'GetPassword'){\r\n            this.setPassword(event.target)\r\n        }\r\n        else if(event.target.name === 'GetCNIC'){\r\n            this.setCNIC(event.target)\r\n        }\r\n        else if(event.target.name === 'GetAddress'){\r\n            this.setAddress(event.target)\r\n        }\r\n        else if(event.target.name === 'GetPhone'){\r\n            this.setPhoneNumber(event.target)\r\n        }\r\n        else if(event.target.name === 'GetAccountNumer'){\r\n            this.setAccountNumber(event.target)\r\n        }\r\n        else if(event.target.name === 'GetBankName'){\r\n            this.setBankName(event.target)\r\n        }\r\n        else if(event.target.name === 'GetMonthlyInstallment'){\r\n            this.setMonthlyInstallment(event.target)\r\n        }\r\n    }\r\n    setAccountNumber = (target)=>{\r\n        var newAccountState = [];\r\n        var accountData = {\r\n            \"id\": 0,\r\n            \"accNumber\": target.value,\r\n            \"bankName\": this.state.accounts[0].bankName,\r\n            \"amountPayable\": this.state.accounts[0].amountPayable,\r\n            \"monthlyInstalment\": this.state.accounts[0].monthlyInstalment,\r\n            \"mtServiceId\":this.state.accounts[0].mtServiceId,\r\n            \"isAccClosed\": false,\r\n        }\r\n        newAccountState.push(accountData);\r\n        this.setState({accounts: newAccountState})\r\n    }\r\n    setBankName = (target)=>{\r\n        var newAccountState = [];\r\n        var accountData = {\r\n            \"id\": 0,\r\n            \"accNumber\": this.state.accounts[0].accNumber ,\r\n            \"bankName\": target.value,\r\n            \"amountPayable\": this.state.accounts[0].amountPayable,\r\n            \"monthlyInstalment\": this.state.accounts[0].monthlyInstalment,\r\n            \"mtServiceId\":this.state.accounts[0].mtServiceId,\r\n            \"isAccClosed\": false,\r\n        }\r\n        newAccountState.push(accountData);\r\n        this.setState({accounts: newAccountState})\r\n    }\r\n    setMonthlyInstallment = (target)=>{\r\n        var newAccountState = [];\r\n        var accountData = {\r\n            \"id\": 0,\r\n            \"accNumber\": this.state.accounts[0].accNumber ,\r\n            \"bankName\": this.state.accounts[0].bankName ,\r\n            \"amountPayable\": this.state.accounts[0].amountPayable,\r\n            \"monthlyInstalment\": target.value,\r\n            \"mtServiceId\":this.state.accounts[0].mtServiceId,\r\n            \"isAccClosed\": false,\r\n        }\r\n        newAccountState.push(accountData);\r\n        this.setState({accounts: newAccountState})\r\n    }\r\n    setFullName =(target)=>{\r\n        this.setState({userDetails: {\r\n            \"id\": 0,\r\n            \"name\": target.value,\r\n            \"cnic\": this.state.userDetails.cnic,\r\n            \"phoneNumber\": this.state.userDetails.phoneNumber,\r\n            \"address\": this.state.userDetails.address,\r\n            \"gender\": this.state.userDetails.gender,\r\n            \"registration_Date\": this.state.userDetails.registration_Date\r\n          }});\r\n        console.log(this.state)\r\n    }\r\n    setGender =(target)=>{\r\n        this.setState({userDetails: {\r\n            \"id\": 0,\r\n            \"name\": this.state.userDetails.name,\r\n            \"cnic\": this.state.userDetails.cnic,\r\n            \"phoneNumber\": this.state.userDetails.phoneNumber,\r\n            \"address\": this.state.userDetails.address,\r\n            \"gender\": target.value,\r\n            \"registration_Date\": this.state.userDetails.registration_Date\r\n          }});\r\n    }\r\n    setUserName = (target)=>{\r\n        this.setState({userName: target.value});\r\n    }\r\n    setEmail = (target)=>{\r\n        this.setState({email: target.value});\r\n        console.log(this.state)\r\n    }\r\n    setPassword = (target)=>{\r\n        this.setState({password: target.value});\r\n        console.log(this.state)\r\n    }\r\n    setCNIC =(target)=>{\r\n        this.setState({userDetails: {\r\n            \"id\": 0,\r\n            \"name\": this.state.userDetails.name,\r\n            \"cnic\": target.value,\r\n            \"phoneNumber\": this.state.userDetails.phoneNumber,\r\n            \"address\": this.state.userDetails.address,\r\n            \"gender\": this.state.userDetails.gender,\r\n            \"registration_Date\": this.state.userDetails.registration_Date\r\n          }});\r\n        console.log(this.state)\r\n    }\r\n    setAddress =(target)=>{\r\n        this.setState({userDetails: {\r\n            \"id\": 0,\r\n            \"name\": this.state.userDetails.name,\r\n            \"cnic\": this.state.userDetails.cnic,\r\n            \"phoneNumber\": this.state.userDetails.phoneNumber,\r\n            \"address\": target.value,\r\n            \"gender\": this.state.userDetails.gender,\r\n            \"registration_Date\": this.state.userDetails.registration_Date\r\n          }});\r\n        console.log(this.state)\r\n    }\r\n    setPhoneNumber =(target)=>{\r\n        this.setState({userDetails: {\r\n            \"id\": 0,\r\n            \"name\": this.state.userDetails.name,\r\n            \"cnic\": this.state.userDetails.cnic,\r\n            \"phoneNumber\": target.value,\r\n            \"address\": this.state.userDetails.address,\r\n            \"gender\": this.state.userDetails.gender,\r\n            \"registration_Date\": this.state.userDetails.registration_Date\r\n          }});\r\n        console.log(this.state)\r\n    }\r\n    setUserType= (event)=>\r\n    {\r\n        this.setState({role: event.target.value});\r\n    }\r\n    MTServiceSelection = (event)=>{\r\n        alert(event.target.value)\r\n        this.state.MTServices[0].map(\r\n            MTservice=>{\r\n                if(event.target.value === MTservice.name){\r\n                    this.setState({accounts: \r\n                        [{\r\n                            \"id\": 0,\r\n                            \"accNumber\": this.state.accounts[0].accNumber,\r\n                            \"bankName\": this.state.accounts[0].bankName,\r\n                            \"amountPayable\": MTservice.amount,\r\n                            \"monthlyInstalment\": this.state.accounts[0].monthlyInstalment,\r\n                            \"mtServiceId\": MTservice.id,\r\n                            \"isAccClosed\": false,\r\n                        }]\r\n                    });\r\n                    this.amountInputRef.current.value = MTservice.amount;\r\n                }\r\n            }\r\n        )\r\n    }\r\n    CreatNewUser = ()=>{\r\n        axios.post(\r\n                window.$domain + 'api/Users',\r\n                {\r\n                    \"id\": 0,\r\n                    \"email\": this.state.email,\r\n                    \"userName\": this.state.userName,\r\n                    \"password\": this.state.password,\r\n                    \"role\": this.state.role,\r\n                    \"userDetails\": {\r\n                        \"id\": 0,\r\n                        \"name\": this.state.userDetails.name,\r\n                        \"cnic\": this.state.userDetails.cnic,\r\n                        \"phoneNumber\": this.state.userDetails.phoneNumber,\r\n                        \"address\": this.state.userDetails.address,\r\n                        \"gender\": this.state.userDetails.gender,\r\n                    },\r\n                    \"accounts\": [\r\n                        {\r\n                            \"id\": 0,\r\n                            \"accNumber\": this.state.accounts[0].accNumber,\r\n                            \"bankName\": this.state.accounts[0].bankName,\r\n                            \"amountPayable\": this.state.accounts[0].amountPayable,\r\n                            \"monthlyInstalment\": this.state.accounts[0].monthlyInstalment,\r\n                            \"mtServiceId\": this.state.accounts[0].mtServiceId,\r\n                            \"isAccClosed\": false,\r\n                        }\r\n                    ] \r\n                }    \r\n            )\r\n        .then(response => this.setState({redirect: true}))\r\n        .catch(\r\n            err=>\r\n            {\r\n                alert(err.response.data);\r\n            }\r\n            );\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <AdminLayout>\r\n            <div className=\"jumbotron\">\r\n                {this.state.redirect?<Redirect to='/manageuser'/>:''}\r\n                <h3>Create New User</h3>\r\n                <hr/>\r\n                <h5>Please Select User Type</h5>\r\n                <select class=\"form-select form-select-lg\" onChange={this.setUserType} aria-label=\".form-select-sm example\">\r\n                <option selected>user</option>\r\n                <option>worker</option>\r\n                </select>\r\n                <hr/>\r\n                <h5>User Information</h5>\r\n                <hr/>\r\n                    <TbInputControl DataInputHandler={this.ReadyUser} Name={'Full Name'} inutType={'text'} ctrlName={'GetFullName'} />\r\n                    <TbInputControl DataInputHandler={this.ReadyUser} Name={'User Name'} inutType={'text'} ctrlName={'GetUserName'} />\r\n                    <TbInputControl DataInputHandler={this.ReadyUser} Name={'E-mail'} inutType={'email'} ctrlName={'GetEmail'} />\r\n                    <TbInputControl DataInputHandler={this.ReadyUser} Name={'Password'} inutType={'password'} ctrlName={'GetPassword'} />\r\n                    <TbInputControl DataInputHandler={this.ReadyUser} Name={'Phone Number'} inutType={'text'} ctrlName={'GetPhone'} />\r\n                    <TbInputControl DataInputHandler={this.ReadyUser} Name={'CNIC'} inutType={'text'} ctrlName={'GetCNIC'} />\r\n                    <TbInputControl DataInputHandler={this.ReadyUser} Name={'Complete Address'} inutType={'text'} ctrlName={'GetAddress'} />\r\n                    <TbInputControl DataInputHandler={this.ReadyUser} Name={'Gender'} inutType={'text'} ctrlName={'GetGender'} />\r\n                <div className='container-fluid'>\r\n                    <h5>Account Information</h5>\r\n                    <hr/> \r\n                    <h6>Please Select Scheme/Product</h6>\r\n                    <hr/>\r\n                        <select class=\"form-select form-select-lg\" onChange={this.MTServiceSelection} aria-label=\".form-select-sm example\">\r\n                        <option selected>Please Select Scheme</option>\r\n                            {\r\n                                this.state.MTServices.length > 0?\r\n                                this.state.MTServices[0].map(MTService=>{\r\n                                    return <option key={MTService.id}>{MTService.name}</option>\r\n                                }):\r\n                                <option selected>Wait We are trying to Load Your Providing Services</option>\r\n                            }\r\n                        </select>\r\n                </div>\r\n                <hr/>\r\n                    <TbInputControl DataInputHandler={this.ReadyUser} Name={'Account Numer'} inutType={'text'} ctrlName={'GetAccountNumer'} />\r\n                    <TbInputControl DataInputHandler={this.ReadyUser} Name={'Bank Name'} inutType={'text'} ctrlName={'GetBankName'} />\r\n                    <div class=\"form-group \">\r\n                        <label for='GetAmountPayable'>Total Amount Payable:</label>\r\n                        <input ref={this.amountInputRef} type='text' class=\"form-control\" onChange={this.ReadyUser} name='GetAmountPayable'/>\r\n                    </div>\r\n                    <TbInputControl DataInputHandler={this.ReadyUser} Name={'Monthly Installment'} inutType={'text'} ctrlName={'GetMonthlyInstallment'} />\r\n                    <button className=\"btn btn-success\" onClick={this.CreatNewUser}>Create User</button>\r\n                </div>\r\n            </AdminLayout>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CreateNewUser;","G:\\Projects\\Malik Traders\\Admin Controll\\MT Admin Control App\\src\\MalikTraders\\Components\\Pages\\UserManagement\\UserManagement.jsx",[],"G:\\Projects\\Malik Traders\\Admin Controll\\MT Admin Control App\\src\\MalikTraders\\Components\\Pages\\MTHome.jsx",[],"G:\\Projects\\Malik Traders\\Admin Controll\\MT Admin Control App\\src\\MalikTraders\\Components\\Pages\\AccountManagement\\ShowAccountDetails.jsx",["128","129"],"G:\\Projects\\Malik Traders\\Admin Controll\\MT Admin Control App\\src\\MalikTraders\\Components\\Pages\\AccountManagement\\PaymentHistory\\PaymentHistory.jsx",["130","131","132"],"import { Component } from \"react\";\r\nimport AdminLayout from \"../../../AdminLayout/AdminLayout\";\r\nimport axios from 'axios'\r\nimport Cookie from 'universal-cookie'\r\nimport { Link } from \"react-router-dom\";\r\nimport AddNewPayment from \"../../UserManagement/AddNewPayment/AddNewPayment\";\r\nimport { Spinner } from \"react-bootstrap\";\r\n\r\nclass PaymentHistory extends Component{\r\n   \r\n    constructor(props) {\r\n        super(props);\r\n        this.state =  {\r\n            historyList: []\r\n        };\r\n    }\r\n    componentDidMount(){\r\n        if(this.state.historyList.length === 0)\r\n        {\r\n            axios.get(window.$domain + 'api/AccDetails/GetAccDetailsbyAccountId/' + this.props.match.params.id)\r\n            .then(\r\n                resp=>{\r\n                        resp.data.map(\r\n                            payment => {\r\n                                axios.get(window.$domain + 'api/Users/' + payment.postedByUserId).then(\r\n                                    user=>{\r\n                                        var arrayHistory = [];\r\n                                        arrayHistory = this.state.historyList;\r\n                                        arrayHistory.push(\r\n                                            {\r\n                                                payDate: payment.payingDate, \r\n                                                paymentId: payment.id,\r\n                                                payedAmount: payment.payedAmount,\r\n                                                PostedByUser: user.data.userName\r\n                                            });\r\n                                        this.setState({historyList: arrayHistory});\r\n                                    }\r\n                                )\r\n                            }\r\n                    )\r\n                }\r\n            ).catch(\r\n                err=> {\r\n                    console.log(err);\r\n                }\r\n            )\r\n        }\r\n    }\r\n\r\n     render(){\r\n        return(\r\n            <AdminLayout>\r\n                <div className=\"jumbotron container-fluid overflow-auto\">\r\n                    <h2>Payment History</h2>\r\n                <table className=\"table table-bordered\">\r\n                    <thead>\r\n                        <tr >\r\n                            <th>Date -- Time</th>\r\n                            <th>Payment</th>\r\n                            <th>Payment Received By</th>\r\n                            <th>Amount Modification</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                         {\r\n                             this.state.historyList !== null ?\r\n                             this.state.historyList.map(payment=>{\r\n                                return <tr>\r\n                                            <td>{new Date(payment.payDate).toDateString() + ' -- ' + new Date(payment.payDate).toLocaleTimeString() }</td>\r\n                                            <td>{payment.payedAmount}</td>\r\n                                            <td>{payment.PostedByUser}</td>\r\n                                            <td><Link to={'/account/payment/modification/' + payment.paymentId}>modify</Link></td>\r\n                                    </tr>\r\n                             }): <Spinner animation=\"grow\" />\r\n                         }\r\n                    </tbody>\r\n                </table>\r\n                \r\n            </div>\r\n            </AdminLayout>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nexport default PaymentHistory;\r\n","G:\\Projects\\Malik Traders\\Admin Controll\\MT Admin Control App\\src\\Store\\User\\ActionTypes.js",[],"G:\\Projects\\Malik Traders\\Admin Controll\\MT Admin Control App\\src\\MalikTraders\\Components\\AdminLayout\\AdminLayout.jsx",[],"G:\\Projects\\Malik Traders\\Admin Controll\\MT Admin Control App\\src\\MalikTraders\\Components\\Pages\\UserManagement\\AddNewPayment\\AddNewPayment.jsx",["133"],"import axios from \"axios\";\r\nimport { Component } from \"react\";\r\nimport { Redirect } from \"react-router\";\r\nimport AdminLayout from \"../../../AdminLayout/AdminLayout\";\r\nimport TbInputControl from \"../UI/TbInputControl\";\r\nimport Cookie from 'universal-cookie'\r\nclass AddNewPayment extends Component{\r\n    state = {\r\n        amount: 0,\r\n        redirect: false\r\n    }\r\n    ReadyUser = event =>{\r\n        if(event.target.value > 0)\r\n            this.setState({amount: event.target.value})\r\n    }\r\n    postPaymnet= ()=>{\r\n        var cookies = new Cookie();\r\n        axios.post(\r\n            window.$domain + 'api/AccDetails',\r\n            {\r\n                \"id\": 0,\r\n                \"payedAmount\": this.state.amount,\r\n                \"payingDate\": \"2021-09-27T22:15:41.611Z\",\r\n                \"accId\": this.props.Accid,\r\n                \"postedByUserId\": cookies.get('logedInUser').id\r\n            }\r\n        ).then(\r\n            resp=>{\r\n                console.log(resp)\r\n                this.setState({redirect: true});\r\n            }\r\n        )\r\n    }\r\n    render(){\r\n        return(\r\n                <div className=\"jumbotron mt-3\">\r\n                    {\r\n                        this.state.redirect ? <Redirect to={'/Accounts/'+this.props.Accid+'/Payment'} />: ''\r\n                    }\r\n                    <h3>Add Payment</h3>\r\n                    <hr/>\r\n                    <h5>Please fill this form carefully, This transection is ir-revercible</h5>\r\n                    <hr/>\r\n                    <TbInputControl DataInputHandler={this.ReadyUser} Name={'Payment'} inutType={'number'} ctrlName={'Add Payment'} />\r\n                    <button onClick={this.postPaymnet} className='btn btn-success'>Post Amount</button>\r\n                </div>\r\n        )\r\n    }\r\n}\r\nexport default AddNewPayment;","G:\\Projects\\Malik Traders\\Admin Controll\\MT Admin Control App\\src\\MalikTraders\\Components\\Pages\\AccountManagement\\DisplayPaymentDetails\\PaymentDetails.jsx",[],"G:\\Projects\\Malik Traders\\Admin Controll\\MT Admin Control App\\src\\MalikTraders\\Components\\Pages\\UserManagement\\UI\\TbInputControl.jsx",[],"G:\\Projects\\Malik Traders\\Admin Controll\\MT Admin Control App\\src\\MalikTraders\\Components\\Pages\\AccountManagement\\UI\\AccountCard.jsx",["134"],"G:\\Projects\\Malik Traders\\Admin Controll\\MT Admin Control App\\src\\MalikTraders\\Components\\Pages\\UserManagement\\UserList\\AllUserList.jsx",["135","136","137"],"G:\\Projects\\Malik Traders\\Admin Controll\\MT Admin Control App\\src\\MalikTraders\\Components\\NavBar\\NavBar.jsx",[],"G:\\Projects\\Malik Traders\\Admin Controll\\MT Admin Control App\\src\\MalikTraders\\Components\\Pages\\UserManagement\\AttachWithNewScheme\\AttachtoNewScheme.jsx",["138","139","140","141","142"],"import { Component } from \"react\";\r\nimport React from 'react'\r\nimport AdminLayout from '../../../AdminLayout/AdminLayout'\r\nimport TbInputControl from '../UI/TbInputControl'\r\nimport axios from \"axios\";\r\nimport { Redirect } from \"react-router\";\r\n\r\nclass AttachWithNewScheme extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            AccProtoType:{\r\n                \"id\": 0,\r\n                \"amountPayable\": 0,\r\n                \"monthlyInstalment\": 0,\r\n                \"isAccClosed\": false,\r\n                \"userid\": 0,\r\n                \"mtServiceId\": 0,\r\n                \"accPaymentDetails\": null\r\n            },\r\n            MTServices: null,\r\n            redirect: false\r\n        };\r\n        this.amountInputRef = React.createRef();\r\n        this.ReadyUser = this.ReadyUser.bind(this);\r\n    }\r\n\r\n    ReadyUser=(event)=>{\r\n        if(event.target.name === 'GetAmountPayable')\r\n        {\r\n            this.TotalAmountPayable(event.target)\r\n        }\r\n        else if(event.target.name === 'GetMonthlyInstallment'){\r\n            this.MonthlyInstallment(event.target)\r\n        }\r\n    }\r\n\r\n    TotalAmountPayable = target =>{\r\n        this.setState({AccProtoType: \r\n            {\r\n                \"id\": 0,\r\n                \"amountPayable\": target.value,\r\n                \"monthlyInstalment\": this.state.AccProtoType.monthlyInstalment,\r\n                \"isAccClosed\": false,\r\n                \"userid\": this.state.AccProtoType.userid,\r\n                \"mtServiceId\": this.state.AccProtoType.mtServiceId,\r\n                \"accPaymentDetails\": null\r\n            }\r\n        })\r\n    }\r\n\r\n    MonthlyInstallment = target=>{\r\n        this.setState({AccProtoType: \r\n            {\r\n                \"id\": 0,\r\n                \"amountPayable\": this.state.AccProtoType.amountPayable,\r\n                \"monthlyInstalment\": target.value,\r\n                \"isAccClosed\": false,\r\n                \"userid\": this.state.AccProtoType.userid,\r\n                \"mtServiceId\":this.state.AccProtoType.mtServiceId,\r\n                \"accPaymentDetails\": null\r\n            }\r\n        })\r\n    }\r\n\r\n    PostData=()=>{\r\n        axios.get(window.$domain + 'api/Accounts/GetAccountbyUserId/' + this.state.AccProtoType.userid)\r\n        .then(\r\n            resp=> {\r\n                var duplicated = false;\r\n                resp.data.map(acc=>{\r\n                    if(acc.mtServiceId === this.state.AccProtoType.mtServiceId)\r\n                    {\r\n                        duplicated = true;\r\n                        alert('Sorry! You are not allow to make duplication')\r\n                    }\r\n                });\r\n                if(!duplicated)\r\n                {\r\n                    axios.post(window.$domain + 'api/Accounts',this.state.AccProtoType)\r\n                        .then(resp=> {\r\n                            this.setState({redirect: true});\r\n                        }). catch(\r\n                            resp=> alert(resp.data.message)\r\n                        );\r\n                }\r\n            }\r\n        ). catch(\r\n            resp=> alert(resp.data.message)\r\n        );\r\n    }\r\n\r\n    MTServiceSelection = (event) => {\r\n        if(event.target.value !== 'Please Select Scheme/Product'){\r\n            this.state.MTServices.map(\r\n                mtService=>{\r\n                    if(mtService.name === event.target.value){\r\n                        this.setState({AccProtoType: \r\n                            {\r\n                                \"id\": 0,\r\n                                \"amountPayable\": this.state.AccProtoType.amountPayable,\r\n                                \"monthlyInstalment\": this.state.AccProtoType.monthlyInstalment,\r\n                                \"isAccClosed\": false,\r\n                                \"userid\": this.state.AccProtoType.userid,\r\n                                \"mtServiceId\": mtService.id,\r\n                                \"accPaymentDetails\": null\r\n                            }\r\n                        })\r\n                    }\r\n                }\r\n            )\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        if(this.state.AccProtoType.userid === 0){\r\n            this.setState({AccProtoType: {\r\n                \"id\": 0,\r\n                \"amountPayable\": this.state.AccProtoType.amountPayable,\r\n                \"monthlyInstalment\": this.state.AccProtoType.monthlyInstalment,\r\n                \"isAccClosed\": false,\r\n                \"userid\": this.props.match.params.id,\r\n                \"mtServiceId\": this.state.AccProtoType.mtServiceId,\r\n                \"accPaymentDetails\": null\r\n            }})\r\n        }\r\n        if(this.state.MTServices === null){\r\n            axios.get(window.$domain + 'api/MTServices').\r\n            then(resp=>{\r\n                this.setState({MTServices: resp.data});\r\n            });\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <AdminLayout>\r\n                {this.state.redirect? <Redirect to='/manageuser'/>: ''}\r\n                <div className='jumbotron'>\r\n                    <div className='container-fluid'>\r\n                        <h5>Add User to New Scheme</h5>\r\n                        <hr/> \r\n                        <h6>Please Select Scheme/Product</h6>\r\n                        <hr/>\r\n                            <select class=\"form-select form-select-lg\" onChange={this.MTServiceSelection} aria-label=\".form-select-sm example\">\r\n                            <option selected>Please Select Scheme/Product</option>\r\n                                {\r\n                                    this.state.MTServices?\r\n                                    this.state.MTServices.map(MTService=>{\r\n                                        return <option key={MTService.id}>{MTService.name}</option>\r\n                                    }):\r\n                                    <option selected>Wait We are trying to Load Your Providing Services</option>\r\n                                }\r\n                            </select>\r\n                    </div>\r\n                    <hr/>\r\n                    <div class=\"form-group \">\r\n                        <label for='GetAmountPayable'>Total Amount Payable:</label>\r\n                        <input ref={this.amountInputRef} type='number' class=\"form-control\" onChange={this.ReadyUser} name='GetAmountPayable'/>\r\n                    </div>\r\n                    <TbInputControl DataInputHandler={this.ReadyUser} Name={'Monthly Installment'} inutType={'number'} ctrlName={'GetMonthlyInstallment'} />\r\n                    <button className=\"btn btn-success\" onClick={this.PostData}>Add User to this Sceme</button>\r\n                </div>\r\n            </AdminLayout>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default AttachWithNewScheme;","G:\\Projects\\Malik Traders\\Admin Controll\\MT Admin Control App\\src\\MalikTraders\\Components\\Pages\\ProductManager\\ProductManager.jsx",[],"G:\\Projects\\Malik Traders\\Admin Controll\\MT Admin Control App\\src\\MalikTraders\\Components\\Pages\\ProductManager\\AddNewProduct\\AddNewProduct.jsx",[],"G:\\Projects\\Malik Traders\\Admin Controll\\MT Admin Control App\\src\\MalikTraders\\Components\\Pages\\ProductManager\\UI\\TbInput.jsx",[],"G:\\Projects\\Malik Traders\\Admin Controll\\MT Admin Control App\\src\\MalikTraders\\Components\\Pages\\Login\\Login.jsx",[],"G:\\Projects\\Malik Traders\\Admin Controll\\MT Admin Control App\\src\\MalikTraders\\Components\\Pages\\AccountManagement\\ModifyPayment\\ModifyPayment.jsx",[],"G:\\Projects\\Malik Traders\\Admin Controll\\MT Admin Control App\\src\\MalikTraders\\Components\\DashBoard\\MainDashBoard.jsx",[],"G:\\Projects\\Malik Traders\\Admin Controll\\MT Admin Control App\\src\\MalikTraders\\Components\\DashBoard\\DashBoardNavigator\\DashBoardNavigator.jsx",[],"G:\\Projects\\Malik Traders\\Admin Controll\\MT Admin Control App\\src\\MalikTraders\\Components\\DashBoard\\TodayRecovery\\TodayRecovery.jsx",[],"G:\\Projects\\Malik Traders\\Admin Controll\\MT Admin Control App\\src\\MalikTraders\\Components\\DashBoard\\MonthlyRecoveryReport\\MonthlyRecoveryReport.jsx",[],["143","144"],{"ruleId":"145","replacedBy":"146"},{"ruleId":"147","replacedBy":"148"},{"ruleId":"149","severity":1,"message":"150","line":45,"column":57,"nodeType":"151","messageId":"152","endLine":45,"endColumn":58,"fix":"153"},{"ruleId":"154","severity":1,"message":"155","line":210,"column":22,"nodeType":"156","messageId":"157","endLine":210,"endColumn":24},{"ruleId":"158","severity":1,"message":"159","line":31,"column":48,"nodeType":"160","messageId":"161","endLine":31,"endColumn":49},{"ruleId":"154","severity":1,"message":"155","line":62,"column":21,"nodeType":"156","messageId":"157","endLine":62,"endColumn":23},{"ruleId":"162","severity":1,"message":"163","line":4,"column":8,"nodeType":"164","messageId":"165","endLine":4,"endColumn":14},{"ruleId":"162","severity":1,"message":"166","line":6,"column":8,"nodeType":"164","messageId":"165","endLine":6,"endColumn":21},{"ruleId":"154","severity":1,"message":"155","line":24,"column":37,"nodeType":"156","messageId":"157","endLine":24,"endColumn":39},{"ruleId":"162","severity":1,"message":"167","line":4,"column":8,"nodeType":"164","messageId":"165","endLine":4,"endColumn":19},{"ruleId":"162","severity":1,"message":"168","line":8,"column":9,"nodeType":"164","messageId":"165","endLine":8,"endColumn":26},{"ruleId":"149","severity":1,"message":"150","line":28,"column":91,"nodeType":"151","messageId":"152","endLine":28,"endColumn":92,"fix":"169"},{"ruleId":"149","severity":1,"message":"150","line":40,"column":91,"nodeType":"151","messageId":"152","endLine":40,"endColumn":92,"fix":"170"},{"ruleId":"158","severity":1,"message":"159","line":54,"column":48,"nodeType":"160","messageId":"161","endLine":54,"endColumn":49},{"ruleId":"171","severity":1,"message":"172","line":67,"column":9,"nodeType":"151","messageId":"173","endLine":88,"endColumn":17,"fix":"174"},{"ruleId":"154","severity":1,"message":"155","line":71,"column":34,"nodeType":"156","messageId":"157","endLine":71,"endColumn":36},{"ruleId":"171","severity":1,"message":"172","line":80,"column":21,"nodeType":"151","messageId":"173","endLine":83,"endColumn":34,"fix":"175"},{"ruleId":"154","severity":1,"message":"155","line":96,"column":26,"nodeType":"156","messageId":"157","endLine":96,"endColumn":28},{"ruleId":"149","severity":1,"message":"150","line":128,"column":57,"nodeType":"151","messageId":"152","endLine":128,"endColumn":58,"fix":"176"},{"ruleId":"145","replacedBy":"177"},{"ruleId":"147","replacedBy":"178"},"no-native-reassign",["179"],"no-negated-in-lhs",["180"],"dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"181","text":"182"},"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","no-unused-vars","'Cookie' is defined but never used.","Identifier","unusedVar","'AddNewPayment' is defined but never used.","'AdminLayout' is defined but never used.","'toastAccountClose' is assigned a value but never used.",{"range":"183","text":"182"},{"range":"184","text":"182"},"no-whitespace-before-property","Unexpected whitespace before property catch.","unexpectedWhitespace",{"range":"185","text":"186"},{"range":"187","text":"186"},{"range":"188","text":"182"},["179"],["180"],"no-global-assign","no-unsafe-negation",[1366,1381],"\r\n            .",[902,917],[1348,1363],[3035,3037],".",[2893,2895],[4689,4704]]