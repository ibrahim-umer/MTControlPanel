[{"G:\\Projects\\Malik Traders\\Admin Control\\MT Admin Control App\\src\\index.js":"1","G:\\Projects\\Malik Traders\\Admin Control\\MT Admin Control App\\src\\reportWebVitals.js":"2","G:\\Projects\\Malik Traders\\Admin Control\\MT Admin Control App\\src\\App.js":"3","G:\\Projects\\Malik Traders\\Admin Control\\MT Admin Control App\\src\\Store\\Store.js":"4","G:\\Projects\\Malik Traders\\Admin Control\\MT Admin Control App\\src\\Store\\User\\Reducer.js":"5","G:\\Projects\\Malik Traders\\Admin Control\\MT Admin Control App\\src\\MalikTraders\\MalikTraderApp.jsx":"6","G:\\Projects\\Malik Traders\\Admin Control\\MT Admin Control App\\src\\MalikTraders\\Components\\Pages\\UserManagement\\AttachWithNewScheme\\AttachtoNewScheme.jsx":"7","G:\\Projects\\Malik Traders\\Admin Control\\MT Admin Control App\\src\\MalikTraders\\Components\\Pages\\UserManagement\\UserManagement.jsx":"8","G:\\Projects\\Malik Traders\\Admin Control\\MT Admin Control App\\src\\MalikTraders\\Components\\Pages\\UserManagement\\CreateUser\\CreateUser.jsx":"9","G:\\Projects\\Malik Traders\\Admin Control\\MT Admin Control App\\src\\MalikTraders\\Components\\Pages\\AccountManagement\\ModifyPayment\\ModifyPayment.jsx":"10","G:\\Projects\\Malik Traders\\Admin Control\\MT Admin Control App\\src\\MalikTraders\\Components\\Pages\\AccountManagement\\ShowAccountDetails.jsx":"11","G:\\Projects\\Malik Traders\\Admin Control\\MT Admin Control App\\src\\MalikTraders\\Components\\Pages\\Login\\Login.jsx":"12","G:\\Projects\\Malik Traders\\Admin Control\\MT Admin Control App\\src\\MalikTraders\\Components\\Pages\\ProductManager\\ProductManager.jsx":"13","G:\\Projects\\Malik Traders\\Admin Control\\MT Admin Control App\\src\\MalikTraders\\Components\\Pages\\AccountManagement\\PaymentHistory\\PaymentHistory.jsx":"14","G:\\Projects\\Malik Traders\\Admin Control\\MT Admin Control App\\src\\MalikTraders\\Components\\Pages\\ProductManager\\AddNewProduct\\AddNewProduct.jsx":"15","G:\\Projects\\Malik Traders\\Admin Control\\MT Admin Control App\\src\\Store\\User\\ActionTypes.js":"16","G:\\Projects\\Malik Traders\\Admin Control\\MT Admin Control App\\src\\MalikTraders\\Components\\AdminLayout\\AdminLayout.jsx":"17","G:\\Projects\\Malik Traders\\Admin Control\\MT Admin Control App\\src\\MalikTraders\\Components\\DashBoard\\MainDashBoard.jsx":"18","G:\\Projects\\Malik Traders\\Admin Control\\MT Admin Control App\\src\\MalikTraders\\Components\\Pages\\AccountManagement\\DisplayPaymentDetails\\PaymentDetails.jsx":"19","G:\\Projects\\Malik Traders\\Admin Control\\MT Admin Control App\\src\\MalikTraders\\Components\\Pages\\UserManagement\\UI\\TbInputControl.jsx":"20","G:\\Projects\\Malik Traders\\Admin Control\\MT Admin Control App\\src\\MalikTraders\\Components\\Pages\\AccountManagement\\UI\\AccountCard.jsx":"21","G:\\Projects\\Malik Traders\\Admin Control\\MT Admin Control App\\src\\MalikTraders\\Components\\Pages\\ProductManager\\UI\\TbInput.jsx":"22","G:\\Projects\\Malik Traders\\Admin Control\\MT Admin Control App\\src\\MalikTraders\\Components\\Pages\\UserManagement\\UserList\\AllUserList.jsx":"23","G:\\Projects\\Malik Traders\\Admin Control\\MT Admin Control App\\src\\MalikTraders\\Components\\NavBar\\NavBar.jsx":"24","G:\\Projects\\Malik Traders\\Admin Control\\MT Admin Control App\\src\\MalikTraders\\Components\\DashBoard\\DashBoardNavigator\\DashBoardNavigator.jsx":"25","G:\\Projects\\Malik Traders\\Admin Control\\MT Admin Control App\\src\\MalikTraders\\Components\\DashBoard\\MonthlyRecoveryReport\\MonthlyRecoveryReport.jsx":"26","G:\\Projects\\Malik Traders\\Admin Control\\MT Admin Control App\\src\\MalikTraders\\Components\\DashBoard\\TodayRecovery\\TodayRecovery.jsx":"27","G:\\Projects\\Malik Traders\\Admin Control\\MT Admin Control App\\src\\MalikTraders\\Components\\DashBoard\\MonthlyReport\\MonthlyReport.jsx":"28","G:\\Projects\\Malik Traders\\Admin Control\\MT Admin Control App\\src\\MalikTraders\\Components\\Pages\\UserManagement\\AddNewPayment\\AddNewPayment.jsx":"29","G:\\Projects\\Malik Traders\\Admin Control\\MT Admin Control App\\src\\MalikTraders\\Components\\DashBoard\\MonthlyReport\\MonthlyReportChart.jsx":"30","G:\\Projects\\Malik Traders\\Admin Control\\MT Admin Control App\\src\\MalikTraders\\Components\\NavBar\\ShopNav.jsx":"31","G:\\Projects\\Malik Traders\\Admin Control\\MT Admin Control App\\src\\MalikTraders\\Components\\Pages\\Shop\\Shop.jsx":"32","G:\\Projects\\Malik Traders\\Admin Control\\MT Admin Control App\\src\\MalikTraders\\Components\\AdminLayout\\ShopAdminLayout.jsx":"33","G:\\Projects\\Malik Traders\\Admin Control\\MT Admin Control App\\src\\MalikTraders\\Components\\Pages\\Shop\\HeaderBox\\HeaderBox.jsx":"34","G:\\Projects\\Malik Traders\\Admin Control\\MT Admin Control App\\src\\MalikTraders\\Components\\Pages\\Shop\\PaymentHistory\\PaymentHistory.jsx":"35","G:\\Projects\\Malik Traders\\Admin Control\\MT Admin Control App\\src\\MalikTraders\\Components\\Pages\\Shop\\NewTransection\\NewTransection.jsx":"36","G:\\Projects\\Malik Traders\\Admin Control\\MT Admin Control App\\src\\MalikTraders\\Components\\Pages\\Shop\\NewTransection\\TransectionTypeCheckBoxs.jsx":"37","G:\\Projects\\Malik Traders\\Admin Control\\MT Admin Control App\\src\\MalikTraders\\Components\\Pages\\Shop\\CreateShop\\CreateShop.jsx":"38"},{"size":722,"mtime":1606398692449,"results":"39","hashOfConfig":"40"},{"size":362,"mtime":499162500000,"results":"41","hashOfConfig":"40"},{"size":2559,"mtime":1634801336842,"results":"42","hashOfConfig":"40"},{"size":614,"mtime":1606449119660,"results":"43","hashOfConfig":"40"},{"size":1472,"mtime":1612217178671,"results":"44","hashOfConfig":"40"},{"size":832,"mtime":1633688298612,"results":"45","hashOfConfig":"40"},{"size":6993,"mtime":1633991114433,"results":"46","hashOfConfig":"40"},{"size":622,"mtime":1633989878225,"results":"47","hashOfConfig":"40"},{"size":7508,"mtime":1634765057496,"results":"48","hashOfConfig":"40"},{"size":2494,"mtime":1633991893265,"results":"49","hashOfConfig":"40"},{"size":6598,"mtime":1634288333255,"results":"50","hashOfConfig":"40"},{"size":5081,"mtime":1634812174450,"results":"51","hashOfConfig":"40"},{"size":2657,"mtime":1634288446113,"results":"52","hashOfConfig":"40"},{"size":8806,"mtime":1634813832785,"results":"53","hashOfConfig":"40"},{"size":2647,"mtime":1634288396229,"results":"54","hashOfConfig":"40"},{"size":86,"mtime":1606396609553,"results":"55","hashOfConfig":"40"},{"size":234,"mtime":1634587303680,"results":"56","hashOfConfig":"40"},{"size":1199,"mtime":1633946829764,"results":"57","hashOfConfig":"40"},{"size":1734,"mtime":1633983158001,"results":"58","hashOfConfig":"40"},{"size":325,"mtime":1632735638261,"results":"59","hashOfConfig":"40"},{"size":2045,"mtime":1634160504342,"results":"60","hashOfConfig":"40"},{"size":299,"mtime":1632903021914,"results":"61","hashOfConfig":"40"},{"size":7491,"mtime":1634801366967,"results":"62","hashOfConfig":"40"},{"size":2126,"mtime":1633818458493,"results":"63","hashOfConfig":"40"},{"size":921,"mtime":1633946802186,"results":"64","hashOfConfig":"40"},{"size":2093,"mtime":1633983432776,"results":"65","hashOfConfig":"40"},{"size":2591,"mtime":1633989342186,"results":"66","hashOfConfig":"40"},{"size":452,"mtime":1633949195211,"results":"67","hashOfConfig":"40"},{"size":1799,"mtime":1633039506822,"results":"68","hashOfConfig":"40"},{"size":925,"mtime":1633982072778,"results":"69","hashOfConfig":"40"},{"size":1134,"mtime":1634806409406,"results":"70","hashOfConfig":"40"},{"size":4633,"mtime":1634845228615,"results":"71","hashOfConfig":"40"},{"size":251,"mtime":1634587371033,"results":"72","hashOfConfig":"40"},{"size":732,"mtime":1634760943301,"results":"73","hashOfConfig":"40"},{"size":1270,"mtime":1634763006912,"results":"74","hashOfConfig":"40"},{"size":4536,"mtime":1634850546969,"results":"75","hashOfConfig":"40"},{"size":750,"mtime":1634668839812,"results":"76","hashOfConfig":"40"},{"size":4025,"mtime":1634807824918,"results":"77","hashOfConfig":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"1fb5u7c",{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":3,"source":"93","usedDeprecatedRules":"80"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"80"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"80"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"80"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"80"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"80"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":2,"source":"131","usedDeprecatedRules":"80"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"80"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"80"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"G:\\Projects\\Malik Traders\\Admin Control\\MT Admin Control App\\src\\index.js",[],["164","165"],"G:\\Projects\\Malik Traders\\Admin Control\\MT Admin Control App\\src\\reportWebVitals.js",[],"G:\\Projects\\Malik Traders\\Admin Control\\MT Admin Control App\\src\\App.js",[],"G:\\Projects\\Malik Traders\\Admin Control\\MT Admin Control App\\src\\Store\\Store.js",[],"G:\\Projects\\Malik Traders\\Admin Control\\MT Admin Control App\\src\\Store\\User\\Reducer.js",[],"G:\\Projects\\Malik Traders\\Admin Control\\MT Admin Control App\\src\\MalikTraders\\MalikTraderApp.jsx",[],"G:\\Projects\\Malik Traders\\Admin Control\\MT Admin Control App\\src\\MalikTraders\\Components\\Pages\\UserManagement\\AttachWithNewScheme\\AttachtoNewScheme.jsx",["166","167","168","169","170"],"import { Component } from \"react\";\r\nimport React from 'react'\r\nimport AdminLayout from '../../../AdminLayout/AdminLayout'\r\nimport TbInputControl from '../UI/TbInputControl'\r\nimport axios from \"axios\";\r\nimport { Redirect } from \"react-router\";\r\nimport Cookie from 'universal-cookie';\r\n\r\nclass AttachWithNewScheme extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            AccProtoType:{\r\n                \"id\": 0,\r\n                \"amountPayable\": 0,\r\n                \"monthlyInstalment\": 0,\r\n                \"isAccClosed\": false,\r\n                \"userid\": 0,\r\n                \"mtServiceId\": 0,\r\n                \"accPaymentDetails\": null\r\n            },\r\n            MTServices: null,\r\n            redirect: false,\r\n            isLogin: true\r\n        };\r\n        this.amountInputRef = React.createRef();\r\n        this.ReadyUser = this.ReadyUser.bind(this);\r\n    }\r\n\r\n    ReadyUser=(event)=>{\r\n        if(event.target.name === 'GetAmountPayable')\r\n        {\r\n            this.TotalAmountPayable(event.target)\r\n        }\r\n        else if(event.target.name === 'GetMonthlyInstallment'){\r\n            this.MonthlyInstallment(event.target)\r\n        }\r\n    }\r\n\r\n    TotalAmountPayable = target =>{\r\n        this.setState({AccProtoType: \r\n            {\r\n                \"id\": 0,\r\n                \"amountPayable\": target.value,\r\n                \"monthlyInstalment\": this.state.AccProtoType.monthlyInstalment,\r\n                \"isAccClosed\": false,\r\n                \"userid\": this.state.AccProtoType.userid,\r\n                \"mtServiceId\": this.state.AccProtoType.mtServiceId,\r\n                \"accPaymentDetails\": null\r\n            }\r\n        })\r\n    }\r\n\r\n    MonthlyInstallment = target=>{\r\n        this.setState({AccProtoType: \r\n            {\r\n                \"id\": 0,\r\n                \"amountPayable\": this.state.AccProtoType.amountPayable,\r\n                \"monthlyInstalment\": target.value,\r\n                \"isAccClosed\": false,\r\n                \"userid\": this.state.AccProtoType.userid,\r\n                \"mtServiceId\":this.state.AccProtoType.mtServiceId,\r\n                \"accPaymentDetails\": null\r\n            }\r\n        })\r\n    }\r\n\r\n    PostData=()=>{\r\n        axios.get(window.$domain + 'api/Accounts/GetAccountbyUserId/' + this.state.AccProtoType.userid)\r\n        .then(\r\n            resp=> {\r\n                var duplicated = false;\r\n                resp.data.map(acc=>{\r\n                    if(acc.mtServiceId === this.state.AccProtoType.mtServiceId)\r\n                    {\r\n                        duplicated = true;\r\n                        alert('Sorry! You are not allow to make duplication')\r\n                    }\r\n                });\r\n                if(!duplicated)\r\n                {\r\n                    axios.post(window.$domain + 'api/Accounts',this.state.AccProtoType)\r\n                        .then(resp=> {\r\n                            this.setState({redirect: true});\r\n                        }). catch(\r\n                            resp=> alert(resp.data.message)\r\n                        );\r\n                }\r\n            }\r\n        ). catch(\r\n            resp=> alert(resp.data.message)\r\n        );\r\n    }\r\n\r\n    MTServiceSelection = (event) => {\r\n        if(event.target.value !== 'Please Select Scheme/Product'){\r\n            this.state.MTServices.map(\r\n                mtService=>{\r\n                    if(mtService.name === event.target.value){\r\n                        this.setState({AccProtoType: \r\n                            {\r\n                                \"id\": 0,\r\n                                \"amountPayable\": this.state.AccProtoType.amountPayable,\r\n                                \"monthlyInstalment\": this.state.AccProtoType.monthlyInstalment,\r\n                                \"isAccClosed\": false,\r\n                                \"userid\": this.state.AccProtoType.userid,\r\n                                \"mtServiceId\": mtService.id,\r\n                                \"accPaymentDetails\": null\r\n                            }\r\n                        })\r\n                    }\r\n                }\r\n            )\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        if(this.state.AccProtoType.userid === 0){\r\n            this.setState({AccProtoType: {\r\n                \"id\": 0,\r\n                \"amountPayable\": this.state.AccProtoType.amountPayable,\r\n                \"monthlyInstalment\": this.state.AccProtoType.monthlyInstalment,\r\n                \"isAccClosed\": false,\r\n                \"userid\": this.props.match.params.id,\r\n                \"mtServiceId\": this.state.AccProtoType.mtServiceId,\r\n                \"accPaymentDetails\": null\r\n            }})\r\n        }\r\n        if(this.state.MTServices === null){\r\n            axios.get(window.$domain + 'api/MTServices').\r\n            then(resp=>{\r\n                this.setState({MTServices: resp.data});\r\n            });\r\n        }\r\n        var cookies = new Cookie();\r\n        if(cookies.get('logedInUser') === undefined)\r\n        {\r\n            this.setState({isLogin: false});\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <AdminLayout>\r\n                {this.state.isLogin?'':<Redirect to='/login'/>}\r\n                {this.state.redirect? <Redirect to='/manageuser'/>: ''}\r\n                <div className='jumbotron'>\r\n                    <div className='container-fluid'>\r\n                        <h5>Add User to New Scheme</h5>\r\n                        <hr/> \r\n                        <h6>Please Select Scheme/Product</h6>\r\n                        <hr/>\r\n                            <select class=\"form-select form-select-lg\" onChange={this.MTServiceSelection} aria-label=\".form-select-sm example\">\r\n                            <option selected>Please Select Scheme/Product</option>\r\n                                {\r\n                                    this.state.MTServices?\r\n                                    this.state.MTServices.map(MTService=>{\r\n                                        return <option key={MTService.id}>{MTService.name}</option>\r\n                                    }):\r\n                                    <option selected>Wait We are trying to Load Your Providing Services</option>\r\n                                }\r\n                            </select>\r\n                    </div>\r\n                    <hr/>\r\n                    <div class=\"form-group \">\r\n                        <label for='GetAmountPayable'>Total Amount Payable:</label>\r\n                        <input ref={this.amountInputRef} type='number' class=\"form-control\" onChange={this.ReadyUser} name='GetAmountPayable'/>\r\n                    </div>\r\n                    <TbInputControl DataInputHandler={this.ReadyUser} Name={'Monthly Installment'} inutType={'number'} ctrlName={'GetMonthlyInstallment'} />\r\n                    <button className=\"btn btn-success\" onClick={this.PostData}>Add User to this Sceme</button>\r\n                </div>\r\n            </AdminLayout>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default AttachWithNewScheme;","G:\\Projects\\Malik Traders\\Admin Control\\MT Admin Control App\\src\\MalikTraders\\Components\\Pages\\UserManagement\\UserManagement.jsx",[],"G:\\Projects\\Malik Traders\\Admin Control\\MT Admin Control App\\src\\MalikTraders\\Components\\Pages\\UserManagement\\CreateUser\\CreateUser.jsx",[],"G:\\Projects\\Malik Traders\\Admin Control\\MT Admin Control App\\src\\MalikTraders\\Components\\Pages\\AccountManagement\\ModifyPayment\\ModifyPayment.jsx",[],"G:\\Projects\\Malik Traders\\Admin Control\\MT Admin Control App\\src\\MalikTraders\\Components\\Pages\\AccountManagement\\ShowAccountDetails.jsx",["171","172","173"],"import axios from \"axios\";\r\nimport { Component } from \"react\";\r\nimport { Redirect } from \"react-router\";\r\nimport AdminLayout from \"../../AdminLayout/AdminLayout\";\r\nimport PaymentDetails from \"./DisplayPaymentDetails/PaymentDetails\";\r\nimport AccountCard from \"./UI/AccountCard\";\r\nimport Axios from \"axios\"\r\nimport Cookie from 'universal-cookie/es6';\r\nimport { Spinner } from 'react-bootstrap';\r\n\r\nclass AccountDetails extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            Accounts:null,\r\n            Schemes: null,\r\n            DisplayAcc: null,\r\n            AccId: 0,\r\n            gotoHistoryPaymentRedirect: null,\r\n            isLogin: true\r\n        }\r\n    }\r\n\r\n    gotoHistoryPaymentRedirectHandler=(AccId)=>{\r\n        this.setState({gotoHistoryPaymentRedirect: {\r\n            AccId: AccId,\r\n            redir: true \r\n        }})\r\n    }\r\n    AccountEnableHandler =(AccId)=>{\r\n        \r\n        var ClosingDescription = window.prompt(\"what is the reason of Enabling Account\");\r\n        if(ClosingDescription !== null)\r\n        if(window.confirm('Attention Please! ' + 'Opration Defination: Are you sure you want to --Enable-- this account'))\r\n        {\r\n            Axios.put(window.$domain + 'api/Accounts/DisableAndEnableHandler/' + AccId + '?ClosingDescription=' + ClosingDescription)\r\n                .then(resp=> {\r\n                    console.log(resp);\r\n                })\r\n                .catch(resp=> console.log(resp));\r\n            this.setState({Accounts: null});\r\n        }\r\n    }\r\n    AccountDisableHandler =(AccId)=>{\r\n        \r\n        var ClosingDescription = window.prompt(\"what is the reason of Disabling Account\");\r\n        if(ClosingDescription !== null)\r\n        if(window.confirm('Attention Please! ' + 'Opration Defination: Are you sure you want to disable this account'))\r\n        {\r\n            Axios.put(window.$domain + 'api/Accounts/DisableAndEnableHandler/' + AccId + '?ClosingDescription=' + ClosingDescription)\r\n                .then(resp=> {\r\n                    console.log(resp);\r\n                })\r\n                .catch(resp=> console.log(resp));\r\n                this.setState({Accounts: null});\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        if(this.state.Accounts === null){\r\n            axios.get(window.$domain + 'api/Accounts/GetAccountbyUserId/' + this.props.match.params.id)\r\n            .then(\r\n                resp=>{\r\n                    this.setState({Accounts: resp.data});\r\n                }\r\n            )\r\n            axios.get(window.$domain + 'api/MTServices')\r\n            .then(\r\n                resp=>{\r\n                    this.setState({Schemes: resp.data});\r\n                }\r\n            )\r\n            \r\n        }\r\n        var cookies = new Cookie();\r\n        if(cookies.get('logedInUser') === undefined)\r\n        {\r\n            this.setState({isLogin: false});\r\n        }\r\n    }\r\n    componentDidUpdate(){\r\n        if(this.state.Accounts === null){\r\n            axios.get(window.$domain + 'api/Accounts/GetAccountbyUserId/' + this.props.match.params.id)\r\n            .then(\r\n                resp=>{\r\n                    this.setState({Accounts: resp.data});\r\n                }\r\n            )\r\n            axios.get(window.$domain + 'api/MTServices')\r\n            .then(\r\n                resp=>{\r\n                    this.setState({Schemes: resp.data});\r\n                }\r\n            )\r\n        }\r\n    }\r\n\r\n    paymentDisplayHandler = (Accid)=>{\r\n        this.state.Accounts.map(\r\n            Account => {\r\n                if(Account.id === Accid ){\r\n                    this.setState({DisplayAcc: Account.accPaymentDetails});\r\n                    this.setState({AccId: Accid})\r\n                }\r\n            }\r\n        )\r\n    }\r\n    render(){\r\n        console.log(this.props.match.params.id)\r\n        return(\r\n            <AdminLayout>\r\n                {this.state.isLogin?'':<Redirect to='/login'/>}\r\n                {this.state.gotoHistoryPaymentRedirect=== null? '':<Redirect to={'/Accounts/' + this.state.gotoHistoryPaymentRedirect.AccId + '/Payment'} /> }\r\n                <div className='jumbotron mt-3'>\r\n                    <div className='row'>\r\n                        <div className='col-md-3'>\r\n                            <h5 style={{textAlign: 'center'}}>Participated Schemes</h5>\r\n                            {\r\n                                this.state.Schemes !== null && this.state.Accounts !== null ?this.state.Accounts.map(\r\n                                    Account => this.state.Schemes.map(\r\n                                        Scheme=> Scheme.id === Account.mtServiceId ? <AccountCard \r\n                                                                                        schemeName={Scheme.name} \r\n                                                                                        desc={Scheme.details} \r\n                                                                                        AccId={Account.id} \r\n                                                                                        paymentDisplayHandler ={this.paymentDisplayHandler}\r\n                                                                                        gotoPaymentHistory= {this.gotoHistoryPaymentRedirectHandler}\r\n                                                                                        isAccClosed= {Account.isAccClosed}\r\n                                                                                        disableAcc={this.AccountDisableHandler}\r\n                                                                                        closingReason={Account.closingDescription}\r\n                                                                                        enableAcc={this.AccountEnableHandler}/>: ''\r\n                                    ) \r\n                                ):  <div className='m-5'><Spinner animation=\"grow\" /></div>\r\n                            }\r\n                        </div>\r\n                        <div className='col-md-9'>\r\n                            <h5 style={{textAlign: 'center'}}>Account Payment Details</h5>\r\n                            {\r\n                                this.state.DisplayAcc? \r\n                                <PaymentDetails peymentHistory={this.state.DisplayAcc} AccId = {this.state.AccId}/>\r\n                                :'Please select a Scheme'\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </AdminLayout>\r\n        );\r\n    }\r\n}\r\nexport default AccountDetails;\r\n\r\n","G:\\Projects\\Malik Traders\\Admin Control\\MT Admin Control App\\src\\MalikTraders\\Components\\Pages\\Login\\Login.jsx",["174"],"import React from 'react';\r\nimport { Component } from 'react';\r\nimport Cookie from 'universal-cookie/es6';\r\nimport Axios from \"axios\"\r\nimport { Redirect } from \"react-router\";\r\nimport { Spinner } from 'react-bootstrap';\r\n\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            user: '',\r\n            password: '',\r\n            login: false,\r\n            displayAnimator: false\r\n        };\r\n    this.loginUser = this.loginUser.bind(this);\r\n    }\r\n    \r\n    loginUser=()=>{\r\n        this.setState({displayAnimator: true})\r\n        Axios.post(window.$domain + 'api/Users/LoginUser?UserName='+ this.state.user + '&Password='+ this.state.password )\r\n        .then(resp=>{\r\n            if(resp.data.role !== 'admin' ) \r\n            {\r\n                alert('Your are not authorize for operating Admin Control');\r\n                return ;\r\n            }\r\n            Axios.post(window.$domain + 'api/Users/GetUserDatailsId/'+ resp.data.id )\r\n                .then(\r\n                    resp=>\r\n                    {\r\n                        \r\n                        Axios.post(window.$domain + 'api/UserDetails/UpdateLastLogin/'+ resp.data )\r\n                        .then(\r\n                            resp=>\r\n                            {\r\n                                alert('You are logged in successfully')\r\n                            });\r\n                    });\r\n            var cookies = new Cookie();\r\n            cookies.set('logedInUser', {\r\n                userName: resp.data.userName,\r\n                email: resp.data.email, \r\n                role: resp.data.role, \r\n                id: resp.data.id\r\n                }, \r\n                {\r\n                path: '/',\r\n                maxAge: 3600\r\n              });\r\n              this.setState({login: true});\r\n              this.setState({displayAnimator: false})\r\n        })\r\n        .catch(\r\n            err=>{\r\n                if(err)\r\n                alert(err.message + ': Check Internet Connection or Contact Database Admin');\r\n                this.setState({displayAnimator: false});\r\n            });\r\n    }\r\n    componentDidMount(){\r\n        var cookies = new Cookie();\r\n        if(cookies.get('logedInUser') !== undefined && this.state.login === false){\r\n            this.setState({login: true});\r\n        }\r\n    }\r\n    render(){\r\n        return (\r\n            <div className=\"container mt-4\" style={{width: \"80%\"}}>\r\n                {this.state.login? this.props.history.goBack():''}\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-3 col-md-2\"></div>\r\n                    <div className=\"col-lg-6 col-md-8 login-box\">\r\n                        \r\n                        <div className=\"col-lg-12 login-title \">\r\n                            \r\n                            <p style={{textAlign: 'center'}}>\r\n                                <i className=\"fa fa-key\" aria-hidden=\"true\"></i> \r\n                                -Login\r\n                            </p>\r\n                        </div>\r\n                        <div className=\"col-lg-12 login-form\">\r\n                            <div className=\"col-lg-12 login-form\">\r\n                                <form onSubmit>\r\n                                    <div className=\"form-group\">\r\n                                        <label className=\"form-control-label\">UserName</label>\r\n                                        <input onChange={event=> this.setState({user: event.target.value})} type=\"text\" className=\"form-control\" />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label className=\"form-control-label\">Password</label>\r\n                                        <input onChange={event=> this.setState({password: event.target.value})} type=\"password\" className=\"form-control\" ></input>\r\n                                    </div>\r\n                                    <div className=\"col-lg-12 loginbttm\">\r\n                                        {\r\n                                            this.state.displayAnimator ? <Spinner animation=\"grow\" />\r\n                                            : <div className=\"col-lg-6 login-btn login-button\">\r\n                                                <button onClick={this.loginUser} className=\"btn btn-outline-primary btn-light\" style={{alignContent: \"center\"}}>\r\n                                                    Login\r\n                                                </button>\r\n                                            </div>\r\n                                        }\r\n                                        \r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-lg-3 col-md-2\">\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nexport default Login;","G:\\Projects\\Malik Traders\\Admin Control\\MT Admin Control App\\src\\MalikTraders\\Components\\Pages\\ProductManager\\ProductManager.jsx",["175"],"import { Component } from \"react\";\r\nimport AdminLayout from \"../../AdminLayout/AdminLayout\";\r\nimport Axios from \"axios\";\r\nimport {Link} from 'react-router-dom';\r\nimport Cookie from 'universal-cookie';\r\nimport { Redirect } from \"react-router\";\r\n\r\nclass ProductManager extends Component{\r\n    state = {\r\n        mtServices: null,\r\n        isLogin: true\r\n    }\r\n    \r\n\r\n    componentDidMount(){\r\n        if(this.state.mtServices===null){\r\n            Axios.get(window.$domain + 'api/MTServices').then(\r\n                resp=>{\r\n                    this.setState({mtServices: resp.data});\r\n                }\r\n            ).catch(\r\n                err=>{\r\n                    alert('Page: Product Load =>'+ err)\r\n                }\r\n            )\r\n        }\r\n        var cookies = new Cookie();\r\n        if(cookies.get('logedInUser') === undefined)\r\n        {\r\n            this.setState({isLogin: false});\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <AdminLayout>\r\n                {/* {this.state.isLogin?'':<Redirect to='/login'/>} */}\r\n                <div className='jumbotron'>\r\n                    <h3>Manage Products/Schemes</h3>\r\n                    <div className='row m-1 overflow-auto'>\r\n                        <table className=\"table shadow table-bordered \">\r\n                            <thead>\r\n                                <tr >\r\n                                    <th>Id</th>\r\n                                    <th>Name</th>\r\n                                    <th>Total Amount</th>\r\n                                    <th>Details</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                            {\r\n                                this.state.mtServices?\r\n                                this.state.mtServices.map(service=>{\r\n                                    return  <tr>\r\n                                                <td>{service.id}</td>\r\n                                                <td>{service.name}</td>\r\n                                                <td>{service.amount}</td>\r\n                                                <td>{service.details}</td>\r\n                                            </tr>\r\n                                }):'we are loading data from server'\r\n                            }\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                    <Link className='btn btn-success shadow' to='/AddProduct' >Add More Product</Link>\r\n                </div>\r\n            </AdminLayout>\r\n\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default ProductManager;","G:\\Projects\\Malik Traders\\Admin Control\\MT Admin Control App\\src\\MalikTraders\\Components\\Pages\\AccountManagement\\PaymentHistory\\PaymentHistory.jsx",["176","177","178","179"],"import React,{ Component } from \"react\";\r\nimport AdminLayout from \"../../../AdminLayout/AdminLayout\";\r\nimport axios from 'axios';\r\nimport Cookie from 'universal-cookie';\r\nimport { Redirect } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Spinner } from \"react-bootstrap\";\r\n\r\nclass PaymentHistory extends Component{\r\n   \r\n    constructor(props) {\r\n        super(props);\r\n        this.state =  {\r\n            historyList: [],\r\n            isLogin: true,\r\n            goneToPrint: false,\r\n            searchQuery: {\r\n                startDate: null,\r\n                endDate: null\r\n            },\r\n            queryExecuted: false\r\n        };\r\n        this.queryDataLoader = this.queryDataLoader.bind(this);\r\n    }\r\n    componentDidMount(){\r\n        if(this.state.historyList.length === 0)\r\n        {\r\n            axios.get(window.$domain + 'api/AccDetails/GetAccDetailsbyAccountId/' + this.props.match.params.id)\r\n            .then(\r\n                resp=>{\r\n                        resp.data.map(\r\n                            payment => {\r\n                                axios.get(window.$domain + 'api/Users/' + payment.postedByUserId).then(\r\n                                    user=>{\r\n                                        var arrayHistory = [];\r\n                                        arrayHistory = this.state.historyList;\r\n                                        arrayHistory.push(\r\n                                            {\r\n                                                payDate: payment.payingDate, \r\n                                                paymentId: payment.id,\r\n                                                payedAmount: payment.payedAmount,\r\n                                                PostedByUser: user.data.userName\r\n                                            });\r\n                                        this.setState({historyList: arrayHistory});\r\n                                    }\r\n                                )\r\n                            }\r\n                    );\r\n                }\r\n            ).catch(\r\n                err=> {\r\n                    console.log(err);\r\n                }\r\n            )\r\n        }\r\n        var cookies = new Cookie();\r\n        if(cookies.get('logedInUser') === undefined)\r\n        {\r\n            this.setState({isLogin: false});\r\n        }\r\n    }\r\n    printModeHandler = ()=>{\r\n        this.setState({goneToPrint: !this.state.goneToPrint});\r\n    }\r\n    searchByDateTime = (event)=>{\r\n        if(event.target.name === 'Start-Date'){\r\n            this.setState({searchQuery: {\r\n                startDate: new Date(event.target.value).toLocaleDateString(),\r\n                endDate: this.state.searchQuery.endDate\r\n            }});\r\n        }\r\n        if(event.target.name === 'End-Date'){\r\n            this.setState({searchQuery: {\r\n                startDate: this.state.searchQuery.startDate,\r\n                endDate: new Date(event.target.value).toLocaleDateString()\r\n            }});\r\n        }\r\n    }\r\n    queryDataLoader(){\r\n        \r\n            if(this.state.searchQuery.startDate !== null \r\n                && this.state.searchQuery.endDate !== null)\r\n            {\r\n                this.setState({historyList: []});\r\n                axios.post(window.$domain + 'api/AccDetails/GetAccountDetailsByGivenMonth/' \r\n            + this.props.match.params.id \r\n            + '?StartDate=' + this.state.searchQuery.startDate \r\n            + '&EndDate=' + this.state.searchQuery.endDate)\r\n                .then(\r\n                    resp=>{\r\n                            resp.data.map(\r\n                                payment => {\r\n                                    axios.get(window.$domain + 'api/Users/' + payment.postedByUserId).then(\r\n                                        user=>{\r\n                                            var arrayHistory = [];\r\n                                            arrayHistory = this.state.historyList;\r\n                                            arrayHistory.push(\r\n                                                {\r\n                                                    payDate: payment.payingDate, \r\n                                                    paymentId: payment.id,\r\n                                                    payedAmount: payment.payedAmount,\r\n                                                    PostedByUser: user.data.userName\r\n                                                });\r\n                                            this.setState({historyList: arrayHistory});\r\n                                        }\r\n                                    )\r\n                                }\r\n                        );\r\n                    }\r\n                ).catch(\r\n                    err=> {\r\n                        console.log(err);\r\n                    }\r\n                )\r\n            }\r\n    }\r\n    render(){\r\n        return(\r\n            <AdminLayout>\r\n                {this.state.isLogin?'':<Redirect to='/login'/>}\r\n                {!this.state.goneToPrint?\r\n                <div className=\"jumbotron container-fluid overflow-auto\" >\r\n                    <h2>Payment History</h2>\r\n                    <label for=\"StartMonth\">Start Month:</label>\r\n                    <input className='shadow form-control  ml-1' type=\"date\" id=\"StartMonth\" name=\"Start-Date\"\r\n                    defaultValue = '2021-10' onChange={this.searchByDateTime}></input>\r\n                    <label for=\"End-Month\">End Month:</label>\r\n                    <input className='shadow form-control ml-1' type=\"date\" id=\"start\" name=\"End-Date\"\r\n                      onChange={this.searchByDateTime}></input>\r\n                    <div className='row'>\r\n                    <button className='btn btn-light mt-2'  style={{marginLeft: 'auto', marginRight: '5px'}}\r\n                      onClick={this.queryDataLoader}>Search</button>\r\n                    </div>\r\n                    {\r\n                        this.state.historyList !== null ?\r\n                        <DisplayHistory  \r\n                        paymentHistoryList= {this.state.historyList} \r\n                        AccID={this.props.match.params.id}\r\n                        isPrintable= {false}\r\n                         />\r\n                        : <Spinner animation=\"grow\" />\r\n                    }\r\n                    <button onClick={()=>this.setState({goneToPrint: true})} className='btn btn-primary'>Print</button>\r\n            </div>\r\n            :<DisplayHistory backToAppMode={this.printModeHandler}  isPrintable= {true}  paymentHistoryList= {this.state.historyList} AccID={this.props.match.params.id} />}\r\n            </AdminLayout>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nexport class DisplayHistory extends Component {\r\n    state = {\r\n        redirect: false,\r\n        sum: 0\r\n    }\r\n    componentDidMount(){\r\n        this.updateComponent();\r\n    }\r\n    componentDidUpdate(){\r\n        this.updateComponent();\r\n    }\r\n    updateComponent=()=>{\r\n        if(this.props.paymentHistoryList.length > null && this.state.sum === 0)\r\n        {\r\n            var sum=0;\r\n            this.props.paymentHistoryList.map(payment=>{\r\n                sum=sum+payment.payedAmount;\r\n            })\r\n            this.setState({sum: sum});\r\n        }\r\n    }\r\n    printPage(){\r\n        window.print();\r\n        this.props.backToAppMode();\r\n    }\r\n    render() {\r\n      return (\r\n        <div className='m-2'>\r\n        {\r\n           this.props.isPrintable? <>\r\n            <h4>Total Paid Amount: PKR {this.state.sum}</h4>\r\n            <h5>Scheme ID: {this.props.AccID}</h5>\r\n            </>:''\r\n        }\r\n        <table className='table '>\r\n         <thead>\r\n            <tr >\r\n                <th>Date -- Time</th>\r\n                <th>Payment</th>\r\n                <th>Payment Received By</th>\r\n                {this.props.isPrintable?'':<th>Amount Modification</th>}\r\n            </tr>\r\n        </thead>\r\n          <tbody>\r\n          {this.props.paymentHistoryList?\r\n          this.props.paymentHistoryList.map(payment=>{\r\n                return <tr>\r\n                            <td>{new Date(payment.payDate).toDateString() + ' -- ' + new Date(payment.payDate).toLocaleTimeString() }</td>\r\n                            <td>{payment.payedAmount}</td>\r\n                            <td>{payment.PostedByUser}</td>\r\n                            {this.props.isPrintable?'':<td><Link to={'/account/payment/modification/' + payment.paymentId}>modify</Link></td>}\r\n                    </tr>\r\n                })\r\n                :''}\r\n          </tbody>\r\n        </table>\r\n        {this.props.isPrintable?\r\n        <a onClick={()=>this.printPage()} style={{cursor: 'pointer', color: \"white\", backgroundColor: 'gray'}} >Print Out</a>:''}\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n\r\nexport default PaymentHistory;\r\n","G:\\Projects\\Malik Traders\\Admin Control\\MT Admin Control App\\src\\MalikTraders\\Components\\Pages\\ProductManager\\AddNewProduct\\AddNewProduct.jsx",[],"G:\\Projects\\Malik Traders\\Admin Control\\MT Admin Control App\\src\\Store\\User\\ActionTypes.js",[],"G:\\Projects\\Malik Traders\\Admin Control\\MT Admin Control App\\src\\MalikTraders\\Components\\AdminLayout\\AdminLayout.jsx",[],"G:\\Projects\\Malik Traders\\Admin Control\\MT Admin Control App\\src\\MalikTraders\\Components\\DashBoard\\MainDashBoard.jsx",[],"G:\\Projects\\Malik Traders\\Admin Control\\MT Admin Control App\\src\\MalikTraders\\Components\\Pages\\AccountManagement\\DisplayPaymentDetails\\PaymentDetails.jsx",[],"G:\\Projects\\Malik Traders\\Admin Control\\MT Admin Control App\\src\\MalikTraders\\Components\\Pages\\UserManagement\\UI\\TbInputControl.jsx",[],"G:\\Projects\\Malik Traders\\Admin Control\\MT Admin Control App\\src\\MalikTraders\\Components\\Pages\\AccountManagement\\UI\\AccountCard.jsx",["180"],"\r\nimport { useState } from 'react';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport styles from './CardStyling.module.css'; \r\n  console.log(styles)\r\nconst AccountCard= props =>{\r\n    var [showToast,setShowtoast] = useState(false);\r\n    var toastAccountClose=toast(props.closingReason, {\r\n                                    position: \"top-right\",\r\n                                    autoClose: 10000,\r\n                                    hideProgressBar: false,\r\n                                    closeOnClick: true,\r\n                                    pauseOnHover: true,\r\n                                    draggable: true,\r\n                                    progress: undefined,\r\n                                    });\r\n    return(\r\n        <div class=\"card shadow m-2\" style={{width: '12rem'}}>\r\n            {showToast? <ToastContainer/>: ''}\r\n            <div class=\"card-body\">\r\n                <h5 class=\"card-title\">{props.schemeName}</h5>\r\n                <p class=\"card-text\">{props.desc}</p>\r\n                {props.isAccClosed? '':<button onClick={()=>props.paymentDisplayHandler(props.AccId)} class=\"btn btn-success\">Pay Installment</button>}\r\n                <button onClick={()=>{props.gotoPaymentHistory(props.AccId)}} className='btn btn-info mt-1'>Edit History</button>\r\n                {props.isAccClosed? '' :<button onClick={()=>{props.disableAcc(props.AccId)}} className='btn btn-danger mt-1'>Disable Account</button>}\r\n                {props.isAccClosed?<button onClick={()=>setShowtoast(!showToast)} className='btn btn-primary mt-1'>Show Reason</button> :''}\r\n            </div>\r\n            {props.isAccClosed? <span onClick={props.isAccClosed?()=>props.enableAcc(props.AccId):''} class={\"badge badge-danger \" + styles.zoom} > <i  class=\"fa fa-lock\" aria-hidden=\"true\"></i></span>:<span class= {\"badge badge-success \" + styles.zoom}> <i  class=\"fa fa-check\" aria-hidden=\"true\"></i></span>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AccountCard;","G:\\Projects\\Malik Traders\\Admin Control\\MT Admin Control App\\src\\MalikTraders\\Components\\Pages\\ProductManager\\UI\\TbInput.jsx",[],"G:\\Projects\\Malik Traders\\Admin Control\\MT Admin Control App\\src\\MalikTraders\\Components\\Pages\\UserManagement\\UserList\\AllUserList.jsx",["181","182","183","184"],"import { Component } from \"react\";\r\nimport Axios from \"axios\"\r\nimport {Link} from 'react-router-dom'\r\n\r\nimport { Spinner } from 'react-bootstrap';\r\nclass UserList extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          userList: [],\r\n          shopAcc: []\r\n        };\r\n    this.LoadUserList = this.LoadUserList.bind(this);\r\n    }\r\n\r\n     LoadUserList=(event)=>{\r\n        if(event === undefined)\r\n        Axios.get(window.$domain + 'api/Users').then(\r\n            resp=>{\r\n                this.setState({userList: []});\r\n                this.setState({userList: resp.data});\r\n                resp.data.map(\r\n                    userResp=>{\r\n                        Axios.get(window.$domain + 'api/ShopAccounts/ShopAccountExistsByUserId/' + userResp.id)\r\n                        .then(accResp=>{  \r\n                            var newArray = this.state.shopAcc;\r\n                            newArray.push({userId: userResp.id,isAcc: accResp.data});\r\n                            this.setState({shopAcc: newArray});\r\n                        })\r\n                        .catch(resp=>resp.data.message); \r\n                    }\r\n                )\r\n            }\r\n        ).catch(\r\n            err=>{\r\n                alert('Page:manageuser =>'+err)\r\n            }\r\n        )\r\n        else if(event.target.name === 'SearchByCnic' && event.target.value !== '' ){\r\n            Axios.get(window.$domain + 'api/Users/SearchUserbyCNIC/' + event.target.value).\r\n            then(\r\n                resp=>{\r\n                    this.setState({userList: resp.data});\r\n                }\r\n            ).catch(\r\n                err=>{\r\n                    alert('Page: Manage User =>'+err)\r\n                }\r\n            )\r\n        }\r\n        else if(event.target.name === 'SearchByName' && event.target.value !== ''){\r\n            Axios.get(window.$domain + 'api/Users/SearchUserbyName/' + event.target.value).\r\n            then(\r\n                resp=>{\r\n                    this.setState({userList: resp.data});\r\n                }\r\n            ).catch(\r\n                err=>{\r\n                    alert('Page: Manage User =>'+err)\r\n                }\r\n            )\r\n        }\r\n        console.log(this.state.shopAcc);\r\n    }\r\n    UserEnableandDisableHandler = (userId)=>\r\n    {\r\n        if(window.confirm('Attention Please! ' + 'Opration Defination: If Your User is Enabled turn Disabled if Disabled turn Enabled.'))\r\n        {\r\n            Axios.post(window.$domain + 'api/Users/UserAccountEnableandDisableHandler/' + userId)\r\n                .then(resp=> {\r\n                    console.log(resp);\r\n                    this.LoadUserList();\r\n                })\r\n                .catch(resp=> console.log(resp));\r\n            \r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        if(this.state.userList.length === 0)\r\n        this.LoadUserList();\r\n        \r\n    }\r\n    getAccState=userId=>{\r\n        var is= null;\r\n       for(let  i= 0;i<this.state.shopAcc.length;i++){\r\n            if(this.state.shopAcc[i].userId === userId)\r\n            {\r\n                is=this.state.shopAcc[i].isAcc;\r\n                break;\r\n            }\r\n       } \r\n       return is;\r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"jumbotron container-fluid overflow-auto\">\r\n               <div className='row ml-2'>\r\n                    <div class=\"form-group ml-1\">\r\n                        <label>Search by CNIC Number:</label>\r\n                        <input  type='text' class=\"form-control shadow\" onChange={this.LoadUserList} name='SearchByCnic'/>\r\n                    </div>\r\n                    <div class=\"form-group ml-1\">\r\n                        <label>Search by Name:</label>\r\n                        <input  type='text' class=\"form-control shadow\" onChange={this.LoadUserList} name='SearchByName'/>\r\n                    </div>\r\n               </div>\r\n                <h3>Users</h3>\r\n                <div className='row shadow overflow-auto m-1'>\r\n                <table className=\"table  table-bordered \">\r\n                    <thead>\r\n                        <tr >\r\n                            <th>System Id</th>\r\n                            <th>Role</th>\r\n                            <th>Name</th>\r\n                            <th>Accounts Details</th>\r\n                            <th>Add to new Scheme</th>\r\n                            <th>Shop Acc.</th>\r\n                            <th>Gender</th>\r\n                            <th>User Name</th>\r\n                            <th>Email</th>\r\n                            <th>Phone Number</th>\r\n                            <th>CNIC</th>\r\n                            <th >Last Login (DayName/Month/Day/Year) </th>\r\n                            <th>Registration Date (DayName/Month/Day/Year)</th>\r\n                            <th>User Enabled</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            this.state.userList.length > 0 ?\r\n                            this.state.userList.map(user=>{\r\n                                var isAcc=this.getAccState(user.id);\r\n                                \r\n                                return <tr key={user.id}>\r\n                                    <td>{user.id}</td>\r\n                                    <td>{user.role}</td>\r\n                                    <td>{user.name}</td>\r\n                                    <td>\r\n                                        {user.role==='admin'?'':<Link to={'/ShowAccountDetails/'+ user.id} >Show</Link>}\r\n                                    </td>\r\n                                    <td>\r\n                                        {user.role==='admin'?'':<Link to={'/User/'+ user.id + '/AddtoNewScheme'} >Add</Link>}\r\n                                    </td>\r\n                                    <td>\r\n                                        {user.role !== 'admin' ? isAcc  ? \r\n                                        <Link to={'/user/'+ user.id+'/shop'} >Go</Link>:\r\n                                        <Link to={'/user/' + user.id + '/create-shop-account'}  >Create</Link>\r\n                                        :''}\r\n                                    </td>\r\n                                    <td>{user.gender}</td>\r\n                                    <td>{user.userName}</td>\r\n                                    <td>{user.email}</td>\r\n                                    <td>{user.phoneNumber}</td>\r\n                                    <td>{user.cnic}</td>\r\n                                    <td>{new Date(user.lastLogin).toDateString() + ' ' \r\n                                     + new Date(user.lastLogin).toLocaleTimeString() }</td>\r\n                                    <td>{new Date(user.registration_Date).toDateString()}</td>\r\n                                    <td onClick={()=> this.UserEnableandDisableHandler(user.id)}>\r\n                                        {user.isUserDisabled? \r\n                                        <i  class=\"fa fa-lock\" aria-hidden=\"true\"></i> :\r\n                                        <i class=\"fa fa-check\" aria-hidden=\"true\"></i>}\r\n                                    </td>\r\n                                </tr>\r\n                            }): <Spinner animation=\"grow\"  /> \r\n                        }\r\n                    </tbody>\r\n                </table>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UserList;","G:\\Projects\\Malik Traders\\Admin Control\\MT Admin Control App\\src\\MalikTraders\\Components\\NavBar\\NavBar.jsx",[],"G:\\Projects\\Malik Traders\\Admin Control\\MT Admin Control App\\src\\MalikTraders\\Components\\DashBoard\\DashBoardNavigator\\DashBoardNavigator.jsx",[],"G:\\Projects\\Malik Traders\\Admin Control\\MT Admin Control App\\src\\MalikTraders\\Components\\DashBoard\\MonthlyRecoveryReport\\MonthlyRecoveryReport.jsx",[],"G:\\Projects\\Malik Traders\\Admin Control\\MT Admin Control App\\src\\MalikTraders\\Components\\DashBoard\\TodayRecovery\\TodayRecovery.jsx",["185","186"],"import axios from 'axios';\r\nimport {Component} from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nclass TodayRecovery extends Component {\r\n\r\n    state= {\r\n        dataArray: [],\r\n        recoverySum: 0\r\n    }\r\n\r\n    loadData = ()=>{\r\n        axios.get(window.$domain + 'api/Analatics/GetTodayRecovery')\r\n        .then(resp=>{\r\n            this.setState({dataArray: resp.data});\r\n            this.state.dataArray.map(\r\n              data=>{\r\n                this.setState({recoverySum: this.state.recoverySum + data.payed_Amount});\r\n              }\r\n            )\r\n        });\r\n    }\r\n    componentDidMount(){\r\n        if(this.state.dataArray.length === 0)\r\n        this.loadData();\r\n        \r\n    }\r\n    render(){\r\n      var sum = 0;\r\n        return <>\r\n          <div class=\"card  shadow h-30 py-1\">\r\n            <div class=\"card-body\">\r\n                <div class=\"row no-gutters align-items-center\">\r\n                    <div class=\"col mr-2\">\r\n                        <div class=\"text-xs font-weight-bold text-primary text-uppercase mb-1\">\r\n                            Gain Recovery (Today)</div>\r\n                        <div class=\"h5 mb-0 font-weight-bold text-gray-800\">PKR{' '+this.state.recoverySum}</div>\r\n                    </div>\r\n                    <div class=\"col-auto\">\r\n                        <i class=\"fas fa-calendar fa-2x text-gray-300\"></i>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n          </div>\r\n          <table class=\"table shadow table-bordered\">\r\n            <thead>\r\n              <tr>\r\n                <th >Client Name</th>\r\n                <th >Phone</th>\r\n                <th >Payed Amount</th>\r\n                <th >Scheme Name</th>\r\n                <th >Payment Time</th>\r\n                <th >Show Account</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {\r\n                  this.state.dataArray.length !== 0 ? this.state.dataArray.map(\r\n                    data =>{\r\n                    return  <tr>\r\n                                  <th>{data.name}</th>\r\n                                  <td>{data.phone}</td>\r\n                                  <td>{data.payed_Amount}</td>\r\n                                  <td>{data.scheme}</td>\r\n                                  <td>{data.pay_Time}</td>\r\n                                  <td><Link to={'/Accounts/'+ data.accId +'/Payment'}>show</Link></td>\r\n                              </tr>}\r\n                ): ''\r\n              }\r\n            </tbody>\r\n          </table>\r\n        </>\r\n    }\r\n}\r\n\r\nexport default TodayRecovery;","G:\\Projects\\Malik Traders\\Admin Control\\MT Admin Control App\\src\\MalikTraders\\Components\\DashBoard\\MonthlyReport\\MonthlyReport.jsx",[],"G:\\Projects\\Malik Traders\\Admin Control\\MT Admin Control App\\src\\MalikTraders\\Components\\Pages\\UserManagement\\AddNewPayment\\AddNewPayment.jsx",["187"],"import axios from \"axios\";\r\nimport { Component } from \"react\";\r\nimport { Redirect } from \"react-router\";\r\nimport AdminLayout from \"../../../AdminLayout/AdminLayout\";\r\nimport TbInputControl from \"../UI/TbInputControl\";\r\nimport Cookie from 'universal-cookie'\r\nclass AddNewPayment extends Component{\r\n    state = {\r\n        amount: 0,\r\n        redirect: false\r\n    }\r\n    ReadyUser = event =>{\r\n        if(event.target.value > 0)\r\n            this.setState({amount: event.target.value})\r\n    }\r\n    postPaymnet= ()=>{\r\n        var cookies = new Cookie();\r\n        axios.post(\r\n            window.$domain + 'api/AccDetails',\r\n            {\r\n                \"id\": 0,\r\n                \"payedAmount\": this.state.amount,\r\n                \"payingDate\": \"2021-09-27T22:15:41.611Z\",\r\n                \"accId\": this.props.Accid,\r\n                \"postedByUserId\": cookies.get('logedInUser').id\r\n            }\r\n        ).then(\r\n            resp=>{\r\n                console.log(resp)\r\n                this.setState({redirect: true});\r\n            }\r\n        )\r\n    }\r\n    render(){\r\n        return(\r\n                <div className=\"jumbotron mt-3\">\r\n                    {\r\n                        this.state.redirect ? <Redirect to={'/Accounts/'+this.props.Accid+'/Payment'} />: ''\r\n                    }\r\n                    <h3>Add Payment</h3>\r\n                    <hr/>\r\n                    <h5>Please fill this form carefully, This transection is ir-revercible</h5>\r\n                    <hr/>\r\n                    <TbInputControl DataInputHandler={this.ReadyUser} Name={'Payment'} inutType={'number'} ctrlName={'Add Payment'} />\r\n                    <button onClick={this.postPaymnet} className='btn btn-success'>Post Amount</button>\r\n                </div>\r\n        )\r\n    }\r\n}\r\nexport default AddNewPayment;","G:\\Projects\\Malik Traders\\Admin Control\\MT Admin Control App\\src\\MalikTraders\\Components\\DashBoard\\MonthlyReport\\MonthlyReportChart.jsx",[],"G:\\Projects\\Malik Traders\\Admin Control\\MT Admin Control App\\src\\MalikTraders\\Components\\NavBar\\ShopNav.jsx",[],"G:\\Projects\\Malik Traders\\Admin Control\\MT Admin Control App\\src\\MalikTraders\\Components\\Pages\\Shop\\Shop.jsx",[],"G:\\Projects\\Malik Traders\\Admin Control\\MT Admin Control App\\src\\MalikTraders\\Components\\AdminLayout\\ShopAdminLayout.jsx",[],"G:\\Projects\\Malik Traders\\Admin Control\\MT Admin Control App\\src\\MalikTraders\\Components\\Pages\\Shop\\HeaderBox\\HeaderBox.jsx",[],"G:\\Projects\\Malik Traders\\Admin Control\\MT Admin Control App\\src\\MalikTraders\\Components\\Pages\\Shop\\PaymentHistory\\PaymentHistory.jsx",[],"G:\\Projects\\Malik Traders\\Admin Control\\MT Admin Control App\\src\\MalikTraders\\Components\\Pages\\Shop\\NewTransection\\NewTransection.jsx",[],"G:\\Projects\\Malik Traders\\Admin Control\\MT Admin Control App\\src\\MalikTraders\\Components\\Pages\\Shop\\NewTransection\\TransectionTypeCheckBoxs.jsx",[],"G:\\Projects\\Malik Traders\\Admin Control\\MT Admin Control App\\src\\MalikTraders\\Components\\Pages\\Shop\\CreateShop\\CreateShop.jsx",[],{"ruleId":"188","replacedBy":"189"},{"ruleId":"190","replacedBy":"191"},{"ruleId":"192","severity":1,"message":"193","line":69,"column":9,"nodeType":"194","messageId":"195","endLine":90,"endColumn":17,"fix":"196"},{"ruleId":"197","severity":1,"message":"198","line":73,"column":34,"nodeType":"199","messageId":"200","endLine":73,"endColumn":36},{"ruleId":"192","severity":1,"message":"193","line":82,"column":21,"nodeType":"194","messageId":"195","endLine":85,"endColumn":34,"fix":"201"},{"ruleId":"197","severity":1,"message":"198","line":98,"column":26,"nodeType":"199","messageId":"200","endLine":98,"endColumn":28},{"ruleId":"202","severity":1,"message":"203","line":130,"column":57,"nodeType":"194","messageId":"204","endLine":130,"endColumn":58,"fix":"205"},{"ruleId":"206","severity":1,"message":"207","line":34,"column":48,"nodeType":"208","messageId":"209","endLine":34,"endColumn":49},{"ruleId":"206","severity":1,"message":"207","line":48,"column":48,"nodeType":"208","messageId":"209","endLine":48,"endColumn":49},{"ruleId":"197","severity":1,"message":"198","line":100,"column":21,"nodeType":"199","messageId":"200","endLine":100,"endColumn":23},{"ruleId":"210","severity":1,"message":"211","line":5,"column":10,"nodeType":"212","messageId":"213","endLine":5,"endColumn":18},{"ruleId":"210","severity":1,"message":"211","line":6,"column":10,"nodeType":"212","messageId":"213","endLine":6,"endColumn":18},{"ruleId":"197","severity":1,"message":"198","line":32,"column":37,"nodeType":"199","messageId":"200","endLine":32,"endColumn":39},{"ruleId":"197","severity":1,"message":"198","line":92,"column":41,"nodeType":"199","messageId":"200","endLine":92,"endColumn":43},{"ruleId":"197","severity":1,"message":"198","line":167,"column":54,"nodeType":"199","messageId":"200","endLine":167,"endColumn":56},{"ruleId":"214","severity":1,"message":"215","line":209,"column":9,"nodeType":"216","endLine":209,"endColumn":113},{"ruleId":"210","severity":1,"message":"217","line":9,"column":9,"nodeType":"212","messageId":"213","endLine":9,"endColumn":26},{"ruleId":"197","severity":1,"message":"198","line":23,"column":29,"nodeType":"199","messageId":"200","endLine":23,"endColumn":31},{"ruleId":"202","severity":1,"message":"203","line":40,"column":91,"nodeType":"194","messageId":"204","endLine":40,"endColumn":92,"fix":"218"},{"ruleId":"202","severity":1,"message":"203","line":52,"column":91,"nodeType":"194","messageId":"204","endLine":52,"endColumn":92,"fix":"219"},{"ruleId":"206","severity":1,"message":"207","line":67,"column":48,"nodeType":"208","messageId":"209","endLine":67,"endColumn":49},{"ruleId":"197","severity":1,"message":"198","line":18,"column":19,"nodeType":"199","messageId":"200","endLine":18,"endColumn":21},{"ruleId":"210","severity":1,"message":"220","line":30,"column":11,"nodeType":"212","messageId":"213","endLine":30,"endColumn":14},{"ruleId":"210","severity":1,"message":"221","line":4,"column":8,"nodeType":"212","messageId":"213","endLine":4,"endColumn":19},"no-native-reassign",["222"],"no-negated-in-lhs",["223"],"no-whitespace-before-property","Unexpected whitespace before property catch.","MemberExpression","unexpectedWhitespace",{"range":"224","text":"225"},"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",{"range":"226","text":"225"},"dot-location","Expected dot to be on same line as property.","expectedDotBeforeProperty",{"range":"227","text":"228"},"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'toastAccountClose' is assigned a value but never used.",{"range":"229","text":"228"},{"range":"230","text":"228"},"'sum' is assigned a value but never used.","'AdminLayout' is defined but never used.","no-global-assign","no-unsafe-negation",[3103,3105],".",[2961,2963],[4757,4772],"\r\n            .",[1493,1508],[1939,1954]]