[{"G:\\Projects\\Malik Traders\\Admin Control\\MT Admin Control App\\src\\index.js":"1","G:\\Projects\\Malik Traders\\Admin Control\\MT Admin Control App\\src\\reportWebVitals.js":"2","G:\\Projects\\Malik Traders\\Admin Control\\MT Admin Control App\\src\\App.js":"3","G:\\Projects\\Malik Traders\\Admin Control\\MT Admin Control App\\src\\Store\\Store.js":"4","G:\\Projects\\Malik Traders\\Admin Control\\MT Admin Control App\\src\\Store\\User\\Reducer.js":"5","G:\\Projects\\Malik Traders\\Admin Control\\MT Admin Control App\\src\\MalikTraders\\MalikTraderApp.jsx":"6","G:\\Projects\\Malik Traders\\Admin Control\\MT Admin Control App\\src\\MalikTraders\\Components\\Pages\\UserManagement\\AttachWithNewScheme\\AttachtoNewScheme.jsx":"7","G:\\Projects\\Malik Traders\\Admin Control\\MT Admin Control App\\src\\MalikTraders\\Components\\Pages\\UserManagement\\UserManagement.jsx":"8","G:\\Projects\\Malik Traders\\Admin Control\\MT Admin Control App\\src\\MalikTraders\\Components\\Pages\\UserManagement\\CreateUser\\CreateUser.jsx":"9","G:\\Projects\\Malik Traders\\Admin Control\\MT Admin Control App\\src\\MalikTraders\\Components\\Pages\\AccountManagement\\ModifyPayment\\ModifyPayment.jsx":"10","G:\\Projects\\Malik Traders\\Admin Control\\MT Admin Control App\\src\\MalikTraders\\Components\\Pages\\AccountManagement\\ShowAccountDetails.jsx":"11","G:\\Projects\\Malik Traders\\Admin Control\\MT Admin Control App\\src\\MalikTraders\\Components\\Pages\\Login\\Login.jsx":"12","G:\\Projects\\Malik Traders\\Admin Control\\MT Admin Control App\\src\\MalikTraders\\Components\\Pages\\ProductManager\\ProductManager.jsx":"13","G:\\Projects\\Malik Traders\\Admin Control\\MT Admin Control App\\src\\MalikTraders\\Components\\Pages\\AccountManagement\\PaymentHistory\\PaymentHistory.jsx":"14","G:\\Projects\\Malik Traders\\Admin Control\\MT Admin Control App\\src\\MalikTraders\\Components\\Pages\\ProductManager\\AddNewProduct\\AddNewProduct.jsx":"15","G:\\Projects\\Malik Traders\\Admin Control\\MT Admin Control App\\src\\Store\\User\\ActionTypes.js":"16","G:\\Projects\\Malik Traders\\Admin Control\\MT Admin Control App\\src\\MalikTraders\\Components\\AdminLayout\\AdminLayout.jsx":"17","G:\\Projects\\Malik Traders\\Admin Control\\MT Admin Control App\\src\\MalikTraders\\Components\\DashBoard\\MainDashBoard.jsx":"18","G:\\Projects\\Malik Traders\\Admin Control\\MT Admin Control App\\src\\MalikTraders\\Components\\Pages\\AccountManagement\\DisplayPaymentDetails\\PaymentDetails.jsx":"19","G:\\Projects\\Malik Traders\\Admin Control\\MT Admin Control App\\src\\MalikTraders\\Components\\Pages\\UserManagement\\UI\\TbInputControl.jsx":"20","G:\\Projects\\Malik Traders\\Admin Control\\MT Admin Control App\\src\\MalikTraders\\Components\\Pages\\AccountManagement\\UI\\AccountCard.jsx":"21","G:\\Projects\\Malik Traders\\Admin Control\\MT Admin Control App\\src\\MalikTraders\\Components\\Pages\\ProductManager\\UI\\TbInput.jsx":"22","G:\\Projects\\Malik Traders\\Admin Control\\MT Admin Control App\\src\\MalikTraders\\Components\\Pages\\UserManagement\\UserList\\AllUserList.jsx":"23","G:\\Projects\\Malik Traders\\Admin Control\\MT Admin Control App\\src\\MalikTraders\\Components\\NavBar\\NavBar.jsx":"24","G:\\Projects\\Malik Traders\\Admin Control\\MT Admin Control App\\src\\MalikTraders\\Components\\DashBoard\\DashBoardNavigator\\DashBoardNavigator.jsx":"25","G:\\Projects\\Malik Traders\\Admin Control\\MT Admin Control App\\src\\MalikTraders\\Components\\DashBoard\\MonthlyRecoveryReport\\MonthlyRecoveryReport.jsx":"26","G:\\Projects\\Malik Traders\\Admin Control\\MT Admin Control App\\src\\MalikTraders\\Components\\DashBoard\\TodayRecovery\\TodayRecovery.jsx":"27","G:\\Projects\\Malik Traders\\Admin Control\\MT Admin Control App\\src\\MalikTraders\\Components\\DashBoard\\MonthlyReport\\MonthlyReport.jsx":"28","G:\\Projects\\Malik Traders\\Admin Control\\MT Admin Control App\\src\\MalikTraders\\Components\\Pages\\UserManagement\\AddNewPayment\\AddNewPayment.jsx":"29","G:\\Projects\\Malik Traders\\Admin Control\\MT Admin Control App\\src\\MalikTraders\\Components\\DashBoard\\MonthlyReport\\MonthlyReportChart.jsx":"30"},{"size":722,"mtime":1606398692449,"results":"31","hashOfConfig":"32"},{"size":362,"mtime":499162500000,"results":"33","hashOfConfig":"32"},{"size":2039,"mtime":1634287954131,"results":"34","hashOfConfig":"32"},{"size":614,"mtime":1606449119660,"results":"35","hashOfConfig":"32"},{"size":1472,"mtime":1612217178671,"results":"36","hashOfConfig":"32"},{"size":832,"mtime":1633688298612,"results":"37","hashOfConfig":"32"},{"size":6993,"mtime":1633991114433,"results":"38","hashOfConfig":"32"},{"size":622,"mtime":1633989878225,"results":"39","hashOfConfig":"32"},{"size":13605,"mtime":1634289170496,"results":"40","hashOfConfig":"32"},{"size":2494,"mtime":1633991893265,"results":"41","hashOfConfig":"32"},{"size":6598,"mtime":1634288333255,"results":"42","hashOfConfig":"32"},{"size":5031,"mtime":1633989848049,"results":"43","hashOfConfig":"32"},{"size":2657,"mtime":1634288446113,"results":"44","hashOfConfig":"32"},{"size":8850,"mtime":1634424628009,"results":"45","hashOfConfig":"32"},{"size":2647,"mtime":1634288396229,"results":"46","hashOfConfig":"32"},{"size":86,"mtime":1606396609553,"results":"47","hashOfConfig":"32"},{"size":234,"mtime":1632593561890,"results":"48","hashOfConfig":"32"},{"size":1199,"mtime":1633946829764,"results":"49","hashOfConfig":"32"},{"size":1734,"mtime":1633983158001,"results":"50","hashOfConfig":"32"},{"size":325,"mtime":1632735638261,"results":"51","hashOfConfig":"32"},{"size":2045,"mtime":1634160504342,"results":"52","hashOfConfig":"32"},{"size":299,"mtime":1632903021914,"results":"53","hashOfConfig":"32"},{"size":5886,"mtime":1633982858231,"results":"54","hashOfConfig":"32"},{"size":2126,"mtime":1633818458493,"results":"55","hashOfConfig":"32"},{"size":921,"mtime":1633946802186,"results":"56","hashOfConfig":"32"},{"size":2093,"mtime":1633983432776,"results":"57","hashOfConfig":"32"},{"size":2591,"mtime":1633989342186,"results":"58","hashOfConfig":"32"},{"size":452,"mtime":1633949195211,"results":"59","hashOfConfig":"32"},{"size":1799,"mtime":1633039506822,"results":"60","hashOfConfig":"32"},{"size":925,"mtime":1633982072778,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"1fb5u7c",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":3,"source":"77","usedDeprecatedRules":"64"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"82","usedDeprecatedRules":"64"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"64"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"64"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"64"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":2,"source":"114","usedDeprecatedRules":"64"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"64"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"64"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"G:\\Projects\\Malik Traders\\Admin Control\\MT Admin Control App\\src\\index.js",[],["131","132"],"G:\\Projects\\Malik Traders\\Admin Control\\MT Admin Control App\\src\\reportWebVitals.js",[],"G:\\Projects\\Malik Traders\\Admin Control\\MT Admin Control App\\src\\App.js",[],"G:\\Projects\\Malik Traders\\Admin Control\\MT Admin Control App\\src\\Store\\Store.js",[],"G:\\Projects\\Malik Traders\\Admin Control\\MT Admin Control App\\src\\Store\\User\\Reducer.js",[],"G:\\Projects\\Malik Traders\\Admin Control\\MT Admin Control App\\src\\MalikTraders\\MalikTraderApp.jsx",[],"G:\\Projects\\Malik Traders\\Admin Control\\MT Admin Control App\\src\\MalikTraders\\Components\\Pages\\UserManagement\\AttachWithNewScheme\\AttachtoNewScheme.jsx",["133","134","135","136","137"],"import { Component } from \"react\";\r\nimport React from 'react'\r\nimport AdminLayout from '../../../AdminLayout/AdminLayout'\r\nimport TbInputControl from '../UI/TbInputControl'\r\nimport axios from \"axios\";\r\nimport { Redirect } from \"react-router\";\r\nimport Cookie from 'universal-cookie';\r\n\r\nclass AttachWithNewScheme extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            AccProtoType:{\r\n                \"id\": 0,\r\n                \"amountPayable\": 0,\r\n                \"monthlyInstalment\": 0,\r\n                \"isAccClosed\": false,\r\n                \"userid\": 0,\r\n                \"mtServiceId\": 0,\r\n                \"accPaymentDetails\": null\r\n            },\r\n            MTServices: null,\r\n            redirect: false,\r\n            isLogin: true\r\n        };\r\n        this.amountInputRef = React.createRef();\r\n        this.ReadyUser = this.ReadyUser.bind(this);\r\n    }\r\n\r\n    ReadyUser=(event)=>{\r\n        if(event.target.name === 'GetAmountPayable')\r\n        {\r\n            this.TotalAmountPayable(event.target)\r\n        }\r\n        else if(event.target.name === 'GetMonthlyInstallment'){\r\n            this.MonthlyInstallment(event.target)\r\n        }\r\n    }\r\n\r\n    TotalAmountPayable = target =>{\r\n        this.setState({AccProtoType: \r\n            {\r\n                \"id\": 0,\r\n                \"amountPayable\": target.value,\r\n                \"monthlyInstalment\": this.state.AccProtoType.monthlyInstalment,\r\n                \"isAccClosed\": false,\r\n                \"userid\": this.state.AccProtoType.userid,\r\n                \"mtServiceId\": this.state.AccProtoType.mtServiceId,\r\n                \"accPaymentDetails\": null\r\n            }\r\n        })\r\n    }\r\n\r\n    MonthlyInstallment = target=>{\r\n        this.setState({AccProtoType: \r\n            {\r\n                \"id\": 0,\r\n                \"amountPayable\": this.state.AccProtoType.amountPayable,\r\n                \"monthlyInstalment\": target.value,\r\n                \"isAccClosed\": false,\r\n                \"userid\": this.state.AccProtoType.userid,\r\n                \"mtServiceId\":this.state.AccProtoType.mtServiceId,\r\n                \"accPaymentDetails\": null\r\n            }\r\n        })\r\n    }\r\n\r\n    PostData=()=>{\r\n        axios.get(window.$domain + 'api/Accounts/GetAccountbyUserId/' + this.state.AccProtoType.userid)\r\n        .then(\r\n            resp=> {\r\n                var duplicated = false;\r\n                resp.data.map(acc=>{\r\n                    if(acc.mtServiceId === this.state.AccProtoType.mtServiceId)\r\n                    {\r\n                        duplicated = true;\r\n                        alert('Sorry! You are not allow to make duplication')\r\n                    }\r\n                });\r\n                if(!duplicated)\r\n                {\r\n                    axios.post(window.$domain + 'api/Accounts',this.state.AccProtoType)\r\n                        .then(resp=> {\r\n                            this.setState({redirect: true});\r\n                        }). catch(\r\n                            resp=> alert(resp.data.message)\r\n                        );\r\n                }\r\n            }\r\n        ). catch(\r\n            resp=> alert(resp.data.message)\r\n        );\r\n    }\r\n\r\n    MTServiceSelection = (event) => {\r\n        if(event.target.value !== 'Please Select Scheme/Product'){\r\n            this.state.MTServices.map(\r\n                mtService=>{\r\n                    if(mtService.name === event.target.value){\r\n                        this.setState({AccProtoType: \r\n                            {\r\n                                \"id\": 0,\r\n                                \"amountPayable\": this.state.AccProtoType.amountPayable,\r\n                                \"monthlyInstalment\": this.state.AccProtoType.monthlyInstalment,\r\n                                \"isAccClosed\": false,\r\n                                \"userid\": this.state.AccProtoType.userid,\r\n                                \"mtServiceId\": mtService.id,\r\n                                \"accPaymentDetails\": null\r\n                            }\r\n                        })\r\n                    }\r\n                }\r\n            )\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        if(this.state.AccProtoType.userid === 0){\r\n            this.setState({AccProtoType: {\r\n                \"id\": 0,\r\n                \"amountPayable\": this.state.AccProtoType.amountPayable,\r\n                \"monthlyInstalment\": this.state.AccProtoType.monthlyInstalment,\r\n                \"isAccClosed\": false,\r\n                \"userid\": this.props.match.params.id,\r\n                \"mtServiceId\": this.state.AccProtoType.mtServiceId,\r\n                \"accPaymentDetails\": null\r\n            }})\r\n        }\r\n        if(this.state.MTServices === null){\r\n            axios.get(window.$domain + 'api/MTServices').\r\n            then(resp=>{\r\n                this.setState({MTServices: resp.data});\r\n            });\r\n        }\r\n        var cookies = new Cookie();\r\n        if(cookies.get('logedInUser') === undefined)\r\n        {\r\n            this.setState({isLogin: false});\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <AdminLayout>\r\n                {this.state.isLogin?'':<Redirect to='/login'/>}\r\n                {this.state.redirect? <Redirect to='/manageuser'/>: ''}\r\n                <div className='jumbotron'>\r\n                    <div className='container-fluid'>\r\n                        <h5>Add User to New Scheme</h5>\r\n                        <hr/> \r\n                        <h6>Please Select Scheme/Product</h6>\r\n                        <hr/>\r\n                            <select class=\"form-select form-select-lg\" onChange={this.MTServiceSelection} aria-label=\".form-select-sm example\">\r\n                            <option selected>Please Select Scheme/Product</option>\r\n                                {\r\n                                    this.state.MTServices?\r\n                                    this.state.MTServices.map(MTService=>{\r\n                                        return <option key={MTService.id}>{MTService.name}</option>\r\n                                    }):\r\n                                    <option selected>Wait We are trying to Load Your Providing Services</option>\r\n                                }\r\n                            </select>\r\n                    </div>\r\n                    <hr/>\r\n                    <div class=\"form-group \">\r\n                        <label for='GetAmountPayable'>Total Amount Payable:</label>\r\n                        <input ref={this.amountInputRef} type='number' class=\"form-control\" onChange={this.ReadyUser} name='GetAmountPayable'/>\r\n                    </div>\r\n                    <TbInputControl DataInputHandler={this.ReadyUser} Name={'Monthly Installment'} inutType={'number'} ctrlName={'GetMonthlyInstallment'} />\r\n                    <button className=\"btn btn-success\" onClick={this.PostData}>Add User to this Sceme</button>\r\n                </div>\r\n            </AdminLayout>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default AttachWithNewScheme;","G:\\Projects\\Malik Traders\\Admin Control\\MT Admin Control App\\src\\MalikTraders\\Components\\Pages\\UserManagement\\UserManagement.jsx",[],"G:\\Projects\\Malik Traders\\Admin Control\\MT Admin Control App\\src\\MalikTraders\\Components\\Pages\\UserManagement\\CreateUser\\CreateUser.jsx",["138","139"],"import axios from \"axios\";\r\nimport React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router\";\r\nimport AdminLayout from \"../../../AdminLayout/AdminLayout\";\r\nimport TbInputControl from \"../UI/TbInputControl\";\r\n\r\n\r\nclass CreateNewUser extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            \"id\": 0,\r\n            \"email\": \"\",\r\n            \"role\": \"user\",\r\n            \"userName\": \"\",\r\n            \"password\": \"\",\r\n            \"userDetails\": {\r\n              \"id\": 0,\r\n              \"name\": \"\",\r\n              \"cnic\": \"\",\r\n              \"phoneNumber\": \"\",\r\n              \"address\": \"\",\r\n              \"gender\": \"\",\r\n              \"registration_Date\": \"\"\r\n            },\r\n            \"accounts\": [\r\n              {\r\n                \"id\": 0,\r\n                \"accNumber\": \"\",\r\n                \"bankName\": \"\",\r\n                \"amountPayable\": 0,\r\n                \"monthlyInstalment\": 0,\r\n                \"mtServiceId\": 0,\r\n                \"isAccClosed\": false,\r\n              }\r\n            ],\r\n            MTServices:[],\r\n            redirect: false\r\n        };\r\n        this.amountInputRef = React.createRef();\r\n        this.ReadyUser = this.ReadyUser.bind(this);\r\n    }\r\n    componentDidMount(){\r\n        if(this.state.MTServices.length === 0){\r\n            axios.get(window.$domain + 'api/MTServices').\r\n            then(MTService=>{\r\n                var forModificationState = this.state.MTServices;\r\n                forModificationState.push(MTService.data);\r\n                console.log(forModificationState)\r\n                this.setState({MTServices: forModificationState});\r\n            });\r\n            \r\n        }\r\n        console.log(this.state.MTServices)\r\n    }\r\n    ReadyUser=(event)=>{\r\n        if(event.target.name === 'GetFullName'){\r\n            this.setFullName(event.target)\r\n        }\r\n        else if(event.target.name === 'GetUserName'){\r\n            this.setUserName(event.target)\r\n        }\r\n        else if(event.target.name === 'GetGender'){\r\n            this.setGender(event.target)\r\n        }\r\n        else if(event.target.name === 'GetEmail'){\r\n            this.setEmail(event.target)\r\n        }\r\n        else if(event.target.name === 'GetPassword'){\r\n            this.setPassword(event.target)\r\n        }\r\n        else if(event.target.name === 'GetCNIC'){\r\n            this.setCNIC(event.target)\r\n        }\r\n        else if(event.target.name === 'GetAddress'){\r\n            this.setAddress(event.target)\r\n        }\r\n        else if(event.target.name === 'GetPhone'){\r\n            this.setPhoneNumber(event.target)\r\n        }\r\n        else if(event.target.name === 'GetAccountNumer'){\r\n            this.setAccountNumber(event.target)\r\n        }\r\n        else if(event.target.name === 'GetBankName'){\r\n            this.setBankName(event.target)\r\n        }\r\n        else if(event.target.name === 'GetMonthlyInstallment'){\r\n            this.setMonthlyInstallment(event.target)\r\n        }\r\n    }\r\n    setAccountNumber = (target)=>{\r\n        var newAccountState = [];\r\n        var accountData = {\r\n            \"id\": 0,\r\n            \"accNumber\": target.value,\r\n            \"bankName\": this.state.accounts[0].bankName,\r\n            \"amountPayable\": this.state.accounts[0].amountPayable,\r\n            \"monthlyInstalment\": this.state.accounts[0].monthlyInstalment,\r\n            \"mtServiceId\":this.state.accounts[0].mtServiceId,\r\n            \"isAccClosed\": false,\r\n        }\r\n        newAccountState.push(accountData);\r\n        this.setState({accounts: newAccountState})\r\n    }\r\n    setBankName = (target)=>{\r\n        var newAccountState = [];\r\n        var accountData = {\r\n            \"id\": 0,\r\n            \"accNumber\": this.state.accounts[0].accNumber ,\r\n            \"bankName\": target.value,\r\n            \"amountPayable\": this.state.accounts[0].amountPayable,\r\n            \"monthlyInstalment\": this.state.accounts[0].monthlyInstalment,\r\n            \"mtServiceId\":this.state.accounts[0].mtServiceId,\r\n            \"isAccClosed\": false,\r\n        }\r\n        newAccountState.push(accountData);\r\n        this.setState({accounts: newAccountState})\r\n    }\r\n    setMonthlyInstallment = (target)=>{\r\n        var newAccountState = [];\r\n        var accountData = {\r\n            \"id\": 0,\r\n            \"accNumber\": this.state.accounts[0].accNumber ,\r\n            \"bankName\": this.state.accounts[0].bankName ,\r\n            \"amountPayable\": this.state.accounts[0].amountPayable,\r\n            \"monthlyInstalment\": target.value,\r\n            \"mtServiceId\":this.state.accounts[0].mtServiceId,\r\n            \"isAccClosed\": false,\r\n        }\r\n        newAccountState.push(accountData);\r\n        this.setState({accounts: newAccountState})\r\n    }\r\n    setFullName =(target)=>{\r\n        this.setState({userDetails: {\r\n            \"id\": 0,\r\n            \"name\": target.value,\r\n            \"cnic\": this.state.userDetails.cnic,\r\n            \"phoneNumber\": this.state.userDetails.phoneNumber,\r\n            \"address\": this.state.userDetails.address,\r\n            \"gender\": this.state.userDetails.gender,\r\n            \"registration_Date\": this.state.userDetails.registration_Date\r\n          }});\r\n        console.log(this.state)\r\n    }\r\n    setGender =(target)=>{\r\n        this.setState({userDetails: {\r\n            \"id\": 0,\r\n            \"name\": this.state.userDetails.name,\r\n            \"cnic\": this.state.userDetails.cnic,\r\n            \"phoneNumber\": this.state.userDetails.phoneNumber,\r\n            \"address\": this.state.userDetails.address,\r\n            \"gender\": target.value,\r\n            \"registration_Date\": this.state.userDetails.registration_Date\r\n          }});\r\n    }\r\n    setUserName = (target)=>{\r\n        this.setState({userName: target.value});\r\n    }\r\n    setEmail = (target)=>{\r\n        this.setState({email: target.value});\r\n        console.log(this.state)\r\n    }\r\n    setPassword = (target)=>{\r\n        this.setState({password: target.value});\r\n        console.log(this.state)\r\n    }\r\n    setCNIC =(target)=>{\r\n        this.setState({userDetails: {\r\n            \"id\": 0,\r\n            \"name\": this.state.userDetails.name,\r\n            \"cnic\": target.value,\r\n            \"phoneNumber\": this.state.userDetails.phoneNumber,\r\n            \"address\": this.state.userDetails.address,\r\n            \"gender\": this.state.userDetails.gender,\r\n            \"registration_Date\": this.state.userDetails.registration_Date\r\n          }});\r\n        console.log(this.state)\r\n    }\r\n    setAddress =(target)=>{\r\n        this.setState({userDetails: {\r\n            \"id\": 0,\r\n            \"name\": this.state.userDetails.name,\r\n            \"cnic\": this.state.userDetails.cnic,\r\n            \"phoneNumber\": this.state.userDetails.phoneNumber,\r\n            \"address\": target.value,\r\n            \"gender\": this.state.userDetails.gender,\r\n            \"registration_Date\": this.state.userDetails.registration_Date\r\n          }});\r\n        console.log(this.state)\r\n    }\r\n    setPhoneNumber =(target)=>{\r\n        this.setState({userDetails: {\r\n            \"id\": 0,\r\n            \"name\": this.state.userDetails.name,\r\n            \"cnic\": this.state.userDetails.cnic,\r\n            \"phoneNumber\": target.value,\r\n            \"address\": this.state.userDetails.address,\r\n            \"gender\": this.state.userDetails.gender,\r\n            \"registration_Date\": this.state.userDetails.registration_Date\r\n          }});\r\n        console.log(this.state)\r\n    }\r\n    setUserType= (event)=>\r\n    {\r\n        this.setState({role: event.target.value});\r\n    }\r\n    MTServiceSelection = (event)=>{\r\n        alert(event.target.value)\r\n        this.state.MTServices[0].map(\r\n            MTservice=>{\r\n                if(event.target.value === MTservice.name){\r\n                    this.setState({accounts: \r\n                        [{\r\n                            \"id\": 0,\r\n                            \"accNumber\": this.state.accounts[0].accNumber,\r\n                            \"bankName\": this.state.accounts[0].bankName,\r\n                            \"amountPayable\": MTservice.amount,\r\n                            \"monthlyInstalment\": this.state.accounts[0].monthlyInstalment,\r\n                            \"mtServiceId\": MTservice.id,\r\n                            \"isAccClosed\": false,\r\n                        }]\r\n                    });\r\n                    this.amountInputRef.current.value = MTservice.amount;\r\n                }\r\n            }\r\n        )\r\n    }\r\n    CreatNewUser = ()=>{\r\n        axios.post(\r\n                window.$domain + 'api/Users',\r\n                {\r\n                    \"id\": 0,\r\n                    \"email\": this.state.email,\r\n                    \"userName\": this.state.userName,\r\n                    \"password\": this.state.password,\r\n                    \"role\": this.state.role,\r\n                    \"userDetail\": {\r\n                        \"id\": 0,\r\n                        \"name\": this.state.userDetails.name,\r\n                        \"cnic\": this.state.userDetails.cnic,\r\n                        \"phoneNumber\": this.state.userDetails.phoneNumber,\r\n                        \"address\": this.state.userDetails.address,\r\n                        \"gender\": this.state.userDetails.gender,\r\n                    },\r\n                    \"accounts\": [\r\n                        {\r\n                            \"id\": 0,\r\n                            \"accNumber\": this.state.accounts[0].accNumber,\r\n                            \"bankName\": this.state.accounts[0].bankName,\r\n                            \"amountPayable\": this.state.accounts[0].amountPayable,\r\n                            \"monthlyInstalment\": this.state.accounts[0].monthlyInstalment,\r\n                            \"mtServiceId\": this.state.accounts[0].mtServiceId,\r\n                            \"isAccClosed\": false,\r\n                        }\r\n                    ] \r\n                }    \r\n            )\r\n        .then(response => this.setState({redirect: true}))\r\n        .catch(\r\n            err=>\r\n            {\r\n                alert(err.response.data);\r\n            }\r\n            );\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <AdminLayout>\r\n            <div className=\"jumbotron\">\r\n                {this.state.redirect?<Redirect to='/manageuser'/>:''}\r\n                <h3>Create New User</h3>\r\n                <hr/>\r\n                <h5>Please Select User Type</h5>\r\n                <select class=\"form-select form-select-lg\" onChange={this.setUserType} aria-label=\".form-select-sm example\">\r\n                <option selected>user</option>\r\n                <option>worker</option>\r\n                </select>\r\n                <hr/>\r\n                <h5>User Information</h5>\r\n                <hr/>\r\n                    <TbInputControl DataInputHandler={this.ReadyUser} Name={'Full Name'} inutType={'text'} ctrlName={'GetFullName'} />\r\n                    <TbInputControl DataInputHandler={this.ReadyUser} Name={'User Name'} inutType={'text'} ctrlName={'GetUserName'} />\r\n                    <TbInputControl DataInputHandler={this.ReadyUser} Name={'E-mail'} inutType={'email'} ctrlName={'GetEmail'} />\r\n                    <TbInputControl DataInputHandler={this.ReadyUser} Name={'Password'} inutType={'password'} ctrlName={'GetPassword'} />\r\n                    <TbInputControl DataInputHandler={this.ReadyUser} Name={'Phone Number'} inutType={'text'} ctrlName={'GetPhone'} />\r\n                    <TbInputControl DataInputHandler={this.ReadyUser} Name={'CNIC'} inutType={'text'} ctrlName={'GetCNIC'} />\r\n                    <TbInputControl DataInputHandler={this.ReadyUser} Name={'Complete Address'} inutType={'text'} ctrlName={'GetAddress'} />\r\n                    <TbInputControl DataInputHandler={this.ReadyUser} Name={'Gender'} inutType={'text'} ctrlName={'GetGender'} />\r\n                <div className='container-fluid'>\r\n                    <h5>Account Information</h5>\r\n                    <hr/> \r\n                    <h6>Please Select Scheme/Product</h6>\r\n                    <hr/>\r\n                        <select class=\"form-select form-select-lg\" onChange={this.MTServiceSelection} aria-label=\".form-select-sm example\">\r\n                        <option selected>Please Select Scheme</option>\r\n                            {\r\n                                this.state.MTServices.length > 0?\r\n                                this.state.MTServices[0].map(MTService=>{\r\n                                    return <option key={MTService.id}>{MTService.name}</option>\r\n                                }):\r\n                                <option selected>Wait We are trying to Load Your Providing Services</option>\r\n                            }\r\n                        </select>\r\n                </div>\r\n                <hr/>\r\n                    <TbInputControl DataInputHandler={this.ReadyUser} Name={'Account Numer'} inutType={'text'} ctrlName={'GetAccountNumer'} />\r\n                    <TbInputControl DataInputHandler={this.ReadyUser} Name={'Bank Name'} inutType={'text'} ctrlName={'GetBankName'} />\r\n                    <div class=\"form-group \">\r\n                        <label for='GetAmountPayable'>Total Amount Payable:</label>\r\n                        <input ref={this.amountInputRef} type='text' class=\"form-control\" onChange={this.ReadyUser} name='GetAmountPayable'/>\r\n                    </div>\r\n                    <TbInputControl DataInputHandler={this.ReadyUser} Name={'Monthly Installment'} inutType={'text'} ctrlName={'GetMonthlyInstallment'} />\r\n                    <button className=\"btn btn-success\" onClick={this.CreatNewUser}>Create User</button>\r\n                </div>\r\n            </AdminLayout>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CreateNewUser;","G:\\Projects\\Malik Traders\\Admin Control\\MT Admin Control App\\src\\MalikTraders\\Components\\Pages\\AccountManagement\\ModifyPayment\\ModifyPayment.jsx",[],"G:\\Projects\\Malik Traders\\Admin Control\\MT Admin Control App\\src\\MalikTraders\\Components\\Pages\\AccountManagement\\ShowAccountDetails.jsx",["140","141","142"],"import axios from \"axios\";\r\nimport { Component } from \"react\";\r\nimport { Redirect } from \"react-router\";\r\nimport AdminLayout from \"../../AdminLayout/AdminLayout\";\r\nimport PaymentDetails from \"./DisplayPaymentDetails/PaymentDetails\";\r\nimport AccountCard from \"./UI/AccountCard\";\r\nimport Axios from \"axios\"\r\nimport Cookie from 'universal-cookie/es6';\r\nimport { Spinner } from 'react-bootstrap';\r\n\r\nclass AccountDetails extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            Accounts:null,\r\n            Schemes: null,\r\n            DisplayAcc: null,\r\n            AccId: 0,\r\n            gotoHistoryPaymentRedirect: null,\r\n            isLogin: true\r\n        }\r\n    }\r\n\r\n    gotoHistoryPaymentRedirectHandler=(AccId)=>{\r\n        this.setState({gotoHistoryPaymentRedirect: {\r\n            AccId: AccId,\r\n            redir: true \r\n        }})\r\n    }\r\n    AccountEnableHandler =(AccId)=>{\r\n        \r\n        var ClosingDescription = window.prompt(\"what is the reason of Enabling Account\");\r\n        if(ClosingDescription !== null)\r\n        if(window.confirm('Attention Please! ' + 'Opration Defination: Are you sure you want to --Enable-- this account'))\r\n        {\r\n            Axios.put(window.$domain + 'api/Accounts/DisableAndEnableHandler/' + AccId + '?ClosingDescription=' + ClosingDescription)\r\n                .then(resp=> {\r\n                    console.log(resp);\r\n                })\r\n                .catch(resp=> console.log(resp));\r\n            this.setState({Accounts: null});\r\n        }\r\n    }\r\n    AccountDisableHandler =(AccId)=>{\r\n        \r\n        var ClosingDescription = window.prompt(\"what is the reason of Disabling Account\");\r\n        if(ClosingDescription !== null)\r\n        if(window.confirm('Attention Please! ' + 'Opration Defination: Are you sure you want to disable this account'))\r\n        {\r\n            Axios.put(window.$domain + 'api/Accounts/DisableAndEnableHandler/' + AccId + '?ClosingDescription=' + ClosingDescription)\r\n                .then(resp=> {\r\n                    console.log(resp);\r\n                })\r\n                .catch(resp=> console.log(resp));\r\n                this.setState({Accounts: null});\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        if(this.state.Accounts === null){\r\n            axios.get(window.$domain + 'api/Accounts/GetAccountbyUserId/' + this.props.match.params.id)\r\n            .then(\r\n                resp=>{\r\n                    this.setState({Accounts: resp.data});\r\n                }\r\n            )\r\n            axios.get(window.$domain + 'api/MTServices')\r\n            .then(\r\n                resp=>{\r\n                    this.setState({Schemes: resp.data});\r\n                }\r\n            )\r\n            \r\n        }\r\n        var cookies = new Cookie();\r\n        if(cookies.get('logedInUser') === undefined)\r\n        {\r\n            this.setState({isLogin: false});\r\n        }\r\n    }\r\n    componentDidUpdate(){\r\n        if(this.state.Accounts === null){\r\n            axios.get(window.$domain + 'api/Accounts/GetAccountbyUserId/' + this.props.match.params.id)\r\n            .then(\r\n                resp=>{\r\n                    this.setState({Accounts: resp.data});\r\n                }\r\n            )\r\n            axios.get(window.$domain + 'api/MTServices')\r\n            .then(\r\n                resp=>{\r\n                    this.setState({Schemes: resp.data});\r\n                }\r\n            )\r\n        }\r\n    }\r\n\r\n    paymentDisplayHandler = (Accid)=>{\r\n        this.state.Accounts.map(\r\n            Account => {\r\n                if(Account.id === Accid ){\r\n                    this.setState({DisplayAcc: Account.accPaymentDetails});\r\n                    this.setState({AccId: Accid})\r\n                }\r\n            }\r\n        )\r\n    }\r\n    render(){\r\n        console.log(this.props.match.params.id)\r\n        return(\r\n            <AdminLayout>\r\n                {this.state.isLogin?'':<Redirect to='/login'/>}\r\n                {this.state.gotoHistoryPaymentRedirect=== null? '':<Redirect to={'/Accounts/' + this.state.gotoHistoryPaymentRedirect.AccId + '/Payment'} /> }\r\n                <div className='jumbotron mt-3'>\r\n                    <div className='row'>\r\n                        <div className='col-md-3'>\r\n                            <h5 style={{textAlign: 'center'}}>Participated Schemes</h5>\r\n                            {\r\n                                this.state.Schemes !== null && this.state.Accounts !== null ?this.state.Accounts.map(\r\n                                    Account => this.state.Schemes.map(\r\n                                        Scheme=> Scheme.id === Account.mtServiceId ? <AccountCard \r\n                                                                                        schemeName={Scheme.name} \r\n                                                                                        desc={Scheme.details} \r\n                                                                                        AccId={Account.id} \r\n                                                                                        paymentDisplayHandler ={this.paymentDisplayHandler}\r\n                                                                                        gotoPaymentHistory= {this.gotoHistoryPaymentRedirectHandler}\r\n                                                                                        isAccClosed= {Account.isAccClosed}\r\n                                                                                        disableAcc={this.AccountDisableHandler}\r\n                                                                                        closingReason={Account.closingDescription}\r\n                                                                                        enableAcc={this.AccountEnableHandler}/>: ''\r\n                                    ) \r\n                                ):  <div className='m-5'><Spinner animation=\"grow\" /></div>\r\n                            }\r\n                        </div>\r\n                        <div className='col-md-9'>\r\n                            <h5 style={{textAlign: 'center'}}>Account Payment Details</h5>\r\n                            {\r\n                                this.state.DisplayAcc? \r\n                                <PaymentDetails peymentHistory={this.state.DisplayAcc} AccId = {this.state.AccId}/>\r\n                                :'Please select a Scheme'\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </AdminLayout>\r\n        );\r\n    }\r\n}\r\nexport default AccountDetails;\r\n\r\n","G:\\Projects\\Malik Traders\\Admin Control\\MT Admin Control App\\src\\MalikTraders\\Components\\Pages\\Login\\Login.jsx",[],"G:\\Projects\\Malik Traders\\Admin Control\\MT Admin Control App\\src\\MalikTraders\\Components\\Pages\\ProductManager\\ProductManager.jsx",["143"],"import { Component } from \"react\";\r\nimport AdminLayout from \"../../AdminLayout/AdminLayout\";\r\nimport Axios from \"axios\";\r\nimport {Link} from 'react-router-dom';\r\nimport Cookie from 'universal-cookie';\r\nimport { Redirect } from \"react-router\";\r\n\r\nclass ProductManager extends Component{\r\n    state = {\r\n        mtServices: null,\r\n        isLogin: true\r\n    }\r\n    \r\n\r\n    componentDidMount(){\r\n        if(this.state.mtServices===null){\r\n            Axios.get(window.$domain + 'api/MTServices').then(\r\n                resp=>{\r\n                    this.setState({mtServices: resp.data});\r\n                }\r\n            ).catch(\r\n                err=>{\r\n                    alert('Page: Product Load =>'+ err)\r\n                }\r\n            )\r\n        }\r\n        var cookies = new Cookie();\r\n        if(cookies.get('logedInUser') === undefined)\r\n        {\r\n            this.setState({isLogin: false});\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <AdminLayout>\r\n                {/* {this.state.isLogin?'':<Redirect to='/login'/>} */}\r\n                <div className='jumbotron'>\r\n                    <h3>Manage Products/Schemes</h3>\r\n                    <div className='row m-1 overflow-auto'>\r\n                        <table className=\"table shadow table-bordered \">\r\n                            <thead>\r\n                                <tr >\r\n                                    <th>Id</th>\r\n                                    <th>Name</th>\r\n                                    <th>Total Amount</th>\r\n                                    <th>Details</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                            {\r\n                                this.state.mtServices?\r\n                                this.state.mtServices.map(service=>{\r\n                                    return  <tr>\r\n                                                <td>{service.id}</td>\r\n                                                <td>{service.name}</td>\r\n                                                <td>{service.amount}</td>\r\n                                                <td>{service.details}</td>\r\n                                            </tr>\r\n                                }):'we are loading data from server'\r\n                            }\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                    <Link className='btn btn-success shadow' to='/AddProduct' >Add More Product</Link>\r\n                </div>\r\n            </AdminLayout>\r\n\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default ProductManager;","G:\\Projects\\Malik Traders\\Admin Control\\MT Admin Control App\\src\\MalikTraders\\Components\\Pages\\AccountManagement\\PaymentHistory\\PaymentHistory.jsx",["144","145","146","147","148"],"G:\\Projects\\Malik Traders\\Admin Control\\MT Admin Control App\\src\\MalikTraders\\Components\\Pages\\ProductManager\\AddNewProduct\\AddNewProduct.jsx",[],"G:\\Projects\\Malik Traders\\Admin Control\\MT Admin Control App\\src\\Store\\User\\ActionTypes.js",[],"G:\\Projects\\Malik Traders\\Admin Control\\MT Admin Control App\\src\\MalikTraders\\Components\\AdminLayout\\AdminLayout.jsx",[],"G:\\Projects\\Malik Traders\\Admin Control\\MT Admin Control App\\src\\MalikTraders\\Components\\DashBoard\\MainDashBoard.jsx",[],"G:\\Projects\\Malik Traders\\Admin Control\\MT Admin Control App\\src\\MalikTraders\\Components\\Pages\\AccountManagement\\DisplayPaymentDetails\\PaymentDetails.jsx",[],"G:\\Projects\\Malik Traders\\Admin Control\\MT Admin Control App\\src\\MalikTraders\\Components\\Pages\\UserManagement\\UI\\TbInputControl.jsx",[],"G:\\Projects\\Malik Traders\\Admin Control\\MT Admin Control App\\src\\MalikTraders\\Components\\Pages\\AccountManagement\\UI\\AccountCard.jsx",["149"],"\r\nimport { useState } from 'react';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport styles from './CardStyling.module.css'; \r\n  console.log(styles)\r\nconst AccountCard= props =>{\r\n    var [showToast,setShowtoast] = useState(false);\r\n    var toastAccountClose=toast(props.closingReason, {\r\n                                    position: \"top-right\",\r\n                                    autoClose: 10000,\r\n                                    hideProgressBar: false,\r\n                                    closeOnClick: true,\r\n                                    pauseOnHover: true,\r\n                                    draggable: true,\r\n                                    progress: undefined,\r\n                                    });\r\n    return(\r\n        <div class=\"card shadow m-2\" style={{width: '12rem'}}>\r\n            {showToast? <ToastContainer/>: ''}\r\n            <div class=\"card-body\">\r\n                <h5 class=\"card-title\">{props.schemeName}</h5>\r\n                <p class=\"card-text\">{props.desc}</p>\r\n                {props.isAccClosed? '':<button onClick={()=>props.paymentDisplayHandler(props.AccId)} class=\"btn btn-success\">Pay Installment</button>}\r\n                <button onClick={()=>{props.gotoPaymentHistory(props.AccId)}} className='btn btn-info mt-1'>Edit History</button>\r\n                {props.isAccClosed? '' :<button onClick={()=>{props.disableAcc(props.AccId)}} className='btn btn-danger mt-1'>Disable Account</button>}\r\n                {props.isAccClosed?<button onClick={()=>setShowtoast(!showToast)} className='btn btn-primary mt-1'>Show Reason</button> :''}\r\n            </div>\r\n            {props.isAccClosed? <span onClick={props.isAccClosed?()=>props.enableAcc(props.AccId):''} class={\"badge badge-danger \" + styles.zoom} > <i  class=\"fa fa-lock\" aria-hidden=\"true\"></i></span>:<span class= {\"badge badge-success \" + styles.zoom}> <i  class=\"fa fa-check\" aria-hidden=\"true\"></i></span>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AccountCard;","G:\\Projects\\Malik Traders\\Admin Control\\MT Admin Control App\\src\\MalikTraders\\Components\\Pages\\ProductManager\\UI\\TbInput.jsx",[],"G:\\Projects\\Malik Traders\\Admin Control\\MT Admin Control App\\src\\MalikTraders\\Components\\Pages\\UserManagement\\UserList\\AllUserList.jsx",["150","151","152"],"import { Component } from \"react\";\r\nimport Axios from \"axios\"\r\nimport {Link} from 'react-router-dom'\r\n\r\nimport { Spinner } from 'react-bootstrap';\r\nclass UserList extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          userList: []\r\n        };\r\n    this.LoadUserList = this.LoadUserList.bind(this);\r\n    }\r\n\r\n     LoadUserList=(event)=>{\r\n        if(event === undefined)\r\n        Axios.get(window.$domain + 'api/Users').then(\r\n            resp=>{\r\n                this.setState({userList: []});\r\n                this.setState({userList: resp.data});\r\n            }\r\n        ).catch(\r\n            err=>{\r\n                alert('Page:manageuser =>'+err)\r\n            }\r\n        )\r\n        else if(event.target.name === 'SearchByCnic' && event.target.value !== '' ){\r\n            Axios.get(window.$domain + 'api/Users/SearchUserbyCNIC/' + event.target.value).\r\n            then(\r\n                resp=>{\r\n                    this.setState({userList: resp.data});\r\n                }\r\n            ).catch(\r\n                err=>{\r\n                    alert('Page: Manage User =>'+err)\r\n                }\r\n            )\r\n        }\r\n        else if(event.target.name === 'SearchByName' && event.target.value !== ''){\r\n            Axios.get(window.$domain + 'api/Users/SearchUserbyName/' + event.target.value).\r\n            then(\r\n                resp=>{\r\n                    this.setState({userList: resp.data});\r\n                }\r\n            ).catch(\r\n                err=>{\r\n                    alert('Page: Manage User =>'+err)\r\n                }\r\n            )\r\n        }\r\n    }\r\n    UserEnableandDisableHandler = (userId)=>\r\n    {\r\n        if(window.confirm('Attention Please! ' + 'Opration Defination: If Your User is Enabled turn Disabled if Disabled turn Enabled.'))\r\n        {\r\n            Axios.post(window.$domain + 'api/Users/UserAccountEnableandDisableHandler/' + userId)\r\n                .then(resp=> {\r\n                    console.log(resp);\r\n                    this.LoadUserList();\r\n                })\r\n                .catch(resp=> console.log(resp));\r\n            \r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        if(this.state.userList.length === 0)\r\n        this.LoadUserList();\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"jumbotron container-fluid overflow-auto\">\r\n               <div className='row ml-2'>\r\n                    <div class=\"form-group ml-1\">\r\n                        <label>Search by CNIC Number:</label>\r\n                        <input  type='text' class=\"form-control shadow\" onChange={this.LoadUserList} name='SearchByCnic'/>\r\n                    </div>\r\n                    <div class=\"form-group ml-1\">\r\n                        <label>Search by Name:</label>\r\n                        <input  type='text' class=\"form-control shadow\" onChange={this.LoadUserList} name='SearchByName'/>\r\n                    </div>\r\n               </div>\r\n                <h3>Users</h3>\r\n                <div className='row shadow overflow-auto m-1'>\r\n                <table className=\"table  table-bordered \">\r\n                    <thead>\r\n                        <tr >\r\n                            <th>System Id</th>\r\n                            <th>Role</th>\r\n                            <th>Name</th>\r\n                            <th>Accounts Details</th>\r\n                            <th>Add to new Scheme</th>\r\n                            <th>Gender</th>\r\n                            <th>User Name</th>\r\n                            <th>Email</th>\r\n                            <th>Phone Number</th>\r\n                            <th>CNIC</th>\r\n                            <th >Last Login (DayName/Month/Day/Year) </th>\r\n                            <th>Registration Date (DayName/Month/Day/Year)</th>\r\n                            <th>User Enabled</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            this.state.userList.length > 0 ?\r\n                            this.state.userList.map(user=>{\r\n                                \r\n                                return <tr key={user.id}>\r\n                                    <td>{user.id}</td>\r\n                                    <td>{user.role}</td>\r\n                                    <td>{user.name}</td>\r\n                                    <td>\r\n                                        <Link to={'/ShowAccountDetails/'+ user.id} >Show</Link>\r\n                                    </td>\r\n                                    <td>\r\n                                        <Link to={'/User/'+ user.id + '/AddtoNewScheme'} >Add</Link>\r\n                                    </td>\r\n                                    <td>{user.gender}</td>\r\n                                    <td>{user.userName}</td>\r\n                                    <td>{user.email}</td>\r\n                                    <td>{user.phoneNumber}</td>\r\n                                    <td>{user.cnic}</td>\r\n                                    <td>{new Date(user.lastLogin).toDateString() + ' ' \r\n                                     + new Date(user.lastLogin).toLocaleTimeString() }</td>\r\n                                    <td>{new Date(user.registration_Date).toDateString()}</td>\r\n                                    <td onClick={()=> this.UserEnableandDisableHandler(user.id)}>\r\n                                        {user.isUserDisabled? <i  class=\"fa fa-lock\" aria-hidden=\"true\"></i> :<i class=\"fa fa-check\" aria-hidden=\"true\"></i>}\r\n                                    </td>\r\n                                </tr>\r\n                            }): <Spinner animation=\"grow\"  /> \r\n                        }\r\n                    </tbody>\r\n                </table>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UserList;","G:\\Projects\\Malik Traders\\Admin Control\\MT Admin Control App\\src\\MalikTraders\\Components\\NavBar\\NavBar.jsx",[],"G:\\Projects\\Malik Traders\\Admin Control\\MT Admin Control App\\src\\MalikTraders\\Components\\DashBoard\\DashBoardNavigator\\DashBoardNavigator.jsx",[],"G:\\Projects\\Malik Traders\\Admin Control\\MT Admin Control App\\src\\MalikTraders\\Components\\DashBoard\\MonthlyRecoveryReport\\MonthlyRecoveryReport.jsx",[],"G:\\Projects\\Malik Traders\\Admin Control\\MT Admin Control App\\src\\MalikTraders\\Components\\DashBoard\\TodayRecovery\\TodayRecovery.jsx",["153","154"],"import axios from 'axios';\r\nimport {Component} from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nclass TodayRecovery extends Component {\r\n\r\n    state= {\r\n        dataArray: [],\r\n        recoverySum: 0\r\n    }\r\n\r\n    loadData = ()=>{\r\n        axios.get(window.$domain + 'api/Analatics/GetTodayRecovery')\r\n        .then(resp=>{\r\n            this.setState({dataArray: resp.data});\r\n            this.state.dataArray.map(\r\n              data=>{\r\n                this.setState({recoverySum: this.state.recoverySum + data.payed_Amount});\r\n              }\r\n            )\r\n        });\r\n    }\r\n    componentDidMount(){\r\n        if(this.state.dataArray.length === 0)\r\n        this.loadData();\r\n        \r\n    }\r\n    render(){\r\n      var sum = 0;\r\n        return <>\r\n          <div class=\"card  shadow h-30 py-1\">\r\n            <div class=\"card-body\">\r\n                <div class=\"row no-gutters align-items-center\">\r\n                    <div class=\"col mr-2\">\r\n                        <div class=\"text-xs font-weight-bold text-primary text-uppercase mb-1\">\r\n                            Gain Recovery (Today)</div>\r\n                        <div class=\"h5 mb-0 font-weight-bold text-gray-800\">PKR{' '+this.state.recoverySum}</div>\r\n                    </div>\r\n                    <div class=\"col-auto\">\r\n                        <i class=\"fas fa-calendar fa-2x text-gray-300\"></i>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n          </div>\r\n          <table class=\"table shadow table-bordered\">\r\n            <thead>\r\n              <tr>\r\n                <th >Client Name</th>\r\n                <th >Phone</th>\r\n                <th >Payed Amount</th>\r\n                <th >Scheme Name</th>\r\n                <th >Payment Time</th>\r\n                <th >Show Account</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {\r\n                  this.state.dataArray.length !== 0 ? this.state.dataArray.map(\r\n                    data =>{\r\n                    return  <tr>\r\n                                  <th>{data.name}</th>\r\n                                  <td>{data.phone}</td>\r\n                                  <td>{data.payed_Amount}</td>\r\n                                  <td>{data.scheme}</td>\r\n                                  <td>{data.pay_Time}</td>\r\n                                  <td><Link to={'/Accounts/'+ data.accId +'/Payment'}>show</Link></td>\r\n                              </tr>}\r\n                ): ''\r\n              }\r\n            </tbody>\r\n          </table>\r\n        </>\r\n    }\r\n}\r\n\r\nexport default TodayRecovery;","G:\\Projects\\Malik Traders\\Admin Control\\MT Admin Control App\\src\\MalikTraders\\Components\\DashBoard\\MonthlyReport\\MonthlyReport.jsx",[],"G:\\Projects\\Malik Traders\\Admin Control\\MT Admin Control App\\src\\MalikTraders\\Components\\Pages\\UserManagement\\AddNewPayment\\AddNewPayment.jsx",["155"],"import axios from \"axios\";\r\nimport { Component } from \"react\";\r\nimport { Redirect } from \"react-router\";\r\nimport AdminLayout from \"../../../AdminLayout/AdminLayout\";\r\nimport TbInputControl from \"../UI/TbInputControl\";\r\nimport Cookie from 'universal-cookie'\r\nclass AddNewPayment extends Component{\r\n    state = {\r\n        amount: 0,\r\n        redirect: false\r\n    }\r\n    ReadyUser = event =>{\r\n        if(event.target.value > 0)\r\n            this.setState({amount: event.target.value})\r\n    }\r\n    postPaymnet= ()=>{\r\n        var cookies = new Cookie();\r\n        axios.post(\r\n            window.$domain + 'api/AccDetails',\r\n            {\r\n                \"id\": 0,\r\n                \"payedAmount\": this.state.amount,\r\n                \"payingDate\": \"2021-09-27T22:15:41.611Z\",\r\n                \"accId\": this.props.Accid,\r\n                \"postedByUserId\": cookies.get('logedInUser').id\r\n            }\r\n        ).then(\r\n            resp=>{\r\n                console.log(resp)\r\n                this.setState({redirect: true});\r\n            }\r\n        )\r\n    }\r\n    render(){\r\n        return(\r\n                <div className=\"jumbotron mt-3\">\r\n                    {\r\n                        this.state.redirect ? <Redirect to={'/Accounts/'+this.props.Accid+'/Payment'} />: ''\r\n                    }\r\n                    <h3>Add Payment</h3>\r\n                    <hr/>\r\n                    <h5>Please fill this form carefully, This transection is ir-revercible</h5>\r\n                    <hr/>\r\n                    <TbInputControl DataInputHandler={this.ReadyUser} Name={'Payment'} inutType={'number'} ctrlName={'Add Payment'} />\r\n                    <button onClick={this.postPaymnet} className='btn btn-success'>Post Amount</button>\r\n                </div>\r\n        )\r\n    }\r\n}\r\nexport default AddNewPayment;","G:\\Projects\\Malik Traders\\Admin Control\\MT Admin Control App\\src\\MalikTraders\\Components\\DashBoard\\MonthlyReport\\MonthlyReportChart.jsx",[],{"ruleId":"156","replacedBy":"157"},{"ruleId":"158","replacedBy":"159"},{"ruleId":"160","severity":1,"message":"161","line":69,"column":9,"nodeType":"162","messageId":"163","endLine":90,"endColumn":17,"fix":"164"},{"ruleId":"165","severity":1,"message":"166","line":73,"column":34,"nodeType":"167","messageId":"168","endLine":73,"endColumn":36},{"ruleId":"160","severity":1,"message":"161","line":82,"column":21,"nodeType":"162","messageId":"163","endLine":85,"endColumn":34,"fix":"169"},{"ruleId":"165","severity":1,"message":"166","line":98,"column":26,"nodeType":"167","messageId":"168","endLine":98,"endColumn":28},{"ruleId":"170","severity":1,"message":"171","line":130,"column":57,"nodeType":"162","messageId":"172","endLine":130,"endColumn":58,"fix":"173"},{"ruleId":"170","severity":1,"message":"171","line":45,"column":57,"nodeType":"162","messageId":"172","endLine":45,"endColumn":58,"fix":"174"},{"ruleId":"165","severity":1,"message":"166","line":210,"column":22,"nodeType":"167","messageId":"168","endLine":210,"endColumn":24},{"ruleId":"175","severity":1,"message":"176","line":34,"column":48,"nodeType":"177","messageId":"178","endLine":34,"endColumn":49},{"ruleId":"175","severity":1,"message":"176","line":48,"column":48,"nodeType":"177","messageId":"178","endLine":48,"endColumn":49},{"ruleId":"165","severity":1,"message":"166","line":100,"column":21,"nodeType":"167","messageId":"168","endLine":100,"endColumn":23},{"ruleId":"179","severity":1,"message":"180","line":6,"column":10,"nodeType":"181","messageId":"182","endLine":6,"endColumn":18},{"ruleId":"179","severity":1,"message":"183","line":8,"column":8,"nodeType":"181","messageId":"182","endLine":8,"endColumn":20},{"ruleId":"165","severity":1,"message":"166","line":33,"column":37,"nodeType":"167","messageId":"168","endLine":33,"endColumn":39},{"ruleId":"165","severity":1,"message":"166","line":93,"column":41,"nodeType":"167","messageId":"168","endLine":93,"endColumn":43},{"ruleId":"165","severity":1,"message":"166","line":168,"column":54,"nodeType":"167","messageId":"168","endLine":168,"endColumn":56},{"ruleId":"184","severity":1,"message":"185","line":210,"column":9,"nodeType":"186","endLine":210,"endColumn":113},{"ruleId":"179","severity":1,"message":"187","line":9,"column":9,"nodeType":"181","messageId":"182","endLine":9,"endColumn":26},{"ruleId":"170","severity":1,"message":"171","line":28,"column":91,"nodeType":"162","messageId":"172","endLine":28,"endColumn":92,"fix":"188"},{"ruleId":"170","severity":1,"message":"171","line":40,"column":91,"nodeType":"162","messageId":"172","endLine":40,"endColumn":92,"fix":"189"},{"ruleId":"175","severity":1,"message":"176","line":54,"column":48,"nodeType":"177","messageId":"178","endLine":54,"endColumn":49},{"ruleId":"165","severity":1,"message":"166","line":18,"column":19,"nodeType":"167","messageId":"168","endLine":18,"endColumn":21},{"ruleId":"179","severity":1,"message":"190","line":30,"column":11,"nodeType":"181","messageId":"182","endLine":30,"endColumn":14},{"ruleId":"179","severity":1,"message":"191","line":4,"column":8,"nodeType":"181","messageId":"182","endLine":4,"endColumn":19},"no-native-reassign",["192"],"no-negated-in-lhs",["193"],"no-whitespace-before-property","Unexpected whitespace before property catch.","MemberExpression","unexpectedWhitespace",{"range":"194","text":"195"},"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",{"range":"196","text":"195"},"dot-location","Expected dot to be on same line as property.","expectedDotBeforeProperty",{"range":"197","text":"198"},{"range":"199","text":"198"},"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'ReactToPrint' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'toastAccountClose' is assigned a value but never used.",{"range":"200","text":"198"},{"range":"201","text":"198"},"'sum' is assigned a value but never used.","'AdminLayout' is defined but never used.","no-global-assign","no-unsafe-negation",[3103,3105],".",[2961,2963],[4757,4772],"\r\n            .",[1366,1381],[902,917],[1348,1363]]